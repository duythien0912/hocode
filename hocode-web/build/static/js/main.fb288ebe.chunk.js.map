{"version":3,"sources":["components/profilePage/content/icons/user.svg","components/profilePage/content/icons/padlock-unlock.svg","components/coursePage/body/CourseItem.js","components/coursePage/body/CourseBody1.js","js/utils/setAuthToken.js","js/actions/authActions.js","js/actions/types.js","js/actions/userAction.js","components/coursePage/header/CourseHeader.js","components/coursePage/CoursePage.js","components/taskPage/body/TaskItem.js","components/taskPage/body/TaskBody.js","components/taskPage/header/TaskHeader.js","components/taskPage/TaskPage.js","components/minitaskPage/body/MiniTaskDesc.js","components/minitaskPage/header/UserMenu.js","components/minitaskPage/header/MiniTaskHeader.js","components/minitaskPage/body/CodeEditor.js","components/minitaskPage/body/ResultPanel.js","components/minitaskPage/body/TestsPanel.js","components/minitaskPage/MiniTaskPage.js","components/minitaskPage/MiniTaskPageNoSplit.js","components/minitaskPage/MinitaskPageResponsive.js","components/homePage/HomePage.js","common/regex.js","components/signUpPage1/SignUpPage.js","components/searchCertPage/SearchCertPage.js","components/minitaskPage/ReactMde.js","components/createMinitaskPage/body/CodeEditor.js","components/createMinitaskPage/body/CreateMiniTaskBody.js","components/createMinitaskPage/CreateMiniTaskPage.js","components/adminPage/hocode/auth/authProvider.js","components/adminPage/hocode/catchAll.js","components/adminPage/hocode/customRoutes.js","components/adminPage/hocode/dataProvider.js","components/adminPage/hocode/Menu.js","components/adminPage/hocode/utils.js","components/adminPage/hocode/MyLayout.js","components/adminPage/hocode/theme.js","components/adminPage/hocode/customActions/ModelCourseEditToolbar.js","components/adminPage/hocode/filters/ModelCourseFilter.js","components/adminPage/hocode/resources/ModelCourse.js","components/profilePage/content/minitask/CodeEditor.js","components/profilePage/content/minitask/ReactMde.js","components/profilePage/content/minitask/ShowUnitTest.js","components/profilePage/content/minitask/MinitaskEdit.js","components/profilePage/content/minitask/CreateMiniTaskBody.js","components/adminPage/hocode/filters/ModelMinitaskFilter.js","components/adminPage/hocode/resources/ModelMinitask.js","components/adminPage/hocode/customActions/ModelTaskEditToolbar.js","components/adminPage/hocode/filters/ModelTaskFilter.js","components/adminPage/hocode/resources/ModelTask.js","components/adminPage/hocode/customActions/ModelCertEditToolbar.js","components/adminPage/hocode/filters/ModelCertFilter.js","components/adminPage/hocode/resources/ModelCert.js","js/reducers/authReducer.js","js/reducers/errorReducer.js","js/reducers/userReducer.js","js/reducers/index.js","js/store/store.js","components/adminPage/hocode/ReactAdmin.js","components/profilePage/content/account/Account.js","components/profilePage/content/course/CourseItem.js","components/profilePage/content/course/CourseBody1.js","components/profilePage/content/overview/Overview.js","components/profilePage/content/print/Certificate.js","components/profilePage/content/print/PrintBody.js","components/profilePage/content/task/TaskItem.js","components/profilePage/content/task/TaskBody.js","components/profilePage/header/UserMenu.js","components/profilePage/header/AppBarContent.js","components/profilePage/navRight/NavRight.js","components/profilePage/ProfilePage.js","components/loginPage1/LoginPage.js","private-route/PrivateRoute.js","App.js","serviceWorker.js","index.js","components/minitaskPage/giphy.gif","components/minitaskPage/play-button.svg","components/profilePage/content/icons/hoanthanh.svg","components/profilePage/content/icons/chuahoanthanh.svg","components/coursePage/header/logo.png","components/taskPage/icons/hoanthanh.svg","components/taskPage/icons/user.svg","components/taskPage/icons/chuahoanthanh.svg","components/taskPage/icons/padlock-unlock.svg","components/taskPage/header/logo.png"],"names":["module","exports","CourseItem","this","props","classes","course","console","log","Grid","container","direction","style","height","display","justifyContent","alignItems","className","courseItem","item","width","overflow","src","background_image","objectFit","borderRadius","marginTop","alt","justify","padding","margin","textAlign","textTransform","color","fontWeight","fontFamily","course_name","task_solved","tasks_complete","task_count","Component","withStyles","boxShadow","background","cursor","CourseBody","state","courses","axios","get","then","res","data","setState","CourseContainer","xs","sm","map","key","id","textDecoration","to","paddingTop","minHeight","setAuthToken","token","defaults","headers","common","setCurrentUser","user","type","payload","logoutUser","dispatch","localStorage","removeItem","submitUpdateMinitask","minitask_id","task_id","post","catch","err","getUser","setUndefinedNextMinitask","undefined","CourseHeader","onLogout","e","preventDefault","history","push","bind","htmlFor","href","require","codepoint","firstname","onClick","connect","auth","rootReducer","errors","CoursePage","Fragment","TaskItem","minitask","status","flexGrow","mini_task_name","vitri","backgroundColor","point_unlock","task","md","marginBottom","zIndex","textOverflow","whiteSpace","task_name","minitasks","MiniTaskItem","renderMiniItem","TaskBody","tasks","courseId","TasksContainer","TaskHeader","TaskPage","params","match","MiniTaskDesc","DescContainer","marginRight","level","code_point","escapeHtml","source","mini_task_desc","renderers","linkReference","reference","$ref","children","heading","inlineCode","position","StyledMenu","paper","border","paddingLeft","paddingRight","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","palette","white","MenuItem","React","useState","anchorEl","setAnchorEl","aria-controls","aria-haspopup","variant","event","currentTarget","keepMounted","open","Boolean","onClose","fontSize","marginLeft","MiniTaskHeader","onBack","goBack","minitaskName","UserMenu","CodeEditor","value","userCode","options","mode","lineNumbers","highlightSelectionMatches","indentUnit","tabSize","lineWrapping","dragDrop","autoCloseBrackets","spellcheck","autocorrect","extraKeys","MarkText","from","line","ch","css","onBeforeChange","editor","updateUserCode","onChange","TabPanel","index","other","Typography","component","role","hidden","aria-labelledby","a11yProps","LinkTab","Tab","minWidth","useStyles","makeStyles","ResultPanel","setValue","unit_tests","result","flexDirection","Tabs","newValue","aria-label","label","overflowY","overflowX","unit_test","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","inputs","input","expected_output","stdout","errorRuntime","error","WASSUCCESSFUL","COMPLETEDIN","RUNCOUNT","GETFAILURECOUNT","GETALLFAILURE","testfail","DETAIL","renderResultPanel","TestsPanel","isLoading","sizeUnit","size","loading","renderTestsPanel","MiniTaskPage","handleClickSnack","handleCloseSnack","isLoadingComponent","executeCode","submitCode","resetCode","createFileTest","minitaskId","template_code","prevProps","formatCode","js_beautify","max_preserve_newlines","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","dismiss","DismissReason","cancel","junit4","output_type_func","includes","forEach","inputsFormat","substring","length","name_func","code","test","response","stderr","backdrop","toast","containerId","Snackbar","ContentProps","autoHideDuration","message","sizes","minSize","expandToMin","gutterSize","gutterAlign","snapOffset","dragInterval","bottom","right","beautifyCode","renderPassedTestCount","disabled","next_minitask","enableMultiContainer","POSITION","TOP_RIGHT","spacing","MinitaskPageResponsive","minDeviceWidth","maxDeviceWidth","MiniTaskPageNoSplit","Copyright","align","Date","getFullYear","isAuthenticated","nextProps","backgroundPosition","backgroundRepeat","backgroundSize","Button","startIcon","gutterBottom","paragraph","cardGrid","paddingBottom","card","regexEmail","regexPassword","CssTextField","borderBottomColor","borderColor","TextField","SignUpPage","isError","errorFormNew","errorForm","target","email","password","password2","onSubmit","messageError","trim","String","toLowerCase","firstName","lastName","newUser","registerUser","val","Container","maxWidth","CssBaseline","Box","borderBottom","form","noValidate","autoComplete","name","required","fullWidth","autoFocus","helperText","submit","mt","body","avatar","userData","SearchCertPage","onSubmitSearch","rows","Axios","searchID","handleChange","Paper","rootSearch","InputBase","placeholder","inputProps","IconButton","iconButton","Table","table","TableHead","TableRow","TableCell","TableBody","row","scope","search_id","timestamp","toLocaleString","CircularProgress","viewBox","xmlns","fill","fillRule","transform","fillOpacity","cx","cy","rx","ry","d","searchIcon","pointerEvents","inputRoot","inputInput","search","flex","withTheme","ReactMde","handleMarkdownChange","spellChecker","inputList","input_type","input_name","join","readOnly","updateTemplateCode","selectStyles","menu","styles","CreateMiniTaskBody","user_code","taskId","coursesOption","tasksOption","course_id","createRef","courses_ref","tasks_ref","handleSimpleInputChange","onSelectChange","onCoursesSelectChange","onTasksSelectChange","handleSubmit","coursesFilter","filter","coursesoption","newMiniTask","select_value","current","find","inputListLength","arrayInput","i","index0","index1","CreateMiniTaskBodyContainer","ref","defaultValue","addInput","maxHeight","handleListInputNameChange","handleListInputTypeChange","Divider","addTest","handleInputTestChange","handleOutputTestChange","AUTH_LOGIN","username","request","Request","method","JSON","stringify","Headers","fetch","Error","statusText","json","setItem","AUTH_LOGOUT","Promise","resolve","AUTH_ERROR","reject","AUTH_CHECK","getItem","catchAll","Redirect","COMPOSITE_KEY_RESOURSES","PK_MAPPING","FILTER_LENGTHS","GET_MANY_FILTER","convertRESTRequestToHTTP","apiUrl","resource","url","query","pagination","page","perPage","sort","field","order","filterLengths","Object","keys","minLength","min","maxLength","max","slice","filterName","ids","convertHTTPResponseToREST","pk","has","hasOwnProperty","total","parseInt","dataProvider","httpClient","fetchUtils","fetchJson","a","Accept","id_token","set","ICONS","books","events","profile","certs","changeIDToName","resources","getResources","onMenuClick","logout","hasList","MenuItemLink","primaryText","string","split","word","charAt","toUpperCase","leftIcon","Responsive","small","medium","MyLayout","Layout","Menu","createMuiTheme","primary","indigo","secondary","main","red","ModelCourseEditToolbar","Toolbar","SaveButton","submitOnEnter","redirect","DeleteButton","ModelCourseFilter","Filter","ModelCourseList","List","filters","bulkActionButtons","Datagrid","sortable","ImageField","EditButton","ModelCourseCreate","Create","SimpleForm","TextInput","resettable","multiline","ModelCourseEdit","Edit","toolbar","jBeautify","js","template_code_format","indent_size","ShowUnitTest","optionsLevel","MinitaskEdit","level_ref","handleRemoveInput","handleRemoveUnitTest","onLevelSelectChange","minitasksId","input_list","put","splice","button","window","location","reload","ModelMinitaskFilter","ModelMinitaskList","NumberField","ModelMinitaskCreate","ModelMinitaskEdit","ModelTaskEditToolbar","ModelTaskFilter","ModelTaskList","ModelTaskCreate","choicesCourse","rObj","Skeleton","SelectInput","choices","ModelTaskEdit","ModelCertEditToolbar","ModelCertFilter","isEmpty","initialState","lastname","isUserLoading","combineReducers","action","createBrowserHistory","basename","store","authProvider","i18nProvider","defaultI18nProvider","locale","reducer","admin","adminReducer","formReducer","router","routerReducer","i18n","i18nReducer","saga","rootSaga","all","adminSaga","fork","sagaMiddleware","createSagaMiddleware","createStore","USER_LOGOUT","compose","applyMiddleware","formMiddleware","routerMiddleware","thunk","run","createAdminStore","vietnameseMessages","ReactAdmin","Admin","appLayout","customRoutes","Resource","list","create","edit","Account","getApi","image","changeUserInfo","setTimeout","urlPreview","handleChangeImage","toBase64","ImgToBase64","files","urlimage","URL","createObjectURL","image1","file","reader","FileReader","readAsDataURL","onload","onerror","InputLabelProps","visibility","userId","randomColor","listColor","deepOrange","deepPurple","green","pink","Math","floor","random","Rating","rating_value","read-only","precision","wordBreak","course_desc","light","Avatar","smallAvatar","user_create","boxSizing","total_minitask","Overview","course_info","daily_minitasks","daily_minitask","Chip","flexWrap","img","Tooltip","placement","completed_tasks_count","total_tasks_count","LinearProgress","renderLevelMinitaskChip","media","Certificate","top","cert","left","config","electronic_signature","PrintBody","certificateConfig","review_point","user_codepoint","getCertificate","openDialogCertificate","isLoadingCert","certificate","handleDialogCertificateOpen","handleDialogCertificateClose","renderDialog","DialogContent","dividers","el","CertificateRef","DialogTitle","trigger","content","Dialog","verticalAlign","lineHeight","getParams","pathname","matchPath","path","currentParams","tasks1","reverse","newcourse","rating","average","onClickRating","reduce","prev","curr","AppBarContent","Fab","mobileHide","searchComponent","inputSearchComponent","iconButtonSearchComponent","breakpoints","down","NavRight","handleClickDialogReadmoreOpen","bookcontent","bookImage","booktitlet","openDialogReadmore","handleDialogReadmoreClose","limitNum","newText","itemCard","listitem","time","indicators","interval","book","Card","CardActionArea","link","CardContent","limitText","DialogContentText","details","cover","controls","ProfilePage","mobileOpen","handleDrawerToggle","drawer","MenuList","selected","onClickMenuItem","AppBar","appBar","edge","menuButton","drawerMain","Hidden","smUp","implementation","Drawer","anchor","drawerPaper","ModalProps","xsDown","navRight","exact","up","flexShrink","mixins","LoginPage","checked","onSubmitTest","remember","loginUser","FormControlLabel","control","Checkbox","rel","decoded","jwt_decode","rest","render","AuthToken","currentTime","now","exp","App","HomePage","CreateMiniTask","hostname","Sentry","dsn","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2NAAAA,EAAOC,QAAU,IAA0B,kC,qBCA3CD,EAAOC,QAAU,IAA0B,4C,iQCcrCC,G,wLACM,IAAD,EACoBC,KAAKC,MAAxBC,EADD,EACCA,QAAQC,EADT,EACSA,OAEhB,OADAC,QAAQC,IAAIF,GAEV,kBAACG,EAAA,EAAD,CACAC,WAAS,EACTC,UAAU,SACVC,MAAO,CAACC,OAAO,OAAOC,QAAQ,OAAOC,eAAe,SAASC,WAAW,UACxEC,UAAS,UAAKZ,EAAQa,WAAb,mBAET,kBAACT,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CAAGQ,MAAO,OAAQC,SAAU,SAASP,QAAQ,OAAOC,eAAe,SAASC,WAAW,WAE9F,yBACEM,IAAKhB,EAAOiB,iBACZX,MAAO,CAAEQ,MAAO,OAAOI,UAAU,QAASX,OAAO,OAAOY,aAAa,MAAMC,UAAU,QACrFC,IAAI,MAGR,kBAAClB,EAAA,EAAD,CACEU,MAAI,EACJT,WAAS,EACTkB,QAAQ,SACRhB,MAAO,CAAEiB,QAAS,WAElB,kBAACpB,EAAA,EAAD,CAAMU,MAAI,GACR,yBACEP,MAAO,CACLkB,OAAQ,QACRC,UAAW,SACXC,cAAe,YACfC,MAAO,UACPC,WAAY,OACZC,WAAW,oCAGZ7B,EAAO8B,aAEV,yBACExB,MAAO,CACLkB,OAAQ,QACRC,UAAW,SACXE,MAAO,UACPE,WAAW,oCALf,2BAQgB7B,EAAO+B,YAAYC,eARnC,IAQoDhC,EAAO+B,YAAYE,mB,GAhDxDC,cAyDVC,cAnEA,CACdvB,WAAW,CACPO,aAAa,MACbiB,UAAW,uGACXrB,SAAS,SACTsB,WAAY,UACZC,OAAO,YA6DGH,CAAmBvC,GCjD5B2C,G,mBACJ,WAAYzC,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,CACXC,QAAS,IAHM,E,iFAME,IAAD,OAClBC,IAAMC,IAAN,uCAAiDC,MAAK,SAAAC,GACpD,IAAMJ,EAAUI,EAAIC,KACpB,EAAKC,SAAS,CAAEN,iB,+BAGV,IACA1C,EAAYF,KAAKC,MAAjBC,QACD0C,EAAW5C,KAAK2C,MAAhBC,QACP,OACE,kBAACtC,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAWZ,EAAQiD,gBAAiB1B,QAAQ,UAC1D,kBAACnB,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI5C,MAAO,CAAEiB,QAAS,aAC3C,yBAAKZ,UAAY,WAChB8B,EAAQU,KAAI,SAACnD,GAAD,OAAU,kBAAC,IAAD,CAAMW,UAAY,OAAMyC,IAAKpD,EAAOqD,GAAI/C,MAAO,CAACgD,eAAe,QAAQC,GAAE,mBAAcvD,EAAOqD,GAArB,WAAiC,kBAAC,EAAD,CAAYrD,OAAQA,e,GApBtIkC,cA6BVC,cA5CA,CACba,gBAAiB,CACfQ,WAAY,QACZnB,WAAY,UACZoB,UAAW,SAEb7C,WAAW,CACTO,aAAa,MACbiB,UAAW,uGACXrB,SAAS,SACTsB,WAAY,UACZC,OAAO,YAiCIH,CAAmBI,G,yBCzCnBmB,EATM,SAAAC,GACfA,EAEFjB,IAAMkB,SAASC,QAAQC,OAAvB,+BAA0DH,UAGnDjB,IAAMkB,SAASC,QAAQC,OAAvB,e,kBC0CEC,EAAiB,SAAAC,GAC5B,MAAO,CACLC,KCjD4B,mBDkD5BC,QAASF,IAKAG,EAAa,kBAAM,SAAAC,GAG9BC,aAAaC,WAAW,aAExBZ,GAAa,GAEbU,EAASL,EAAe,OE7DbQ,EAAuB,SAACC,EAAaC,GAAd,OAA0B,SAAAL,GAC5DnE,QAAQC,IAAI,CAACsE,YAAaA,EACxBC,QAASA,IACX/B,IACGgC,KAAK,oDAAqD,CACzDF,YAAaA,EACbC,QAASA,IAEV7B,MAAK,SAAAC,GACJ5C,QAAQC,IAAI2C,EAAIC,MAChBsB,EAAS,CACPH,KDXqB,gBCYrBC,QAASrB,EAAIC,UAGhB6B,OAAM,SAAAC,GAAG,OAAI3E,QAAQC,IAAI0E,QA4BjBC,EAAU,kBAAM,SAAAT,GAC3B1B,IACGC,IAAI,sCACJC,MAAK,SAAAC,GACJuB,EAAS,CACPH,KD/CgB,WCgDhBC,QAASrB,EAAIC,UAGhB6B,OAAM,SAAAC,GAAG,OAAI3E,QAAQC,IAAI0E,QAGjBE,EAA2B,kBAAM,SAAAV,GAC5CA,EAAS,CACPH,KDtDuC,8BCuDvCC,aAASa,MCxDPC,E,YAEJ,WAAYlF,GAAO,IAAD,8BAChB,4CAAMA,KAORmF,SAAW,SAAAC,GACTA,EAAEC,iBACF,EAAKrF,MAAMqE,aACS,EAAKrE,MAAjBsF,QACAC,KAAK,WAVb,EAAKJ,SAAW,EAAKA,SAASK,KAAd,gBAFA,E,iFAKhBzF,KAAKC,MAAM+E,Y,+BAUX,OACE,yBAAKlE,UAAU,iBACb,2BAAOsD,KAAK,WAAWZ,GAAG,MAAM1C,UAAU,WAC1C,2BAAO4E,QAAQ,MAAM5E,UAAU,WAC7B,4BACA,4BACA,6BAEF,yBAAKA,UAAU,QACb,uBAAG6E,KAAK,KACN,yBACExE,IAAKyE,EAAQ,KACbpE,IAAI,GACJf,MAAO,CAAEC,OAAQ,YAIvB,yBAAKI,UAAU,eACb,yBAAKA,UAAU,aACb,uBAAG6E,KAAK,QAAR,+BAGF,yBAAK7E,UAAU,cACb,yBAAKA,UAAU,cAAcd,KAAKC,MAAMkE,KAAK0B,WAC7C,yBAAK/E,UAAU,YACb,yBAAKA,UAAU,YAAYd,KAAKC,MAAMkE,KAAK2B,WAC3C,wBAAIhF,UAAU,eACV,4BAAI,uBAAG6E,KAAK,SAAR,+BACJ,4BAAI,uBAAGA,KAAK,IAAII,QAAS/F,KAAKoF,UAA1B,+BAGV,yBAAKtE,UAAU,gBAAf,IACI,uBAAG6E,KAAK,OAAOI,QAAS/F,KAAKoF,UAA7B,oC,GAjDW/C,aAgEZ2D,eANS,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAKxB,CAAEG,aAAWU,WAFAgB,CAGbb,GC1DaiB,E,iLATP,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,EAAD,CAAcd,QAASvF,KAAKC,MAAMsF,UAClC,kBAAC,EAAD,W,GALSlD,aCkBnBiE,G,8LACWC,GAGb,MAAwB,cAApBA,EAASC,OAET,kBAAC,IAAD,CACE9C,GAAE,iBAAY6C,EAAS/C,IACvB/C,MAAO,CACLE,QAAS,OACT8C,eAAgB,OAChB3B,MAAO,UACPE,WAAW,oCAGb,8BACA,yBAAKvB,MAAO,CAAEgG,SAAU,IAAMF,EAASG,gBACvC,yBAAKjG,MAAO,CAACQ,MAAM,QAAQ,yBAAKR,MAAO,CAACQ,MAAM,QAASE,IAAKyE,EAAQ,KAA2BpE,IAAI,4BAG1E,kBAApB+E,EAASC,SAA+C,IAAjBD,EAASI,MAEvD,uBACEhB,KAAK,QACLlF,MAAO,CACLE,QAAS,OACT8C,eAAgB,OAChB3B,MAAO,UACPE,WAAW,oCAGb,8BACA,yBAAKvB,MAAO,CAAEgG,SAAU,IAAMF,EAASG,gBACvC,yBAAKjG,MAAO,CAACQ,MAAM,QAAQ,yBAAKR,MAAO,CAACQ,MAAM,QAASE,IAAKyE,EAAQ,KAAsBpE,IAAI,4BAIvE,kBAApB+E,EAASC,SAA+C,IAAjBD,EAASI,MAErD,kBAAC,IAAD,CACAjD,GAAE,iBAAY6C,EAAS/C,IACvB/C,MAAO,CACLE,QAAS,OACT8C,eAAgB,OAChB3B,MAAO,UACPE,WAAW,oCAGX,8BACA,yBAAKvB,MAAO,CAAEgG,SAAU,IAAMF,EAASG,gBACvC,yBAAKjG,MAAO,CAACQ,MAAM,QAAQ,yBAAKR,MAAO,CAACQ,MAAM,OAAO2F,gBAAgB,UAAUtF,aAAa,OAAQH,IAAKyE,EAAQ,KAA+BpE,IAAI,4BAI7H,iBAApB+E,EAASC,OAEd,yBAEE/F,MAAO,CACLE,QAAS,OACT8C,eAAgB,OAChB3B,MAAO,UACPE,WAAW,oCAGb,8BACA,yBAAKvB,MAAO,CAAEgG,SAAU,IAAMF,EAASG,gBACvC,yBAAK5F,UAAU,SAASL,MAAO,CAAEE,QAAQ,SACzC,yBAAKF,MAAO,CAACQ,MAAM,QAAQ,yBAAKR,MAAO,CAACQ,MAAM,QAASE,IAAKyE,EAAQ,KAAgCpE,IAAI,2BACxG,yBAAKV,UAAU,SAASL,MAAO,CAACE,QAAQ,SAAU4F,EAASM,qBAf5D,I,+BAqBG,IAAD,SACkB7G,KAAKC,MAAtBC,EADD,EACCA,QAAQ4G,EADT,EACSA,KAEhB,OACE,kBAAC,IAAMT,SAAP,KAcE,kBAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASM,UAAS,UAAKZ,EAAQoG,WACvD,kBAAChG,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAACC,UAAU,SAASK,WAAW,UACjD,kBAACP,EAAA,EAAD,CACE8C,GAAI,EACJ2D,GAAI,EACJ/F,MAAI,EACJP,MAAO,CACLiB,QAAS,MACTkF,gBAAiB,QACjBtF,aAAc,MACd0F,aAAc,QACdC,OAAQ,IACR/F,SAAU,SACVgG,aAAc,WACdC,WAAY,UACZvF,UAAW,SACXX,MAAM,QACNe,WAAW,kCACXO,UAAU,yGAGXuE,EAAKM,YAGV,kBAAC9G,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CAAEC,OAAQ,QAASO,MAAO,OAAQC,SAAU,WAFrD,IAIE,yBACEC,IAAK2F,EAAK1F,iBACVX,MAAO,CAAEC,OAAQ,OAAQO,MAAO,OAAOK,aAAc,eACrDE,IAAI,MAGR,kBAAClB,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAACC,UAAU,SAASC,MAAO,CAAEiB,QAAS,SAASc,WAAW,UAAaD,UAC/F,yGADI,IAECuE,EAAKO,UAAU/D,KAAI,SAACiD,GAAD,OAAY,kBAACjG,EAAA,EAAD,CAAMU,MAAI,EAACF,UAAS,UAAKZ,EAAQoH,cAAgB/D,IAAKgD,EAAS/C,IAA/D,IAAsE,EAAK+D,eAAehB,c,GAjI7GlE,cAyIRC,cAzJA,CACbgE,SAAU,CACRhF,aAAc,MACdJ,SAAU,SACV8F,aAAa,QAEfM,aAAc,CACZ3F,OAAQ,MACRiF,gBAAiB,QACjBlF,QAAS,WACTiC,WAAW,OACXrC,aAAc,MACdiB,UACE,yGA4ISD,CAAmBgE,GClJ5BkB,E,YACJ,WAAYvH,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,CACX8E,MAAO,IAHQ,E,iFAME,IAAD,OAClB5E,IACGC,IADH,8CAC8C9C,KAAKC,MAAMyH,SADzD,WAEG3E,MAAK,SAAAC,GACJ,IAAMyE,EAAQzE,EAAIC,KAClB,EAAKC,SAAS,CAAEuE,e,+BAOZ,IACAvH,EAAYF,KAAKC,MAAjBC,QACAuH,EAAUzH,KAAK2C,MAAf8E,MACR,OACE,kBAACnH,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAWZ,EAAQyH,eAAgBlG,QAAQ,UACzD,kBAACnB,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG5C,MAAO,CAAEiB,QAAS,aACzC+F,EAAMnE,KAAI,SAAAwD,GAAI,OACb,kBAAC,EAAD,CAAUvD,IAAKuD,EAAKtD,GAAIsD,KAAMA,a,GA1BnBzE,aAkCRC,cAzCA,CACbqF,eAAgB,CACdhE,WAAY,IACZnB,WAAY,UACZoB,UAAW,UAqCAtB,CAAmBkF,GCzC5BI,G,kNAKJxC,SAAW,SAAAC,GACTA,EAAEC,iBACF,EAAKrF,MAAMqE,aACS,EAAKrE,MAAjBsF,QACAC,KAAK,W,mFAPbxF,KAAKC,MAAM+E,Y,+BAWX,OACE,yBAAKlE,UAAU,eACb,2BAAOsD,KAAK,WAAWZ,GAAG,MAAM1C,UAAU,WAC1C,2BAAO4E,QAAQ,MAAM5E,UAAU,WAC7B,4BACA,4BACA,6BAEF,yBAAKA,UAAU,QACb,uBAAG6E,KAAK,KACN,yBACExE,IAAKyE,EAAQ,KACbpE,IAAI,GACJf,MAAO,CAAEC,OAAQ,YAIvB,yBAAKI,UAAU,eACb,yBAAKA,UAAU,aACb,uBAAG6E,KAAK,QAAR,+BAGF,yBAAK7E,UAAU,cACb,yBAAKA,UAAU,cAAcd,KAAKC,MAAMkE,KAAK0B,WAC7C,yBAAK/E,UAAU,YACb,yBAAKA,UAAU,YAAYd,KAAKC,MAAMkE,KAAK2B,WAC3C,wBAAIhF,UAAU,eACV,4BAAI,uBAAG6E,KAAK,SAAR,+BACJ,4BAAI,uBAAGA,KAAK,QAAQI,QAAS/F,KAAKoF,UAA9B,+BAGV,yBAAKtE,UAAU,gBAAf,IACI,uBAAG6E,KAAK,OAAOI,QAAS/F,KAAKoF,UAA7B,oC,GA7CS/C,cA2DV2D,eANS,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAKxB,CAAEG,aAAWU,WAFAgB,CAGb4B,GClDaC,E,iLAZD,IACWC,EAAa9H,KAAKC,MAA3B8H,MAASD,OAEjB,OACI,kBAAC,IAAMzB,SAAP,KACI,kBAAC,EAAD,CAAYd,QAASvF,KAAKC,MAAMsF,UAChC,kBAAC,EAAD,CAAUmC,SAAUI,EAAOJ,gB,GARpBrF,a,6CCejB2F,G,wLAGM,IACA9H,EAAYF,KAAKC,MAAjBC,QACR,OACE,yBAAKY,UAAWZ,EAAQ+H,eACtB,yBAAKxH,MAAO,CAACuB,WAAW,iCAAiCrB,QAAQ,OAAOmB,MAAM,YAC9E,yBAAKrB,MAAO,CAACgG,SAAS,EAAEyB,YAAY,KAApC,wBAAkDlI,KAAKC,MAAMkI,OAC3D,yBAAK1H,MAAO,CAACyH,YAAY,SAAUlI,KAAKC,MAAMmI,aAGhD,yBAAKtH,UAAU,UAAUL,MAAO,CAAEiB,QAAS,SAA3C,IACE,kBAAC,IAAD,CACE2G,YAAY,EACZC,OAAQtI,KAAKC,MAAMsI,eACnBC,UAAW,CACTC,cAAe,SAAAC,GACb,OAAKA,EAAU/C,KAIR,uBAAGA,KAAM+C,EAAUC,MAAOD,EAAUE,UAFnC,IAAN,OAAWF,EAAUE,SAAS,GAAG3I,MAAM2I,SAAvC,MAIJC,QAAS,SAAA5I,GACP,OAAO,uBAAGa,UAAU,cAAcb,EAAM2I,WAE1CE,WAAY,SAAA7I,GACV,OAAO,0BAAMa,UAAU,WAAWb,EAAM2I,oB,GA5B7BvG,cAsCZC,cApDA,CACb2F,cAAe,CACbzF,WAAY,UACZuG,SAAU,WAEVrI,OAAQ,OACRQ,SAAS,OAETI,aAAc,MACdiB,UACE,uGACFb,QAAS,cAyCEY,CAAmB0F,G,8HC9C5BgB,GAAa1G,YAAW,CAC5B2G,MAAO,CACLC,OAAQ,sBAFO5G,EAIhB,SAAArC,GAAK,OACN,kBAAC,IAAD,eACEQ,MAAO,CAAC0I,YAAY,MAAMC,aAAa,OACvCC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAEVxJ,OAIF0J,GAAiBrH,aAAW,SAAAsH,GAAK,MAAK,CAC1CC,KAAM,CACJjG,UAAU,QACV,UAAW,CAET,sDAAuD,CACrD9B,MAAO8H,EAAME,QAAQ7F,OAAO8F,YANbzH,CAUnB0H,MA+CJ,IAMehE,gBANS,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAKxB,CAAEG,cAFW0B,EAlDd,SAAyB/F,GAAQ,IAAD,EACCgK,IAAMC,SAAS,MADhB,mBACxBC,EADwB,KACdC,EADc,KAW/B,OACE,6BACE,kBAAC,KAAD,CACEC,gBAAc,kBACdC,gBAAc,OACdC,QAAQ,YACRxE,QAdc,SAAAyE,GAClBJ,EAAYI,EAAMC,gBAcdhK,MAAO,CAACqB,MAAM,aAGhB,kBAACkH,GAAD,CACExF,GAAG,kBACH2G,SAAUA,EACVO,aAAW,EACXC,KAAMC,QAAQT,GACdU,QAnBc,WAClBT,EAAY,QAoBR,kBAACT,GAAD,CAAgB5D,QAAS9F,EAAMqE,YAC3B,kBAAC,KAAD,CAAe7D,MAAO,CAACqK,SAAS,MAChC,uBAAGrK,MAAO,CAACqK,SAAS,GAAGC,WAAW,QAAlC,6BAEJ,kBAACpB,GAAD,KACI,kBAAC,KAAD,CAAgBlJ,MAAO,CAACqK,SAAS,MACjC,kBAAC,IAAD,CAAMpH,GAAG,mBAAmBjD,MAAO,CAACgD,eAAgB,SACpD,uBAAGhD,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAAtC,qC,qBCpENC,G,2MACJ5F,SAAW,SAAAC,GACTA,EAAEC,iBACF,EAAKrF,MAAMqE,aACS,EAAKrE,MAAjBsF,QACAC,KAAK,W,EAGfyF,OAAS,SAAA5F,GACPA,EAAEC,iBACkB,EAAKrF,MAAjBsF,QACA2F,U,mFAGR9K,QAAQC,IAAIL,KAAKC,MAAMsF,SACvBvF,KAAKC,MAAM+E,Y,+BAIX,OACE,yBAAKlE,UAAU,mBACb,2BAAOsD,KAAK,WAAWZ,GAAG,MAAM1C,UAAU,WAC1C,2BAAO4E,QAAQ,MAAM5E,UAAU,WAC7B,4BACA,4BACA,6BAEF,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAM4C,GAAG,YACP,yBACEvC,IAA8B,YAC9BK,IAAI,GACJf,MAAO,CAAEC,OAAQ,YAIvB,yBAAKI,UAAU,qBAAqBd,KAAKC,MAAMkL,cAAoB,IAEnE,yBAAKrK,UAAU,eACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,CAAM4C,GAAG,YACP,yBACEvC,IAA8B,YAC9BK,IAAI,GACJf,MAAO,CAAEC,OAAQ,aAKzB,yBACEI,UAAU,YACVL,MAAO,CAAEE,QAAS,OAAQE,WAAY,WAEtC,yBACEkF,QAAS/F,KAAKiL,OACdxK,MAAO,CACLE,QAAS,OACTE,WAAY,SACZ4B,OAAQ,YAGV,kBAAC,IAAD,CAAuBhC,MAAO,CAAEqK,SAAU,MAC1C,uBAAGrK,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAAtC,SAEF,yBACEjK,UAAU,gBACVL,MAAO,CAAEE,QAAS,OAAQC,eAAgB,SAAU6F,SAAU,IAE9D,6BAAMzG,KAAKC,MAAMkL,gBAIrB,yBAAKrK,UAAU,cACb,yBACEA,UAAU,aACVL,MAAO,CAAEqK,SAAU,GAAInJ,OAAQ,UAAWG,MAAO,YAFnD,0BAIW9B,KAAKC,MAAMkE,KAAK0B,WAE3B,yBAAK/E,UAAU,WAAWL,MAAO,CAAEqK,SAAU,KAC1C9K,KAAKC,MAAMkE,KAAK2B,WAGnB,yBAAKhF,UAAU,iBACb,kBAACsK,GAAD,OAEF,yBAAKtK,UAAU,gBACb,yBACEL,MAAO,CACLE,QAAS,OACTE,WAAY,SACZ4B,OAAQ,YAGV,kBAAC,KAAD,CAAYhC,MAAO,CAAEqK,SAAU,MAC/B,kBAAC,IAAD,CAAMpH,GAAG,WAAYjD,MAAO,CAAEqK,SAAU,GAAIC,WAAY,MAAMtH,eAAe,OAAWzB,WAAW,6BAAnG,yBAGJ,yBAAKlB,UAAU,gBACb,yBACEiF,QAAS/F,KAAKiL,OACdxK,MAAO,CACLE,QAAS,OACTE,WAAY,SACZ4B,OAAQ,YAGV,kBAAC,KAAD,CAAehC,MAAO,CAAEqK,SAAU,MAClC,uBACErK,MAAO,CAAEqK,SAAU,GAAIC,WAAY,OACnChF,QAAS/F,KAAKoF,UAFhB,qC,GA7Ga/C,aAiId2D,gBANS,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAGc,CAAEG,aAAYU,WAAvCgB,CACbgF,I,UCpFaK,I,4QApCH,IAAD,OACP,OAEE,kBAAC,cAAD,CACAvK,UAAU,mBACRwK,MAAOtL,KAAKC,MAAMsL,SAClBC,QAAS,CACPC,KAAM,cACN7B,MAAO,UACP8B,aAAa,EACbC,2BAA2B,EAC3BC,WAAY,EACZC,QAAS,EACTC,cAAc,EACdC,UAAU,EACVC,mBAAmB,EACnBC,YAAY,EACZC,aAAa,EACbC,UAAW,CAAE,aAAc,iBAG7BC,SAAU,CACRC,KAAM,CAAEC,KAAM,EAAGC,GAAI,GACrB7I,GAAI,CAAE4I,KAAM,EAAGC,GAAI,GACnBC,IAAK,iBAGPC,eAAgB,SAACC,EAAQzJ,EAAMqI,GAC7B,EAAKrL,MAAM0M,eAAerB,IAE5BsB,SAAU,SAACF,EAAQzJ,EAAMqI,W,GA/BRjJ,c,iHCPzB,SAASwK,GAAS5M,GAAQ,IAChB2I,EAAqC3I,EAArC2I,SAAU0C,EAA2BrL,EAA3BqL,MAAOwB,EAAoB7M,EAApB6M,MAAUC,EADZ,aACsB9M,EADtB,8BAGvB,OACE,kBAAC+M,GAAA,EAAD,eACEC,UAAU,MACVC,KAAK,WACLC,OAAQ7B,IAAUwB,EAClBtJ,GAAE,uBAAkBsJ,GACpBM,kBAAA,kBAA4BN,IACxBC,GAEJ,yBAAKtM,MAAO,CAAEiB,QAAS,YAAac,WAAY,YAC7CoG,IAYT,SAASyE,GAAUP,GACjB,MAAO,CACLtJ,GAAG,WAAD,OAAasJ,GACf,gBAAgB,gBAAhB,OAAiCA,IAKrC,SAASQ,GAAQrN,GACf,OACE,kBAACsN,GAAA,EAAD,eAEE9M,MAAO,CAAEmD,UAAW,OAAQ4J,SAAU,SACtCP,UAAU,IACVlH,QAAS,SAAAyE,GACPA,EAAMlF,mBAEJrF,IAKV,IAAMwN,GAAYC,cAAW,SAAA9D,GAAK,MAAK,CACrCC,KAAM,CACJpD,SAAU,EACVG,gBAAiBgD,EAAME,QAAQtH,WAAWyG,WAI/B,SAAS0E,GAAY1N,GAElC,IAAMC,EAAUuN,KAFyB,EAGfxD,IAAMC,SAAS,GAHA,mBAGlCoB,EAHkC,KAG3BsC,EAH2B,KASzC,IAAMC,EAAa5N,EAAM4N,YAAc,GACjCC,EAAS7N,EAAM6N,OAoMrB,OAnMA1N,QAAQC,IAAIyN,GAoMV,yBACEhN,UAAWZ,EAAQ2J,KACnBpJ,MAAO,CACLQ,MAAO,OACPP,OAAQ,OACRC,QAAS,OACToN,cAAe,WAGjB,kBAACC,GAAA,EAAD,CACEvN,MAAO,CAAEmD,UAAW,QACpB2G,QAAQ,YACRe,MAAOA,EACPsB,SAvNN,SAAsBpC,EAAOyD,GAC3BL,EAASK,IAuNLC,aAAW,oBAEX,kBAACZ,GAAD,eAASa,MAAM,oBAAiBxI,KAAK,WAAc0H,GAAU,KAC7D,kBAACC,GAAD,eAASa,MAAM,oBAAUxI,KAAK,UAAa0H,GAAU,MAEvD,yBACEvM,UAAU,cACVL,MAAO,CACLsI,SAAU,WACV9H,MAAO,OACPP,OAAQ,OACR0N,UAAW,OACXC,UAAW,SACX7L,WAAY,YAGd,kBAACqK,GAAD,CAAUvB,MAAOA,EAAOwB,MAAO,GAnJjC,kBAAC,IAAMzG,SAAP,KACGwH,EAAWvK,KAAI,SAACgL,EAAWxB,GAE1B,OACE,kBAACyB,GAAA,EAAD,CAAgBhL,IAAKuJ,GACnB,kBAAC0B,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZpE,gBAAc,kBACd7G,GAAG,kBAEH,yBAAK/C,MAAO,CAAEE,QAAS,OAAQM,MAAO,SACpC,yBACER,MAAO,CACLgG,SAAU,EACVzE,WAAW,mCAHf,QAMQ8K,EAAQ,KAIpB,kBAAC4B,GAAA,EAAD,KACE,6BACE,kBAACpO,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CAAEuB,WAAW,mCAFtB,SAIS,KAET,kBAAC1B,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEsK,WAAY,KAC7BuD,EAAUK,OAAOrL,KAAI,SAACsL,EAAO9B,GAAR,OACpB,yBACEvJ,IAAKuJ,EACLrM,MAAO,CACLuB,WAAW,mCAHf,QAMQ8K,EAAQ,EANhB,KAMqB8B,EAAMtD,UAEzB,MAIR,kBAAChL,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CAAEuB,WAAW,mCAFtB,8BAIoBsM,EAAUO,0BAqG1C,kBAAChC,GAAD,CAAUvB,MAAOA,EAAOwB,MAAO,GApOrC,SAA2BgB,GACzB,YAAsB5I,IAAlB4I,EAAOgB,YAwDsB5J,IAAxB4I,EAAOiB,aAEZ,kBAAC,IAAM1I,SAAP,KACE,yBACE5F,MAAO,CACLqB,MAAO,UACPE,WAAW,gCACX8I,SAAU,KAJd,iEAaG,wDAvEc,KAAjBgD,EAAOkB,MAEP,kBAAC,IAAM3I,SAAP,KACE,yBACE5F,MAAO,CACLqB,MAAO,UACPE,WAAW,gCACX8I,SAAU,KAGXgD,EAAOkB,QAKsB,SAAhClB,EAAOgB,OAAOG,cAEd,kBAAC,IAAM5I,SAAP,KACE,yBACE5F,MAAO,CACLqB,MAAO,UACPE,WAAW,gCACX8I,SAAU,KAGZ,sDAAuBgD,EAAOgB,OAAOI,aACrC,4DAImC,UAAhCpB,EAAOgB,OAAOG,cAErB,kBAAC,IAAM5I,SAAP,KACE,yBACE5F,MAAO,CACLqB,MAAO,UACPE,WAAW,gCACX8I,SAAU,KAGZ,0EACsB,IACnBgD,EAAOgB,OAAOK,SAAWrB,EAAOgB,OAAOM,gBAF1C,IAGGtB,EAAOgB,OAAOK,UAEjB,0DACCrB,EAAOgB,OAAOO,cAAc/L,KAAI,SAACgM,EAAUxC,GAC1C,OAAO,yBAAKvJ,IAAKuJ,GAAQwC,EAASC,kBAjBrC,EAqMJC,CAAkB1B,M,wBCtS7B,SAASjB,GAAS5M,GAAQ,IAChB2I,EAAqC3I,EAArC2I,SAAU0C,EAA2BrL,EAA3BqL,MAAOwB,EAAoB7M,EAApB6M,MAAUC,EADZ,aACsB9M,EADtB,8BAGvB,OACE,kBAAC+M,GAAA,EAAD,eACEC,UAAU,MACVC,KAAK,WACLC,OAAQ7B,IAAUwB,EAClBtJ,GAAE,uBAAkBsJ,GACpBM,kBAAA,kBAA4BN,IACxBC,GAEJ,yBAAKtM,MAAO,CAAEiB,QAAS,YAAac,WAAY,YAC7CoG,IAmBT,SAAS0E,GAAQrN,GACf,OACE,kBAACsN,GAAA,EAAD,eACA9M,MAAO,CAAEmD,UAAW,OAAQ4J,SAAU,SACtCP,UAAU,IACRlH,QAAS,SAAAyE,GACPA,EAAMlF,mBAEJrF,IAKV,IAAMwN,GAAYC,cAAW,SAAA9D,GAAK,MAAK,CACrCC,KAAM,CACJpD,SAAU,EACVG,gBAAiBgD,EAAME,QAAQtH,WAAWyG,WAI/B,SAASwG,GAAWxP,GAEjC,IAAMC,EAAUuN,KAFwB,EAGdxD,IAAMC,SAAS,GAHD,mBAGjCoB,EAHiC,KAG1BsC,EAH0B,KASxC,IApCiBd,EAoCXe,EAAa5N,EAAM4N,YAAc,GAgEvC,OACE,yBACE/M,UAAWZ,EAAQ2J,KACnBpJ,MAAO,CACLQ,MAAO,OACPP,OAAQ,OACRC,QAAS,OACToN,cAAe,YAGI,IAApB9N,EAAMyP,UACL,yBACEjP,MAAO,CACLQ,MAAO,OACPP,OAAQ,OACRC,QAAS,OACToN,cAAe,SACfnN,eAAgB,SAChBC,WAAY,WAGd,6BACE,yBAAKC,UAAU,iBACb,kBAAC,KAAD,CAEE6O,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,QAAS5P,EAAMyP,aAEZ,MAIX,kBAAC,IAAMrJ,SAAP,KACE,kBAAC2H,GAAA,EAAD,CACEvN,MAAO,CAAEmD,UAAW,QACpB2G,QAAQ,YACRe,MAAOA,EACPsB,SA3GV,SAAsBpC,EAAOyD,GAC3BL,EAASK,IA2GDC,aAAW,oBAEX,kBAAC,GAAD,eAASC,MAAM,oBAAiBxI,KAAK,WA7IxC,CACLnC,GAAG,WAAD,OAFasJ,EA8IsD,GA3IrE,gBAAgB,gBAAhB,OAAiCA,OA6I3B,yBACEhM,UAAU,cACVL,MAAO,CACLsI,SAAU,WACV9H,MAAO,OACPP,OAAQ,OACR0N,UAAW,OACXC,UAAW,SACX7L,WAAY,YAGd,kBAAC,GAAD,CAAU8I,MAAOA,EAAOwB,MAAO,GArHzC,SAA0Be,GACxB,OACE,kBAAC,IAAMxH,SAAP,KACGwH,EAAWvK,KAAI,SAACgL,EAAWxB,GAE1B,OACE,kBAACyB,GAAA,EAAD,CAAgBhL,IAAKuJ,GACnB,kBAAC0B,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZpE,gBAAc,kBACd7G,GAAG,kBAEH,yBAAK/C,MAAO,CAAEE,QAAS,OAAQM,MAAO,SACpC,yBACER,MAAO,CACLgG,SAAU,EACVzE,WAAW,mCAHf,QAMQ8K,EAAQ,KAIpB,kBAAC4B,GAAA,EAAD,KACE,6BACE,kBAACpO,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CAAEuB,WAAW,mCAFtB,SAIS,KAET,kBAAC1B,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEsK,WAAY,KAC7BuD,EAAUK,OAAOrL,KAAI,SAACsL,EAAO9B,GAAR,OACpB,yBACEvJ,IAAKuJ,EACLrM,MAAO,CACLuB,WAAW,mCAHf,UAMU8K,EAAQ,EANlB,KAMuB8B,EAAMtD,UAE3B,MAIR,kBAAChL,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CAAEuB,WAAW,mCAFtB,8BAIoBsM,EAAUO,yBAmEnCiB,CAAiBjC,O,qFCzK1BkC,G,YACJ,WAAY9P,GAAQ,IAAD,8BACjB,4CAAMA,KAkGR+P,iBAAmB,WACjB,EAAK9M,SAAS,CAAEyH,MAAM,KApGL,EAuGnBsF,iBAAmB,WACjB,EAAK/M,SAAS,CAAEyH,MAAM,KAtGtB,EAAKhI,MAAQ,CACX4D,SAAU,GACVuH,OAAQ,GACRvC,SAAU,GACVmE,WAAW,EACXQ,oBAAoB,EACpBvF,MAAM,GAGR,EAAKwF,YAAc,EAAKA,YAAY1K,KAAjB,gBACnB,EAAK2K,WAAa,EAAKA,WAAW3K,KAAhB,gBAClB,EAAKkH,eAAiB,EAAKA,eAAelH,KAApB,gBACtB,EAAK4K,UAAY,EAAKA,UAAU5K,KAAf,gBACjB,EAAK6K,eAAiB,EAAKA,eAAe7K,KAApB,gBAfL,E,iFAkBE,IAAD,OAClBzF,KAAKC,MAAMgF,2BADO,IAGP6C,EACP9H,KAAKC,MADP8H,MAASD,OAEXjF,IACGC,IADH,gDACgDgF,EAAOyI,aACpDxN,MAAK,SAAAC,GACJ,IAAMuD,EAAWvD,EAAIC,KACrB,EAAKC,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsG,SAAUA,EACV2J,oBAAoB,MAEtB,EAAKhN,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsG,SAAUA,MAeZ,EAAKrD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsL,SAAUhF,EAASiK,uB,yCAMRC,GAAY,IAAD,OAE1BA,EAAU1I,MAAMD,OAAOyI,aAAevQ,KAAKC,MAAM8H,MAAMD,OAAOyI,aAE9DvQ,KAAKC,MAAMgF,2BACX7E,QAAQC,IAAI,SACZL,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,OAEVjL,IACGC,IADH,gDAE6C9C,KAAKC,MAAM8H,MAAMD,OAAOyI,aAElExN,MAAK,SAAAC,GACJ,IAAMuD,EAAWvD,EAAIC,KACrB,EAAKC,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsG,SAAUA,EACV2J,oBAAoB,MAEtB,EAAKhN,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsG,SAAUA,MAGZ,EAAKrD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsL,SAAUhF,EAASiK,wB,qCAMdlF,GAEbtL,KAAKkD,SAAS,CAAEqI,SAAUD,M,mCAGfA,GACX,IAAIoF,EAAaC,KAAYrF,EAAO,CAAEsF,sBAAuB,IAG7D5Q,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsL,SAAUmF,MAEZ1Q,KAAKgQ,qB,kCAWM,IAAD,OACJa,EAA2BC,KAAKC,MAAM,CAC1CC,YAAa,CACXC,cAAe,sCACfC,aAAc,gCAEhBC,gBAAgB,IAGlBN,EACGO,KAAK,CACJC,MAAO,gFACPC,KAAM,qDACNlN,KAAM,UACNmN,kBAAkB,EAClBC,kBAAmB,SACnBC,iBAAkB,YAClBC,gBAAgB,IAEjB3O,MAAK,SAAA+K,GACAA,EAAOxC,OACT,EAAKpI,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsL,SAAUhF,EAASiK,kBAErBK,EAAyBO,KAAK,oBAAa,GAAI,YAG/CtD,EAAO6D,UAAYb,KAAKc,cAAcC,QAEtChB,EAAyBO,KAAK,sBAAU,GAAI,YA7BxC,IAgCF7K,EAAavG,KAAK2C,MAAlB4D,W,qCAGKA,GACb,IAAIuL,EAAM,GAoEV,YAlEoB5M,IAAhBqB,EAAS/C,MACsC,IAA7C+C,EAASwL,iBAAiBC,SAAS,OACrCF,EAAM,qLACNvL,EAASsH,WAAWoE,SAAQ,SAAC3D,EAAWxB,GACtC,IAAI6B,EAAS,GACbL,EAAUK,OAAOsD,SAAQ,SAAArD,IACW,IAA9BA,EAAMxK,KAAK4N,SAAS,MAEtBrD,GAAM,cAAWC,EAAMxK,KAAjB,YAAyBwK,EAAMtD,MAA/B,KAENqD,GAAM,UAAOC,EAAMtD,MAAb,QAIV,IAAI4G,EAAevD,EAAOwD,UAAU,EAAGxD,EAAOyD,OAAS,GACrB,aAA9B7L,EAASwL,iBACXD,GAAM,gDAA6ChF,EACjD,EADI,4EACiEA,EACrE,EAFI,kBAEOvG,EAASwL,iBAFhB,YAGJzD,EAAUO,gBAHN,eAICtI,EAAS8L,UAJV,YAIuBH,EAJvB,gBAMNJ,GAAM,gDAA6ChF,EACjD,EADI,4EACiEA,EACrE,EAFI,kBAEOvG,EAASwL,iBAFhB,YAGJzD,EAAUO,gBAHN,eAICtI,EAAS8L,UAJV,YAIuBH,EAJvB,iBAOVJ,GAAM,MAENA,EAAM,gLACNvL,EAASsH,WAAWoE,SAAQ,SAAC3D,EAAWxB,GACtC,IAAI6B,EAAS,GACbL,EAAUK,OAAOsD,SAAQ,SAAArD,IACW,IAA9BA,EAAMxK,KAAK4N,SAAS,MAEtBrD,GAAM,cAAWC,EAAMxK,KAAjB,YAAyBwK,EAAMtD,MAA/B,KAENqD,GAAM,UAAOC,EAAMtD,MAAb,QAGV,IAAI4G,EAAevD,EAAOwD,UAAU,EAAGxD,EAAOyD,OAAS,GACrB,WAA9B7L,EAASwL,iBACXD,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,cAEGwB,EAAUO,gBAFb,eAGJtI,EAAS8L,UAHL,YAIFH,EAJE,gBAKiC,WAA9B3L,EAASwL,iBAClBD,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,eAEIwB,EAAUO,gBAFd,gBAGJtI,EAAS8L,UAHL,YAIFH,EAJE,cAMNJ,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,cAEGwB,EAAUO,gBAFb,eAGJtI,EAAS8L,UAHL,YAIFH,EAJE,iBAOVJ,GAAM,MAGHA,I,oCAIP9R,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,OAFE,IAIJvH,EAAavG,KAAK2C,MAAlB4D,SAEJuL,EAAS9R,KAAKsQ,eAAe/J,GAE7B+L,EAAI,0FAAsFtS,KAAK2C,MAAM4I,SAAjG,WACRvL,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,MAGbtP,QAAQC,IAAIyR,GAEZjP,IACGgC,KAAK,uCAAwC,CAC5CyN,KAAMA,EACNC,KAAMT,IAEP/O,KACC,SAASyP,GACPpS,QAAQC,IAAImS,GACZ,IAAMxD,EAAQwD,EAASvP,KAAKwP,OACtB3D,EAAS0D,EAASvP,KAAK6L,OAE7B9O,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,CACNkB,MAAOA,EACPF,OAAQA,OAGZ9O,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,OAEbjK,KAAKzF,OAER8E,MACC,SAASkK,GACPhP,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,EACX5B,OAAQ,CACNiB,aAAcC,OAGlB5O,QAAQC,IAAI2O,IACZvJ,KAAKzF,S,mCAIXA,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,OAFC,IAIHvH,EAAavG,KAAK2C,MAAlB4D,SAEJuL,EAAS9R,KAAKsQ,eAAe/J,GAE7B+L,EAAI,0FAAsFtS,KAAK2C,MAAM4I,SAAjG,WACRvL,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,MAGb7M,IACGgC,KAAK,uCAAwC,CAC5CyN,KAAMA,EACNC,KAAMT,IAEP/O,KACC,SAASyP,GACPpS,QAAQC,IAAImS,GACZ,IAAMxD,EAAQwD,EAASvP,KAAKwP,OACtB3D,EAAS0D,EAASvP,KAAK6L,OAE7B9O,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,CACNkB,MAAOA,EACPF,OAAQA,OAGZ9O,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,MAGkC,SAA3C1P,KAAK2C,MAAMmL,OAAOgB,OAAOG,gBAE3BjP,KAAKC,MAAMyE,qBACT1E,KAAK2C,MAAM4D,SAAS/C,GACpBxD,KAAK2C,MAAM4D,SAAS3B,SAGtBkM,KAAKM,KAAK,CACRhN,KAAM,UACNiN,MAAM,iFACNpQ,MAAO,IACPS,QAAS,MACTsP,YAAa,eACb0B,SAAS,6DAAD,OAEC9M,EAAQ,KAFT,mFAOV+M,aAAM,kFAA6C,CACjDC,YAAa,QAGjBnN,KAAKzF,OAER8E,MACC,SAASkK,GACPhP,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,EACX5B,OAAQ,CACNiB,aAAcC,OAGlB5O,QAAQC,IAAI2O,IACZvJ,KAAKzF,S,+BAGH,IAAD,SACsBA,KAAK2C,MAA1B4D,EADD,EACCA,SAAUuH,EADX,EACWA,OACVoC,EAAuBlQ,KAAK2C,MAA5BuN,mBAgBR,OACE,kBAAC,IAAM7J,SAAP,KACE,yBAAKvF,UAAU,mBACb,kBAAC+R,GAAA,EAAD,CACEtJ,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDlG,IAAG,gBACHoH,KAAM3K,KAAK2C,MAAMgI,KACjBE,QAAS7K,KAAKiQ,iBACd6C,aAAc,CACZ,mBAAoB,cAEtBhS,UAAU,UACViS,iBAAkB,IAGlBC,QAAS,0BAAMxP,GAAG,cAAT,sBAIX,yBAAK1C,UAAU,sBACb,kBAAC,GAAD,CACEqK,aAAc5E,EAASG,eACvBnB,QAASvF,KAAKC,MAAMsF,WAGvB2K,EACC,yBACEpP,UAAU,gBACVL,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBK,MAAO,OACPP,OAAQ,UAGV,kBAAC,KAAD,CACEiP,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,QAASK,KAIb,yBAAKpP,UAAU,oBAEb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,eAEb,kBAAC,IAAD,CACEA,UAAU,kBACVmS,MAAO,CAAC,GAAI,IACZC,QAAS,EACTC,aAAa,EACbC,WAAY,EACZC,YAAY,SACZC,WAAY,GACZC,aAAc,EACd/S,UAAU,aACViC,OAAO,cAEP,yBAAK3B,UAAU,sBACb,kBAAC,EAAD,CACEyH,eAAgBhC,EAASgC,eACzBH,WAAY7B,EAAS6B,WACrBD,MAAO5B,EAAS4B,SAGpB,yBAAKrH,UAAU,uBACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEA,UAAU,gBACVmS,MAAO,CAAC,GAAI,IACZC,QAAS,IACTC,aAAa,EACbC,WAAY,EACZC,YAAY,SACZC,WAAY,GACZC,aAAc,EACd/S,UAAU,WACViC,OAAO,cAEP,6BACE,yBAAK3B,UAAU,cACb,kBAAC,GAAD,CACEyK,SAAUvL,KAAK2C,MAAM4I,SACrBoB,eAAgB3M,KAAK2M,iBAEvB,yBACE7L,UAAU,aACVL,MAAO,CACLsI,SAAU,WACVyK,OAAQ,GACRC,MAAO,GACPxM,OAAQ,IAGV,4BACElB,QAAS/F,KAAKqQ,UACd5P,MAAO,CACLqK,SAAU,GACVpJ,QAAS,UACTe,OAAQ,UACRD,WAAY,UACZT,WAAY,SAPhB,eAaF,yBACEjB,UAAU,aACVL,MAAO,CACLsI,SAAU,WACVyK,OAAQ,GACRC,MAAO,IACPxM,OAAQ,IAGV,4BACElB,QAAS,kBACP,EAAK2N,aAAa,EAAK/Q,MAAM4I,WAE/B9K,MAAO,CACLqK,SAAU,GACVpJ,QAAS,UACTe,OAAQ,UACRD,WAAY,UACZT,WAAY,SAThB,sBAiBN,yBAAKjB,UAAU,oBACiBoE,IAA7BlF,KAAK2C,MAAMmL,OAAOgB,aACgB5J,IAAnClF,KAAK2C,MAAMmL,OAAOiB,aAChB,kBAACpB,GAAD,CACEE,WAAYtH,EAASsH,WACrBC,OAAQ9N,KAAK2C,MAAMmL,SAGrB,kBAAC2B,GAAD,CACEC,UAAW1P,KAAK2C,MAAM+M,UACtB7B,WAAYtH,EAASsH,gBAM/B,yBACE/M,UAAU,eACVL,MAAO,CACLmD,UAAW,OACXlC,QAAS,YACTf,QAAS,OACTE,WAAY,SACZD,eAAgB,aAGlB,yBAAKH,MAAO,CAAEsK,WAAY,GAAIjJ,MAAO,YAjLzD,WACE,QAAeoD,IAAX4I,QACoB5I,IAAlB4I,EAAOgB,aAC2B5J,IAAhC4I,EAAOgB,OAAOG,cAChB,OACE,kBAAC,IAAM5I,SAAP,KACGyH,EAAOgB,OAAOK,SAAWrB,EAAOgB,OAAOM,gBAD1C,IAEGtB,EAAOgB,OAAOK,UA2KJwE,IAEH,yBAAKlT,MAAO,CAAEsK,WAAY,KACxB,4BACEjK,UAAS,sBAAiBd,KAAK2C,MAAM+M,WACnC,eACFjP,MAAO,CAAEE,QAAS,OAAQE,WAAY,UACtCkF,QAAS/F,KAAKmQ,YACdyD,SAAU5T,KAAK2C,MAAM+M,WAEpB1P,KAAK2C,MAAM+M,UACR,0BACA,gBACJ,yBACEvO,IAAKyE,EAAQ,KACbpE,IAAI,GACJf,MAAO,CAAEC,OAAQ,OAAQqK,WAAY,WAI3C,yBAAKtK,MAAO,CAAEsK,WAAY,KACxB,4BACEhF,QAAS/F,KAAKoQ,WACdtP,UAAS,yBAAoBd,KAAK2C,MAAM+M,WACtC,eACFkE,SAAU5T,KAAK2C,MAAM+M,WAJvB,yBAUiCxK,IAAlClF,KAAKC,MAAMkE,KAAK0P,cACf,yBAAKpT,MAAO,CAAEsK,WAAY,GAAID,SAAU,KACA,KAArC9K,KAAKC,MAAMkE,KAAK0P,cAAcrQ,GAC7B,kBAAC,IAAD,CACEE,GAAE,kBACFjD,MAAO,CACLgD,eAAgB,OAChB3B,MAAO,YAJX,uBAUA,kBAAC,IAAD,CACE4B,GAAE,iBAAY1D,KAAKC,MAAMkE,KAAK0P,cAAcrQ,IAC5C/C,MAAO,CACLgD,eAAgB,OAChB3B,MAAO,YAJX,wBAYJ,iCAIC,OAqBjB,kBAAC,KAAD,CACEgS,sBAAoB,EACpBlB,YAAa,IACb7J,SAAU4J,KAAMoB,SAASC,kB,GAzlBV3R,aAumBZ2D,gBANS,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAGc,CACtCO,uBACAO,4BAFae,CAGZ+J,IC7mBGA,I,mBACJ,WAAY9P,GAAQ,IAAD,8BACjB,4CAAMA,KAiFR+P,iBAAmB,WACjB,EAAK9M,SAAS,CAAEyH,MAAM,KAnFL,EAsFnBsF,iBAAmB,WACjB,EAAK/M,SAAS,CAAEyH,MAAM,KArFtB,EAAKhI,MAAQ,CACX4D,SAAU,GACVuH,OAAQ,GACRvC,SAAU,GACVmE,WAAW,EACXQ,oBAAoB,EACnBvF,MAAM,GAGT,EAAKwF,YAAc,EAAKA,YAAY1K,KAAjB,gBACnB,EAAK2K,WAAa,EAAKA,WAAW3K,KAAhB,gBAClB,EAAKkH,eAAiB,EAAKA,eAAelH,KAApB,gBACtB,EAAK4K,UAAY,EAAKA,UAAU5K,KAAf,gBACjB,EAAK6K,eAAiB,EAAKA,eAAe7K,KAApB,gBAfL,E,iFAkBE,IAAD,OAEPqC,EACP9H,KAAKC,MADP8H,MAASD,OAEXjF,IACGC,IADH,gDACgDgF,EAAOyI,aACpDxN,MAAK,SAAAC,GACJ,IAAMuD,EAAWvD,EAAIC,KAErB,EAAKC,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsG,SAAUA,EACV2J,oBAAoB,MAetB,EAAKhN,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsL,SAAUhF,EAASiK,uB,yCAMRC,GAAY,IAAD,OAE1BA,EAAU1I,MAAMD,OAAOyI,aAAevQ,KAAKC,MAAM8H,MAAMD,OAAOyI,aAE9DvQ,KAAKC,MAAMgF,2BACX7E,QAAQC,IAAI,SACZL,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,OAEVjL,IACGC,IADH,gDAE6C9C,KAAKC,MAAM8H,MAAMD,OAAOyI,aAElExN,MAAK,SAAAC,GACJ,IAAMuD,EAAWvD,EAAIC,KAErB,EAAKC,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsG,SAAUA,MAGZ,EAAKrD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsL,SAAUhF,EAASiK,wB,qCAMdlF,GAEbtL,KAAKkD,SAAS,CAAEqI,SAAUD,M,mCASfA,GACX,IAAIoF,EAAaC,KAAYrF,EAAO,CAAEsF,sBAAuB,IAG7D5Q,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsL,SAAUmF,MAEZ1Q,KAAKgQ,qB,kCAEM,IAAD,OACJa,EAA2BC,KAAKC,MAAM,CAC1CC,YAAa,CACXC,cAAe,sCACfC,aAAc,gCAEhBC,gBAAgB,IAGlBN,EACGO,KAAK,CACJC,MAAO,gFACPC,KAAM,qDACNlN,KAAM,UACNmN,kBAAkB,EAClBC,kBAAmB,SACnBC,iBAAkB,YAClBC,gBAAgB,IAEjB3O,MAAK,SAAA+K,GACAA,EAAOxC,OACT,EAAKpI,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/BsL,SAAUhF,EAASiK,kBAErBK,EAAyBO,KAAK,oBAAa,GAAI,YAG/CtD,EAAO6D,UAAYb,KAAKc,cAAcC,QAEtChB,EAAyBO,KAAK,sBAAU,GAAI,YA7BxC,IAgCF7K,EAAavG,KAAK2C,MAAlB4D,W,qCAGKA,GACb,IAAIuL,EAAM,GA2EV,YAzEoB5M,IAAhBqB,EAAS/C,MACsC,IAA7C+C,EAASwL,iBAAiBC,SAAS,OACrCF,EAAM,qLACNvL,EAASsH,WAAWoE,SAAQ,SAAC3D,EAAWxB,GACtC,IAAI6B,EAAS,GACbL,EAAUK,OAAOsD,SAAQ,SAAArD,IACW,IAA9BA,EAAMxK,KAAK4N,SAAS,MAEtBrD,GAAM,cAAWC,EAAMxK,KAAjB,YAAyBwK,EAAMtD,MAA/B,KAENqD,GAAM,UAAOC,EAAMtD,MAAb,QAGV,IAAI4G,EAAevD,EAAOwD,UAAU,EAAGxD,EAAOyD,OAAS,GAErB,aAA9B7L,EAASwL,iBACXD,GAAM,gDAA6ChF,EACjD,EADI,4EACiEA,EACrE,EAFI,cAEGwB,EAAUO,gBAFb,eAGJtI,EAAS8L,UAHL,YAIFH,EAJE,gBAQNJ,GAAM,gDAA6ChF,EACjD,EADI,4EACiEA,EACrE,EAFI,kBAEOvG,EAASwL,iBAFhB,YAGJzD,EAAUO,gBAHN,eAICtI,EAAS8L,UAJV,YAIuBH,EAJvB,iBAUVJ,GAAM,MAENA,EAAM,gLACNvL,EAASsH,WAAWoE,SAAQ,SAAC3D,EAAWxB,GACtC,IAAI6B,EAAS,GACbL,EAAUK,OAAOsD,SAAQ,SAAArD,IACW,IAA9BA,EAAMxK,KAAK4N,SAAS,MAEtBrD,GAAM,cAAWC,EAAMxK,KAAjB,YAAyBwK,EAAMtD,MAA/B,KAENqD,GAAM,UAAOC,EAAMtD,MAAb,QAGV,IAAI4G,EAAevD,EAAOwD,UAAU,EAAGxD,EAAOyD,OAAS,GACrB,WAA9B7L,EAASwL,iBACXD,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,cAEGwB,EAAUO,gBAFb,eAGJtI,EAAS8L,UAHL,YAIFH,EAJE,gBAM8B,WAA9B3L,EAASwL,iBACfD,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,eAEIwB,EAAUO,gBAFd,gBAGJtI,EAAS8L,UAHL,YAIFH,EAJE,cAONJ,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,cAEGwB,EAAUO,gBAFb,eAGJtI,EAAS8L,UAHL,YAIFH,EAJE,iBAOVJ,GAAM,MAGHA,I,oCAIP9R,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,OAFE,IAIJvH,EAAavG,KAAK2C,MAAlB4D,SAEJuL,EAAS9R,KAAKsQ,eAAe/J,GAE7B+L,EAAI,0FAAsFtS,KAAK2C,MAAM4I,SAAjG,WACRvL,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,MAGbtP,QAAQC,IAAIyR,GAEZjP,IACGgC,KAAK,uCAAwC,CAC5CyN,KAAMA,EACNC,KAAMT,IAEP/O,KACC,SAASyP,GACPpS,QAAQC,IAAImS,GACZ,IAAMxD,EAAQwD,EAASvP,KAAKwP,OACtB3D,EAAS0D,EAASvP,KAAK6L,OAE7B9O,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,CACNkB,MAAOA,EACPF,OAAQA,OAGZ9O,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,OAEbjK,KAAKzF,OAER8E,MACC,SAASkK,GACPhP,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,EACX5B,OAAQ,CACNiB,aAAcC,OAGlB5O,QAAQC,IAAI2O,IACZvJ,KAAKzF,S,mCAIXA,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,OAFC,IAIHvH,EAAavG,KAAK2C,MAAlB4D,SAEJuL,EAAS9R,KAAKsQ,eAAe/J,GAE7B+L,EAAI,0FAAsFtS,KAAK2C,MAAM4I,SAAjG,WACRvL,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,MAGb7M,IACGgC,KAAK,uCAAwC,CAC5CyN,KAAMA,EACNC,KAAMT,IAEP/O,KACC,SAASyP,GACPpS,QAAQC,IAAImS,GACZ,IAAMxD,EAAQwD,EAASvP,KAAKwP,OACtB3D,EAAS0D,EAASvP,KAAK6L,OAE7B9O,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B6N,OAAQ,CACNkB,MAAOA,EACPF,OAAQA,OAGZ9O,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,MAGkC,SAA3C1P,KAAK2C,MAAMmL,OAAOgB,OAAOG,gBAE3BjP,KAAKC,MAAMyE,qBACT1E,KAAK2C,MAAM4D,SAAS/C,GACpBxD,KAAK2C,MAAM4D,SAAS3B,SAGtBkM,KAAKM,KAAK,CACRhN,KAAM,UACNiN,MAAM,iFACNpQ,MAAO,IACPS,QAAS,MACTsP,YAAa,eACb0B,SAAS,6DAAD,OAEC9M,EAAQ,KAFT,mFAOV+M,aAAM,kFAA6C,CACjDC,YAAa,QAGjBnN,KAAKzF,OAER8E,MACC,SAASkK,GACPhP,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/ByP,WAAW,EACX5B,OAAQ,CACNiB,aAAcC,OAGlB5O,QAAQC,IAAI2O,IACZvJ,KAAKzF,S,+BAGH,IAAD,SACsBA,KAAK2C,MAA1B4D,EADD,EACCA,SAAUuH,EADX,EACWA,OACVoC,EAAuBlQ,KAAK2C,MAA5BuN,mBAgBR,OACE,kBAAC,IAAM7J,SAAP,KAEE,yBAAKvF,UAAU,mBACf,kBAAC+R,GAAA,EAAD,CACItJ,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDlG,IAAG,gBACHoH,KAAM3K,KAAK2C,MAAMgI,KACjBE,QAAS7K,KAAKiQ,iBACd6C,aAAc,CACZ,mBAAoB,cAEtBhS,UAAU,UACViS,iBAAkB,IAGlBC,QAAS,0BAAMxP,GAAG,cAAT,sBAIX,yBAAK1C,UAAU,sBACb,kBAAC,GAAD,CACEqK,aAAc5E,EAASG,eACvBnB,QAASvF,KAAKC,MAAMsF,WAGvB2K,EACC,yBACEpP,UAAU,gBACVL,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBK,MAAO,OACPP,OAAO,UAGT,kBAAC,KAAD,CACEiP,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,QAASK,KAIb,kBAAC5P,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAAC,EAAD,CACEwB,eAAgBhC,EAASgC,eACzBH,WAAY7B,EAAS6B,WACrBD,MAAO5B,EAAS4B,SAGpB,kBAAC7H,EAAA,EAAD,CACEU,MAAI,EACJT,WAAS,EACTE,MAAO,CAAEsN,cAAe,UACxB3K,GAAI,GACJC,GAAI,EACJ0D,GAAI,GAEJ,kBAACzG,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEgG,SAAU,IAC5B,yBAAK3F,UAAU,eACb,yBAAKA,UAAU,cACb,kBAAC,GAAD,CACEyK,SAAUvL,KAAK2C,MAAM4I,SACrBoB,eAAgB3M,KAAK2M,iBAEvB,yBACE7L,UAAU,aACVL,MAAO,CACLsI,SAAU,WACVyK,OAAQ,GACRC,MAAO,GACPxM,OAAQ,IAGV,4BACElB,QAAS/F,KAAKqQ,UACd5P,MAAO,CACLqK,SAAU,GACVpJ,QAAS,UACTe,OAAQ,UACRD,WAAY,UACZT,WAAY,SAPhB,eAaF,yBACUjB,UAAU,aACVL,MAAO,CACLsI,SAAU,WACVyK,OAAQ,GACRC,MAAO,IACPxM,OAAQ,IAGV,4BACElB,QAAS,kBACP,EAAK2N,aAAa,EAAK/Q,MAAM4I,WAE/B9K,MAAO,CACLqK,SAAU,GACVpJ,QAAS,UACTe,OAAQ,UACRD,WAAY,UACZT,WAAY,SAThB,qBAiBZ,yBAAKjB,UAAU,oBACiBoE,IAA7BlF,KAAK2C,MAAMmL,OAAOgB,aACgB5J,IAAnClF,KAAK2C,MAAMmL,OAAOiB,aAChB,kBAACpB,GAAD,CACEE,WAAYtH,EAASsH,WACrBC,OAAQ9N,KAAK2C,MAAMmL,SAGrB,kBAAC2B,GAAD,CACEC,UAAW1P,KAAK2C,MAAM+M,UACtB7B,WAAYtH,EAASsH,gBAM/B,kBAACvN,EAAA,EAAD,CAAMU,MAAI,GACR,yBACEF,UAAU,eACVL,MAAO,CACLmD,UAAW,OACXlC,QAAS,YACTf,QAAS,OACTE,WAAY,SACZD,eAAgB,aAGlB,yBAAKH,MAAO,CAAEsK,WAAY,GAAIjJ,MAAO,YA9JrD,WACE,QAAeoD,IAAX4I,QACoB5I,IAAlB4I,EAAOgB,aAC2B5J,IAAhC4I,EAAOgB,OAAOG,cAChB,OACE,kBAAC,IAAM5I,SAAP,KACGyH,EAAOgB,OAAOK,SAAWrB,EAAOgB,OAAOM,gBAD1C,IAEGtB,EAAOgB,OAAOK,UAwJRwE,IAEH,yBAAKlT,MAAO,CAAEsK,WAAY,KACxB,4BACEjK,UAAS,sBAAiBd,KAAK2C,MAAM+M,WACnC,eACFjP,MAAO,CAAEE,QAAS,OAAQE,WAAY,UACtCkF,QAAS/F,KAAKmQ,YACdyD,SAAU5T,KAAK2C,MAAM+M,WAEpB1P,KAAK2C,MAAM+M,UAAY,0BAAkB,gBAC1C,yBACEvO,IAAKyE,EAAQ,KACbpE,IAAI,GACJf,MAAO,CAAEC,OAAQ,OAAQqK,WAAY,WAI3C,yBAAKtK,MAAO,CAAEsK,WAAY,KACxB,4BACEhF,QAAS/F,KAAKoQ,WACdtP,UAAS,yBAAoBd,KAAK2C,MAAM+M,WACtC,eACFkE,SAAU5T,KAAK2C,MAAM+M,WAJvB,yBAUiCxK,IAAlClF,KAAKC,MAAMkE,KAAK0P,cACf,yBAAKpT,MAAO,CAAEsK,WAAY,GAAID,SAAU,KACtC,kBAAC,IAAD,CACEpH,GAAE,iBAAY1D,KAAKC,MAAMkE,KAAK0P,cAAcrQ,IAC5C/C,MAAO,CACLgD,eAAgB,OAChB3B,MAAO,YAJX,wBAWF,kCAQZ,kBAAC,KAAD,CACEgS,sBAAoB,EACpBlB,YAAa,IACb7J,SAAU4J,KAAMoB,SAASC,kB,GAriBV3R,cAmjBZ2D,gBANS,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAGc,CACtCO,uBACAO,4BAFae,CAGZ+J,ICrjBYmE,G,iLAjBH,IAEJnM,EACE/H,KAAKC,MADP8H,MAEJ,OACE,kBAAC,IAAM1B,SAAP,KACE,kBAAC,IAAD,CAAY8N,eAAgB,KAC1B,kBAAC,GAAD,CAAcpM,MAAOA,EAAOxC,QAASvF,KAAKC,MAAMsF,WAElD,kBAAC,IAAD,CAAY6O,eAAgB,KAC1B,kBAACC,GAAD,CAAqBtM,MAAOA,EAAOxC,QAASvF,KAAKC,MAAMsF,gB,GAZ5BlD,a,uCCkBrC,SAASiS,KACP,OACE,kBAACtH,GAAA,EAAD,CAAYzC,QAAQ,QAAQzI,MAAM,gBAAgByS,MAAM,UACrD,kBACD,kBAAC,IAAD,CAAMzS,MAAM,UAAU4B,GAAI,KAA1B,gBAEQ,KACP,IAAI8Q,MAAOC,cACX,KAKP,IAEM/R,G,4LAEE1C,KAAKC,MAAMgG,KAAKyO,iBAClB1U,KAAKC,MAAMsF,QAAQC,KAAK,c,uDAGKmP,GAC3BA,EAAU1O,KAAKyO,iBACjB1U,KAAKC,MAAMsF,QAAQC,KAAK,c,+BAINxF,KAAKC,MAAjBC,QAER,OACE,kBAACI,EAAA,EAAD,CACEQ,UAAU,gBACVL,MAAO,CACLC,OAAQ,UACRO,MAAO,OACP2T,mBAAoB,SACpBC,iBAAkB,YAClBC,eAAgB,UAGlB,kBAACxU,EAAA,EAAD,CAEEG,MAAO,CACLE,QAAS,OACToN,cAAe,SACf9M,MAAO,OACPS,QAAS,GACTiC,WAAY,EACZjD,OAAQ,YAGV,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAU,mBACxB,kBAACR,EAAA,EAAD,CACEQ,UAAU,iBACVE,MAAI,EACJoC,GAAI,GACJ2D,GAAI,EACJ1D,GAAI,EACJ5C,MAAO,CAAEuG,aAAc,IAEvB,yBAAKlG,UAAU,sBACb,kBAAC,IAAD,CAAM4C,GAAG,YACP,yBACEvC,IAA8B,YAC9BK,IAAI,GACJf,MAAO,CAAEC,OAAQ,OAAQiD,WAAY,SAK7C,kBAACrD,EAAA,EAAD,CACEQ,UAAU,kBACVE,MAAI,EACJoC,GAAI,GACJ2D,GAAI,EACJ1D,GAAI,EACJ9C,WAAS,GAET,kBAACD,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CACE0C,GAAG,cACHjD,MAAO,CAAEgD,eAAgB,OAAQsH,WAAY,SAE7C,kBAACgK,GAAA,EAAD,CACEtU,MAAO,CACL+B,WAAY,UACZV,MAAO,QACPC,WAAY,IACZQ,UAAW,OACXuI,SAAU,OACV3B,YAAa,OACbC,aAAc,QAIhB4L,UAAW,kBAAC,KAAD,MACXzK,QAAQ,aAbV,6BAoBJ,kBAACjK,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CACE0C,GAAG,SACHjD,MAAO,CAAEgD,eAAgB,OAAQsH,WAAY,SAE7C,kBAACgK,GAAA,EAAD,CACEtU,MAAO,CACL+B,WAAY,UACZV,MAAO,QACPC,WAAY,IACZ+I,SAAU,OACVvI,UAAW,OACXtB,MAAO,SAETsJ,QAAQ,aATV,8BAeJ,kBAACjK,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CACE0C,GAAG,UACHjD,MAAO,CAAEgD,eAAgB,OAAQsH,WAAY,SAE7C,kBAACgK,GAAA,EAAD,CACEtU,MAAO,CACL+B,WAAY,UACZV,MAAO,QACPC,WAAY,IACZQ,UAAW,OACXuI,SAAU,OACV7J,MAAO,SAETsJ,QAAQ,aATV,4BAiBR,kBAACjK,EAAA,EAAD,CACEG,MAAO,CACLgG,SAAU,EAGV/E,QAAS,GACTsF,aAAc,QAEhBzG,WAAS,GAET,kBAACD,EAAA,EAAD,CACEQ,UAAU,sBACVE,MAAI,EACJoC,GAAI,GACJC,GAAI,EACJ0D,GAAI,EACJtG,MAAO,IAEP,6BAEE,kBAACuM,GAAA,EAAD,CACEC,UAAU,KACV1C,QAAQ,KAERzI,MAAM,cACNmT,cAAY,EACZxU,MAAO,CAAEqB,MAAO,UAAWC,WAAY,IAAK+I,SAAU,QANxD,uBAgBF,6BACE,kBAACkC,GAAA,EAAD,CACEzC,QAAQ,KAERzI,MAAM,gBACNoT,WAAS,GAJX,0FAO8C,IAC5C,0BAAMpU,UAAU,6BAAhB,MARF,mBAQgE,IAC9D,0BAAMA,UAAU,6BAAhB,QATF,qEAcA,kBAACR,EAAA,EAAD,CACEC,WAAS,EACT0T,QAAS,EACTnT,UAAU,0BAGV,kBAACR,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CAAM0C,GAAG,WAAWjD,MAAO,CAAEgD,eAAgB,SAC3C,kBAACsR,GAAA,EAAD,CACExK,QAAQ,YACRzI,MAAM,UACNrB,MAAO,CACLqB,MAAO,OACPU,WAAY,UAEZT,WAAY,IACZQ,UAAW,OACXuI,SAAU,OACVpJ,QAAS,aAVb,+BAoBV,kBAACpB,EAAA,EAAD,CACEQ,UAAU,iBACVP,WAAS,EACTS,MAAI,EACJoC,GAAI,GACJC,GAAI,EACJ0D,GAAI,EACJtG,MAAO,CACLiB,QAAS,QAGX,yBACEjB,MAAO,CACL+B,WAAW,8CACXsS,eAAgB,QAChB7T,MAAO,OACPN,QAAS,OACTW,aAAc,gBAmCtB,kBAACgT,GAAD,Y,GArQejS,aA+QVC,eA1SA,CACb6S,SAAU,CACRxR,WAAY,GACZyR,cAAe,IAEjBC,KAAM,CACJ3U,OAAQ,OACRC,QAAS,OACToN,cAAe,WAkSJzL,CAAmB0D,aAHV,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,QAEiC,GAAzBD,CAA6BtD,K,qDCrTzD4S,I,OAAa,yJACbC,GAAgB,kDCmBhBC,GAAelT,YAAW,CAC9BuH,KAAM,CACJ,sBAAuB,CACrB/H,MAAO,WAET,8BAA+B,CAC7B2T,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAhBApT,CAoBlBqT,MA0BH,SAASrB,KACP,OACE,kBAACtH,GAAA,EAAD,CAAYzC,QAAQ,QAAQzI,MAAM,gBAAgByS,MAAM,UACrD,kBACD,kBAAC,IAAD,CAAMzS,MAAM,UAAU4B,GAAG,KAAzB,gBAEQ,KACP,IAAI8Q,MAAOC,cACX,K,IAKDmB,G,YACJ,WAAY3V,GAAQ,IAAD,8BACjB,4CAAMA,KAkCR2M,SAAW,SAAAvH,GACT,IAAIwQ,GAAU,EACVC,EAAe,EAAKnT,MAAMoT,UAEV,UAAhB1Q,EAAE2Q,OAAOxS,MAC6B,IAApC8R,GAAW/C,KAAKlN,EAAE2Q,OAAO1K,QAC3BuK,GAAU,EACVC,EAAaG,MACX,kFAEFH,EAAaG,MAAQ,IAEL,aAAhB5Q,EAAE2Q,OAAOxS,MACgC,IAAvC+R,GAAchD,KAAKlN,EAAE2Q,OAAO1K,QAC9BuK,GAAU,EACVC,EAAaI,SACX,iMAEFJ,EAAaI,SAAW,IAER,cAAhB7Q,EAAE2Q,OAAOxS,KACP6B,EAAE2Q,OAAO1K,QAAU,EAAK3I,MAAMuT,UAChCL,GAAU,EACVC,EAAaK,UAAY,sEAEzBL,EAAaK,UAAY,IAGzBN,GACF,EAAK3S,SAAS,CACZ6S,UAAWD,IAIf,EAAK5S,SAAL,gBAAiBmC,EAAE2Q,OAAOxS,GAAK6B,EAAE2Q,OAAO1K,SArEvB,EAwEnB8K,SAAW,SAAA/Q,GACTA,EAAEC,iBAEF,IAAI+Q,EAAe,GAuBnB,GArBI,EAAK1T,MAAMuT,WAAa,EAAKvT,MAAMwT,YACrCE,EAAe,4DACmB,KAAhC,EAAK1T,MAAMwT,UAAUG,SACvBD,EAAe,oFACkB,KAA/B,EAAK1T,MAAMuT,SAASI,SACtBD,EAAe,iEAKe,KAA5B,EAAK1T,MAAMsT,MAAMK,SACnBD,EAAe,qDAE+C,IAA5Df,GAAW/C,KAAKgE,OAAO,EAAK5T,MAAMsT,OAAOO,iBAC3CH,EAAe,yDAEmB,KAAhC,EAAK1T,MAAM8T,UAAUH,SACvBD,EAAe,qDACkB,KAA/B,EAAK1T,MAAM+T,SAASJ,SACtBD,EAAe,sDAEW,KAAxBA,EAAaC,OAMf,OALA,EAAKrW,MAAMkG,OAAO6M,QAAUqD,OAE5B,EAAKnT,SAAS,CACZiD,OAAQ,EAAKlG,MAAMkG,SAKvB,IAAMwQ,EAAU,CACdD,SAAU,EAAK/T,MAAM+T,SACrBD,UAAW,EAAK9T,MAAM8T,UACtBR,MAAO,EAAKtT,MAAMsT,MAClBC,SAAU,EAAKvT,MAAMuT,UAEvB9V,QAAQC,IAAIsW,GACZ,EAAK1W,MAAM2W,aAAaD,EAAS,EAAK1W,MAAMsF,UAhH5C,EAAK5C,MAAQ,CACX+T,SAAU,GACVD,UAAW,GACXR,MAAO,GACPC,SAAU,GACVC,UAAW,GACXhQ,OAAQ,GACR4P,UAAW,CACTW,SAAU,GACVD,UAAW,GACXR,MAAO,GACPC,SAAU,GACVC,UAAW,KAdE,E,iFAmBbnW,KAAKC,MAAMgG,KAAKyO,iBAClB1U,KAAKC,MAAMsF,QAAQC,KAAK,c,uDAGKmP,GAC3BA,EAAU1O,KAAKyO,iBACjB1U,KAAKC,MAAMsF,QAAQC,KAAK,YAEtBmP,EAAUxO,SACZwO,EAAUxO,OAAO6M,QAAU,IAAM2B,EAAUxO,OAAO6M,QAElDhT,KAAKkD,SAAS,CACZiD,OAAQwO,EAAUxO,Y,kCAsFZ0Q,GACV,OAAY,OAARA,GAAwB,KAARA,I,+BAOZ,IACA1Q,EAAWnG,KAAK2C,MAAhBwD,OACAjG,EAAYF,KAAKC,MAAjBC,QAER,OACE,kBAAC4W,GAAA,EAAD,CAAW7J,UAAU,OAAO8J,SAAS,MACnC,kBAACC,GAAA,EAAD,MACA,yBAAKlW,UAAWZ,EAAQ+I,OAItB,kBAACgO,GAAA,EAAD,CACErW,eAAe,SACfsW,aAAc,GACdpV,MAAO,4BAEN,yBAAKhB,UAAU,QAClB,kBAAC,IAAD,CAAM4C,GAAG,YACP,yBACEvC,IAA8B,YAC9BK,IAAI,GACJf,MAAO,CAAEC,OAAQ,aAMrB,kBAACsM,GAAA,EAAD,CAAYC,UAAU,KAAK1C,QAAQ,MAAnC,wBAGA,0BAAMzJ,UAAWZ,EAAQiX,KAAMC,YAAU,EAAChB,SAAUpW,KAAKoW,UACvD,kBAAC9V,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GACrB,kBAACmS,GAAD,CACE6B,aAAa,QACbC,KAAK,WACL/M,QAAQ,WACRgN,UAAQ,EACRC,WAAS,EACThU,GAAG,WACH2K,MAAM,UACNsJ,WAAS,EACTnM,MAAOtL,KAAK2C,MAAM+T,SAClB9J,SAAU5M,KAAK4M,YAKnB,kBAACtM,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GACrB,kBAACmS,GAAD,CACEjL,QAAQ,WACRgN,UAAQ,EACRC,WAAS,EACThU,GAAG,YACH2K,MAAM,SACNmJ,KAAK,YACLD,aAAa,QACb/L,MAAOtL,KAAK2C,MAAMmD,UAClB8G,SAAU5M,KAAK4M,YAKnB,kBAACtM,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,IACb,kBAACoS,GAAD,CACEjL,QAAQ,WACRgN,UAAQ,EACRC,WAAS,EACThU,GAAG,QACH2K,MAAM,+BACNmJ,KAAK,QACLD,aAAa,QACb/L,MAAOtL,KAAK2C,MAAMsT,MAClBrJ,SAAU5M,KAAK4M,SACfoC,MAA6C,KAAtChP,KAAK2C,MAAMoT,UAAUE,MAAMK,OAClCoB,WAAY1X,KAAK2C,MAAMoT,UAAUE,SAGrC,kBAAC3V,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,IACb,kBAACoS,GAAD,CACEjL,QAAQ,WACRgN,UAAQ,EACRC,WAAS,EACTF,KAAK,WACLnJ,MAAM,qBACN/J,KAAK,WACLZ,GAAG,WACH6T,aAAa,mBACb/L,MAAOtL,KAAK2C,MAAMuT,SAClBtJ,SAAU5M,KAAK4M,SACfoC,MAAgD,KAAzChP,KAAK2C,MAAMoT,UAAUG,SAASI,OACrCoB,WAAY1X,KAAK2C,MAAMoT,UAAUG,YAGrC,kBAAC5V,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,IACb,kBAACoS,GAAD,CACEjL,QAAQ,WACRgN,UAAQ,EACRC,WAAS,EACTF,KAAK,YACLnJ,MAAM,wCACN/J,KAAK,WACLZ,GAAG,YACH6T,aAAa,oBACb/L,MAAOtL,KAAK2C,MAAMwT,UAClBvJ,SAAU5M,KAAK4M,SACfoC,MAAiD,KAA1ChP,KAAK2C,MAAMoT,UAAUI,UAAUG,OACtCoB,WAAY1X,KAAK2C,MAAMoT,UAAUI,cAIvC,6BACE,yBAAKrV,UAAU,cAAcqF,EAAO6M,UAGtC,kBAAC+B,GAAA,EAAD,CACE3Q,KAAK,SACLoT,WAAS,EACTjN,QAAQ,YACRzI,MAAM,UACNhB,UAAWZ,EAAQyX,QALrB,8BASA,kBAACrX,EAAA,EAAD,CAAMC,WAAS,EAACkB,QAAQ,YACtB,kBAACnB,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CAAM0C,GAAG,SAAS6G,QAAQ,SAA1B,2FAOR,kBAAC0M,GAAA,EAAD,CAAKW,GAAI,GACP,kBAAC,GAAD,Y,GApQe3N,IAAM5H,WAmRhBC,eAxTA,CACb,UAAW,CACTuV,KAAM,CACJjR,gBAAiB,UAGrBqC,MAAO,CACL1H,UAAW,GACXZ,QAAS,OACToN,cAAe,SACflN,WAAY,UAEdiX,OAAQ,CACNnW,OAAQ,EACRiF,gBAAiB,WAEnBuQ,KAAM,CACJlW,MAAO,OACPM,UAAW,GAEboW,OAAQ,CACNhW,OAAQ,aAmSGW,CACb0D,aALsB,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,UAKxB,CAAEyQ,apB9VsB,SAACmB,EAAUxS,GAAX,OAAuB,SAAAhB,GACjD1B,IACGgC,KAAK,qCAAsCkT,GAC3ChV,MAAK,SAAAC,GAAG,OAAIuC,EAAQC,KAAK,aACzBV,OAAM,SAAAC,GAAG,OACRR,EAAS,CACPH,KCbkB,aDclBC,QAASU,EAAIyN,SAASvP,aoBqV5B+C,CAGE4P,K,gGChREoC,G,YACJ,WAAY/X,GAAQ,IAAD,8BACjB,4CAAMA,KAURgY,eAAiB,WACf,EAAK/U,SAAS,CAAEwM,WAAW,EAAMwI,KAAM,KAEvCC,IAAMrV,IAAN,mDAAsD,EAAKH,MAAMyV,WAC9DrV,MAAK,SAAAC,GACJ,EAAKE,SAAS,CAAEgV,KAAMlV,EAAIC,KAAMyM,WAAW,IAC3CtP,QAAQC,IAAI,EAAKsC,MAAMuV,SAExBpT,OAAM,SAAAO,GAAC,OAAI,EAAKnC,SAAS,CAAEwM,WAAW,QAnBxB,EAsBnB2I,aAAe,SAAA7N,GAEb,EAAKtH,SAAS,CACZkV,SAAU5N,EAAMwL,OAAO1K,SAvBzB,EAAK3I,MAAQ,CACXwD,OAAQ,GACRiS,SAAU,GACVF,KAAM,GACNxI,WAAW,GANI,E,mHA8BE1P,KAAK2C,MAAhBwD,OADA,IAEAjG,EAAYF,KAAKC,MAAjBC,QAER,OACE,oCACE,kBAACI,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,MAAO,CAAEC,OAAQ,OAAQkG,gBAAiB,eAE1C,kBAACtG,EAAA,EAAD,CAAMQ,UAAU,iBAAiBE,MAAI,GACnC,kBAACV,EAAA,EAAD,CACEC,WAAS,EACTO,UAAU,kBACVL,MAAO,CAAEmG,gBAAiB,UAE1B,kBAACtG,EAAA,EAAD,CACEQ,UAAU,iBACVE,MAAI,EACJoC,GAAI,GACJ2D,GAAI,EACJ1D,GAAI,EACJ5C,MAAO,CAAEuG,aAAc,IAEvB,yBAAKlG,UAAU,sBACb,kBAAC,IAAD,CAAM4C,GAAG,YACP,yBACEjD,MAAO,CACLC,OAAQ,OACRiB,OAAQ,GACRa,WAAW,yCACXsS,eAAgB,gBAM1B,kBAACxU,EAAA,EAAD,CACEQ,UAAU,kBACVE,MAAI,EACJoC,GAAI,GACJ2D,GAAI,EACJ1D,GAAI,EACJ9C,WAAS,GAET,kBAACD,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CACE0C,GAAG,cACHjD,MAAO,CAAEgD,eAAgB,OAAQsH,WAAY,SAE7C,kBAACgK,GAAA,EAAD,CACEtU,MAAO,CACL+B,WAAY,UACZV,MAAO,QACPC,WAAY,IACZQ,UAAW,OACXuI,SAAU,OACV3B,YAAa,OACbC,aAAc,QAIhB4L,UAAW,kBAAC,KAAD,MACXzK,QAAQ,aAbV,6BAoBJ,kBAACjK,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CACE0C,GAAG,SACHjD,MAAO,CAAEgD,eAAgB,OAAQsH,WAAY,SAE7C,kBAACgK,GAAA,EAAD,CACEtU,MAAO,CACL+B,WAAY,UACZV,MAAO,QACPC,WAAY,IACZ+I,SAAU,OACVvI,UAAW,OACXtB,MAAO,SAETsJ,QAAQ,aATV,8BAeJ,kBAACjK,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CACE0C,GAAG,UACHjD,MAAO,CAAEgD,eAAgB,OAAQsH,WAAY,SAE7C,kBAACgK,GAAA,EAAD,CACEtU,MAAO,CACL+B,WAAY,UACZV,MAAO,QACPC,WAAY,IACZQ,UAAW,OACXuI,SAAU,OACV7J,MAAO,SAETsJ,QAAQ,aATV,6BAkBV,kBAACjK,EAAA,EAAD,CAAMQ,UAAU,iBAAiBE,MAAI,GACnC,kBAACV,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACViB,QAAQ,SACRZ,WAAW,SACXJ,MAAO,CAAEC,OAAQ,OAAQgB,QAAS,SAElC,kBAAC4W,GAAA,EAAD,CACElC,SAAUpW,KAAKiY,eACfhL,UAAU,OACVnM,UAAWZ,EAAQqY,YAEnB,kBAACC,GAAA,EAAD,CACE1X,UAAWZ,EAAQ0O,MACnB6J,YAAY,4BACZC,WAAY,CAAE,aAAc,6BAC5B9L,SAAU5M,KAAKqY,eAEjB,kBAACM,GAAA,EAAD,CAEE5S,QAAS/F,KAAKiY,eACdnX,UAAWZ,EAAQ0Y,WACnB1K,aAAW,UAEX,kBAAC,KAAD,QAIJ,kBAACoK,GAAA,EAAD,CAAOxX,UAAWZ,EAAQ2J,MACxB,kBAACgP,GAAA,EAAD,CAAO/X,UAAWZ,EAAQ4Y,MAAO5K,aAAW,gBAC1C,kBAAC6K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,WACA,kBAACA,GAAA,EAAD,CAAW1E,MAAM,SAAjB,sBACA,kBAAC0E,GAAA,EAAD,CAAW1E,MAAM,SAAjB,uCAIJ,kBAAC2E,GAAA,EAAD,KACGlZ,KAAK2C,MAAMuV,KAAK5U,KAAI,SAAA6V,GAAG,OACtB,kBAACH,GAAA,EAAD,CAAUzV,IAAK4V,EAAI3V,IACjB,kBAACyV,GAAA,EAAD,CAAWhM,UAAU,KAAKmM,MAAM,OAC7BD,EAAIE,WAEP,kBAACJ,GAAA,EAAD,CAAW1E,MAAM,SAAS4E,EAAI3S,QAC9B,kBAACyS,GAAA,EAAD,CAAW1E,MAAM,SAASC,KAAK2E,EAAIG,WAAWC,eAAe,aAMpEvZ,KAAK2C,MAAM+M,UACV,yBACEjP,MAAO,CACLE,QAAS,OACTC,eAAgB,SAChBF,OAAQ,QACRG,WAAY,SACZkN,cAAe,SACfpM,OAAQ,SAGV,kBAAC6X,GAAA,EAAD,CAAkB5J,KAAM,GAAInP,MAAO,CAAEkB,OAAQ,WAG/C,yCAEyB,GAA1B3B,KAAK2C,MAAMuV,KAAK9F,QAAgBpS,KAAK2C,MAAM+M,UA+D1C,qCA9DA,yBACEjP,MAAO,CACLE,QAAS,OACTC,eAAgB,SAChBF,OAAQ,QACRG,WAAY,SACZkN,cAAe,SACfpM,OAAQ,SAGV,yBACEV,MAAM,MACNP,OAAO,MACP+Y,QAAQ,cACRC,MAAM,8BAEN,uBAAGC,KAAK,OAAOC,SAAS,WACtB,uBAAGC,UAAU,uBACX,6BACEC,YAAY,KACZH,KAAK,UACLI,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,GAAG,WAEL,0BACEC,EAAE,+IACFR,KAAK,YAEP,0BACEQ,EAAE,2IACFR,KAAK,yBACLE,UAAU,qBAEZ,0BACEM,EAAE,0FACFR,KAAK,YAEP,0BACEQ,EAAE,ujBACFR,KAAK,aAGT,0BACEQ,EAAE,yOACFR,KAAK,YAEP,uBAAGE,UAAU,2BAA2BF,KAAK,QAC3C,6BACEI,GAAG,SACHC,GAAG,QACHC,GAAG,QACHC,GAAG,UAEL,0BAAMC,EAAE,4DAId,gD,GAhRSlQ,IAAM5H,WA8RpBC,gBA3VA,SAAAsH,GAAK,MAAK,CACvBC,KAAM,CACJ5I,MAAO,OACPoN,UAAW,QAEbyK,MAAO,GAGPsB,WAAY,CAEVnZ,MAAO,EACPP,OAAQ,OACRqI,SAAU,WACVsR,cAAe,OACf1Z,QAAS,OACTE,WAAY,SACZD,eAAgB,UAElB0Z,UAAW,CACTxY,MAAO,WAETyY,WAAY,CAEV7Y,QAAS,EAETT,MAAO,QAKTuZ,OAAQ,CACNzR,SAAU,WAOVgC,WAAY,EACZ9J,MAAO,QAMTsX,WAAY,CACV7W,QAAS,WACTf,QAAS,OACTE,WAAY,SACZI,MAAO,IACP+F,aAAc,GACdmC,YAAa,QAEfyF,MAAO,CACL6L,KAAM,GAER7B,WAAY,CACVlX,QAAS,OAkSqB,CAAEgZ,WAAW,GAAhCpY,CAAwC0V,I,qBCzVxC2C,I,yNAtBbtC,aAAe,SAAA/M,GACb,EAAKrL,MAAM2a,qBAAqBtP,I,wEAGhC,OACE,6BACE,kBAAC,KAAD,CACExK,UAAW,mBACXqN,MAAM,GACN7C,MAAOtL,KAAKC,MAAMsI,eAClBqE,SAAU5M,KAAKqY,aACf7M,QAAS,CAEPqP,cAAc,U,GAdHxY,c,gDC0ERgJ,I,sMAjDH,IAAD,OACDyP,EAAY9a,KAAKC,MAAM6a,WAAa,GACtCtK,EAAgB,GAYpB,MAX4B,KAAzBxQ,KAAKC,MAAMoS,YACZ7B,EAAa,iBAAaxQ,KAAKC,MAAM8R,iBAAxB,YACX/R,KAAKC,MAAMoS,UADA,YAETyI,EACDxX,KAAI,SAAAsL,GACH,MAAM,GAAN,OAAUA,EAAMmM,WAAhB,YAA8BnM,EAAMoM,eAErCC,OANU,uBAWb,kBAAC,cAAD,CACA3P,MACEkF,EAEAhF,QAAS,CACPC,KAAM,aACN7B,MAAO,WACP8B,aAAa,EACbC,2BAA2B,EAC3BC,WAAY,EACZC,QAAS,EACTC,cAAc,EACdC,UAAU,EACVC,mBAAmB,EACnBC,YAAW,EACXC,aAAY,EACZC,UAAU,CAAC,aAAa,gBACxB+O,UAAS,GAGX9O,SAAU,CAACC,KAAK,CAACC,KAAK,EAAEC,GAAG,GAAI7I,GAAG,CAAC4I,KAAK,EAAEC,GAAG,GAAIC,IAAK,iBACtDC,eAAgB,SAACC,EAAQzJ,EAAMqI,GAC5B,EAAKrL,MAAMkb,mBAAmB7P,IAEjCsB,SAAU,SAACF,EAAQzJ,EAAMqI,W,GAzCRjJ,c,mPCjBzB,IAAMmJ,GAAU,CACd,CAAEF,MAAO,MAAO6C,MAAO,YACvB,CAAE7C,MAAO,SAAU6C,MAAO,UAC1B,CAAE7C,MAAO,SAAU6C,MAAO,UAC1B,CAAE7C,MAAO,WAAY6C,MAAO,gBAC5B,CAAE7C,MAAO,WAAY6C,MAAO,gBAC5B,CAAE7C,MAAO,QAAS6C,MAAO,mBAUrBiN,GAAe,CAAEC,KAAM,SAAAC,GAAM,O,4VAAA,IAAUA,EAAV,CAAkBrU,OAAQ,QACvDsU,G,YACJ,WAAYtb,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,CACX2U,KAAM,GACNjF,UAAW,GACXN,iBAAkB,MAClBlL,aAAc,EACdL,OAAQ,eACRG,OAAO,EACP4B,eAAgB,GAChBJ,MAAO,OACPqT,UAAW,GAWX3N,WAAY,GACZ4N,OAAQ,GAERX,UAAW,GACXY,cAAe,GACf9Y,QAAS,GACT+Y,YAAa,GACbC,UAAW,GACXhX,QAAS,IAEX,EAAKmN,iBAAmB9H,IAAM4R,YAC9B,EAAKC,YAAc7R,IAAM4R,YACzB,EAAKE,UAAY9R,IAAM4R,YACvB,EAAKG,wBAA0B,EAAKA,wBAAwBvW,KAA7B,gBAE/B,EAAKwW,eAAiB,EAAKA,eAAexW,KAApB,gBACtB,EAAKyW,sBAAwB,EAAKA,sBAAsBzW,KAA3B,gBAC7B,EAAK0W,oBAAsB,EAAKA,oBAAoB1W,KAAzB,gBAC3B,EAAKwW,eAAiB,EAAKA,eAAexW,KAApB,gBACtB,EAAKmV,qBAAuB,EAAKA,qBAAqBnV,KAA1B,gBAC5B,EAAK2W,aAAe,EAAKA,aAAa3W,KAAlB,gBACpB,EAAK0V,mBAAqB,EAAKA,mBAAmB1V,KAAxB,gBA3CT,E,iFA8CE,IAAD,OAClB5C,IAAMC,IAAN,uCAAiDC,MAAK,SAAAC,GACpD,IAAMJ,EAAUI,EAAIC,KACdoZ,EAAgBzZ,EAAQ0Z,QAAO,SAAAnc,GAAM,OAAIA,EAAOsH,MAAM2K,OAAS,KAC/DmK,EAAgBF,EAAc/Y,KAAI,SAAAnD,GACtC,MAAO,CAAEmL,MAAOnL,EAAOqD,GAAI2K,MAAOhO,EAAO8B,gBAE3C,EAAKiB,SAAS,CACZN,QAASyZ,EACTX,cAAea,EACfZ,YAAa/Y,EAAQ,GAAG6E,MAAMnE,KAAI,SAAAwD,GAChC,MAAO,CAAEwE,MAAOxE,EAAKtD,GAAI2K,MAAOrH,EAAKM,gBAGzC,EAAKlE,SAAS,CACZ0Y,UAAWhZ,EAAQ,GAAGY,GACtBoB,QAAShC,EAAQ,GAAG6E,MAAM,GAAGjE,U,8CAKXgH,GACtB,IAAMwL,EAASxL,EAAMwL,OACf1K,EAAQ0K,EAAO1K,MACfgM,EAAOtB,EAAOsB,KAKpBtX,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,uBACXqX,EAAOhM,Q,2CAISA,GACnBtL,KAAKkD,SAAS,CACZqF,eAAgB+C,M,0JAMZkF,E,iBAA2BxQ,KAAK2C,MAAMoP,iB,YAC1C/R,KAAK2C,MAAM0P,U,YACRrS,KAAK2C,MAAMmY,UACbxX,KAAI,SAAAsL,GACH,MAAM,GAAN,OAAUA,EAAMmM,WAAhB,YAA8BnM,EAAMoM,eAErCC,O,YAICuB,EAAc,CAChBhM,cAAcA,EACd3C,WAAY7N,KAAK2C,MAAMkL,WACvB+N,UAAW5b,KAAK2C,MAAMiZ,UACtBhX,QAAS5E,KAAK2C,MAAMiC,QACpB0S,KAAMtX,KAAK2C,MAAM2U,KACjBjF,UAAWrS,KAAK2C,MAAM0P,UACtBN,iBAAkB/R,KAAK2C,MAAMoP,iBAC7BlL,aAAc,EACdL,OAAQ,eACRG,OAAO,EACP4B,eAAgB,GAChBJ,MAAO,QAET/H,QAAQC,IAAImc,G,2IAICC,GACb,IAAMnF,EAAOtX,KAAK+R,iBAAiB2K,QAAQzc,MAAMqX,KAEjDtX,KAAKkD,SAAL,gBACGoU,EAAOmF,EAAanR,U,uFAGGmR,G,mFAC1Bzc,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B0b,YAAa,OAEfvb,QAAQC,IAAIoc,GACNnF,EAAOtX,KAAK8b,YAAYY,QAAQzc,MAAMqX,K,SACzBtX,KAAK2C,MAAMC,QAAQ+Z,MAAK,SAASxc,GAClD,OAAOA,EAAOqD,KAAOiZ,EAAanR,S,OADhCnL,E,OAGJC,QAAQC,IAAIF,GACZH,KAAKkD,UAAL,oBACGoU,EAAOmF,EAAanR,OADvB,6BAC8CnL,EAAOsH,MAAMnE,KAAI,SAAAwD,GAC3D,MAAO,CAAEwE,MAAOxE,EAAKtD,GAAI2K,MAAOrH,EAAKM,eAFzC,yBAGejH,EAAOsH,MAAM,GAAGjE,IAH/B,I,iJAMkBiZ,GAClB,IAAMnF,EAAOtX,KAAK+b,UAAUW,QAAQzc,MAAMqX,KAC1CtX,KAAKkD,SAAL,gBACGoU,EAAOmF,EAAanR,U,yCAINA,GACjBtL,KAAKkD,SAAS,CACZsN,cAAelF,M,iCAMjBtL,KAAKkD,SAAS,CACZ4X,UAAU,GAAD,oBACJ9a,KAAK2C,MAAMmY,WADP,CAEP,CAAEE,WAAY,GAAID,WAAY,SAEhClN,WAAY,O,gDAKUxI,EAAGyH,GAE3B9M,KAAK2C,MAAMmY,UAAUhO,GAAOkO,WAAa3V,EAAE2Q,OAAO1K,MAClDtL,KAAKkD,SAAS,CAAE4X,UAAW9a,KAAK2C,MAAMmY,c,gDAId2B,EAAc3P,GAEtC9M,KAAK2C,MAAMmY,UAAUhO,GAAOiO,WAAa0B,EAAanR,MACtDtL,KAAKkD,SAAS,CAAE4X,UAAW9a,KAAK2C,MAAMmY,c,gCAQtC,IAHA,IAAM8B,EAAkB5c,KAAK2C,MAAMmY,UAAU1I,OAEzCyK,EAAa,GACRC,EAAI,EAAGA,EAAIF,EAAiBE,IACnCD,EAAWrX,KAAK,CAAE8F,MAAO,GAAIlH,KAAM,QAErCpE,KAAKkD,SAAS,CACZ2K,WAAW,GAAD,oBACL7N,KAAK2C,MAAMkL,YADN,CAER,CAAEc,OAAQkO,EAAYhO,gBAAiB,W,6CAKtBxJ,EAAG0X,GAExB/c,KAAK2C,MAAMkL,WAAWkP,GAAQlO,gBAAkBxJ,EAAE2Q,OAAO1K,MACzDtL,KAAKkD,SAAS,CAAE2K,WAAY7N,KAAK2C,MAAMkL,e,4CAEnBxI,EAAG0X,EAAQC,GAE/Bhd,KAAK2C,MAAMkL,WAAWkP,GAAQpO,OAAOqO,GAAQ1R,MAAQjG,EAAE2Q,OAAO1K,MAC9DtL,KAAKkD,SAAS,CAAE2K,WAAY7N,KAAK2C,MAAMkL,e,+BAG/B,IAAD,OACC3N,EAAYF,KAAKC,MAAjBC,QAER,OACE,kBAAC,IAAMmG,SAAP,KACE,yBAAK5F,MAAO,CAAEE,QAAS,OAAQC,eAAgB,WAC7C,0DAGF,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTO,UAAWZ,EAAQ+c,4BACnBhJ,QAAS,GAET,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACzG,EAAA,EAAD,CAAMG,MAAO,CAAE+B,WAAY,YAAad,QAAS,aACdwD,IAAhClF,KAAK2C,MAAM+Y,cAAc,GACxB,kBAACpb,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,4DACA,kBAAC,KAAD,CACEuU,OAAQF,GACR5P,QAASxL,KAAK2C,MAAM+Y,cACpBwB,IAAKld,KAAK8b,YACVxE,KAAK,YACL6F,aAAcnd,KAAK2C,MAAM+Y,cAAc,GACvC9O,SAAU5M,KAAKkc,yBAInB,kBAAC5b,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,gDACA,kBAAC,KAAD,CACEuU,OAAQF,GACR5P,QAASxL,KAAK2C,MAAMgZ,YACpBuB,IAAKld,KAAK+b,UACVzE,KAAK,UACL6F,aAAcnd,KAAK2C,MAAMgZ,YAAY,GACrC/O,SAAU5M,KAAKmc,wBAKrB,GAGF,kBAAC7b,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,GACR,wDACA,2BACEsW,KAAK,OACLxW,UAAU,uBACV8L,SAAU5M,KAAKgc,2BAGnB,kBAAC1b,EAAA,EAAD,CAAMU,MAAI,GACR,iDACA,2BACEsW,KAAK,YACLxW,UAAU,uBACV8L,SAAU5M,KAAKgc,4BAIrB,kBAAC1b,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAI2D,GAAI,IACpB,IACD,yBAAKtG,MAAO,CAAEuG,aAAc,GAAIzF,UAAW,KAA3C,+BAGA,kBAAC,KAAD,CACET,UAAU,cACVwa,OAAQF,GACR5P,QAASA,GACT0R,IAAKld,KAAK+R,iBACVuF,KAAK,mBACL6F,aAAc3R,GAAQ,GACtBoB,SAAU5M,KAAKic,mBAIrB,kBAAC3b,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAI2D,GAAI,IACrB,yBAAKtG,MAAO,CAAEuG,aAAc,GAAIzF,UAAW,KAA3C,iCAGA,kBAAC,GAAD,CACEqZ,qBAAsB5a,KAAK4a,qBAC3BrS,eAAgBvI,KAAK2C,MAAM4F,qBAMrC,kBAACjI,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,yBAAKjG,UAAU,4BACb,kBAAC,GAAD,CACEiR,iBAAkB/R,KAAK2C,MAAMoP,iBAC7BM,UAAWrS,KAAK2C,MAAM0P,UACtByI,UAAW9a,KAAK2C,MAAMmY,UACtBK,mBAAoBnb,KAAKmb,sBAG7B,kBAAC7a,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEc,UAAW,KAClC,kBAACjB,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAE+B,WAAY,YAAad,QAAS,SAE3C,yBACEjB,MAAO,CACLE,QAAS,OACTC,eAAgB,WAChBe,OAAQ,aAGV,4BAAQoE,QAAS,SAAAV,GAAC,OAAI,EAAK+X,SAAS/X,KAApC,yBAEF,yBACE5E,MAAO,CACL4c,UAAW,OACXtU,SAAU,WACVqF,UAAW,SACXC,UAAW,WAGZrO,KAAK2C,MAAMmY,UAAUxX,KAAI,SAACsL,EAAO9B,GAChC,OACE,yBAAKvJ,IAAKuJ,GACR,kBAACxM,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAAC6C,GAAI,GAAIC,GAAI,EAAG4Q,QAAS,GAC3C,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IAAvB,wBAGA,kBAAC/C,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACrB,2BACEvC,UAAU,uBACVwK,MAAOsD,EAAMoM,WACbpO,SAAU,SAAAvH,GAAC,OACT,EAAKiY,0BAA0BjY,EAAGyH,QAK1C,kBAACxM,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAAC6C,GAAI,GAAIC,GAAI,EAAG4Q,QAAS,GAC3C,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IAAvB,2BAGA,kBAAC/C,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACrB,kBAAC,KAAD,CACEmI,QAASA,GACT2R,aAAc3R,GAAQ,GACtBoB,SAAU,SAAA6P,GAAY,OACpB,EAAKc,0BACHd,EACA3P,SAOZ,kBAAC0Q,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,WAAYV,MAAO,aAG/C,MAGR,kBAACuc,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,YAAaV,MAAO,SAC9C,kBAACX,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAE+B,WAAY,YAAad,QAAS,SAE3C,yBACEjB,MAAO,CACLE,QAAS,OACTC,eAAgB,WAChBe,OAAQ,aAGV,4BAAQoE,QAAS,SAAAV,GAAC,OAAI,EAAKoY,QAAQpY,KAAnC,iBAEF,yBACE5E,MAAO,CACL4c,UAAW,OACXtU,SAAU,WACVqF,UAAW,SACXC,UAAW,WAGZrO,KAAK2C,MAAMkL,WAAWvK,KAAI,SAACgL,EAAWyO,GACrC,OACE,yBAAKxZ,IAAKwZ,EAAQtc,MAAO,CAAEiB,QAAS,KACjC,IADH,QAEQqb,EAAS,EACf,kBAACzE,GAAA,EAAD,CAAO7X,MAAO,CAAEiB,QAAS,KACvB,kBAACpB,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAA/B,WAGCuH,EAAUK,OAAOrL,KAAI,SAACsL,EAAOoO,GAC5B,OACE,kBAAC1c,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,EAAGxD,IAAKyZ,GACpC,2BACElc,UAAU,uBACVwK,MAAOsD,EAAMtD,MACbsB,SAAU,SAAAvH,GAAC,OACT,EAAKqY,sBACHrY,EACA0X,EACAC,IAGJvE,YAAW,gBAAWuE,EAAS,UAMzC,kBAAC1c,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAA/B,WAGA,kBAACzG,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAC7B,2BACEjG,UAAU,wBACVwK,MAAOgD,EAAUO,gBACjBjC,SAAU,SAAAvH,GAAC,OACT,EAAKsY,uBAAuBtY,EAAG0X,gBAYrD,kBAACzc,EAAA,EAAD,CACEC,WAAS,EACTE,MAAO,CAAEG,eAAgB,WAAYc,QAAS,SAE9C,kBAACpB,EAAA,EAAD,CAAMU,MAAI,GACR,4BAAQ+E,QAAS/F,KAAKoc,cAAtB,mB,GAvciB/Z,aAidlBC,eA1dA,CACb2a,4BAA6B,CAC3BrZ,UAAW,QACXlC,QAAS,KAudEY,CAAmBiZ,IChenBnV,G,iLARP,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,GAAD,W,GAJShE,a,gCCGV,YAAC+B,EAAM0D,GAClB,GAAI1D,IAASwZ,KAAY,CAAC,IACdC,EAAuB/V,EAAvB+V,SAAU3H,EAAapO,EAAboO,SACZ4H,EAAU,IAAIC,QAAQ,oCAAqC,CAC7DC,OAAQ,OACRnG,KAAMoG,KAAKC,UAAU,CAAE,MAASL,EAAS,SAAY3H,IACrDlS,QAAS,IAAIma,QAAQ,CAAE,eAAgB,uBAE3C,OAAOC,MAAMN,GACR/a,MAAK,SAAAyP,GACF,GAAIA,EAAShM,OAAS,KAAOgM,EAAShM,QAAU,IAC5C,MAAM,IAAI6X,MAAM7L,EAAS8L,YAE7B,OAAO9L,EAAS+L,UAEnBxb,MAAK,YAAgB,IAAbe,EAAY,EAAZA,MAELU,aAAaga,QAAQ,QAAS1a,MAG1C,GAAIM,IAASqa,KAET,OADAja,aAAaC,WAAW,SACjBia,QAAQC,UAEnB,GAAIva,IAASwa,KAAY,CACrB,IAAMpY,EAAUsB,EAAOtB,OACvB,OAAe,MAAXA,GAA6B,MAAXA,GAClBhC,aAAaC,WAAW,SACjBia,QAAQG,UAEZH,QAAQC,UAEnB,OAAIva,IAAS0a,KACFta,aAAaua,QAAQ,SAAWL,QAAQC,UAAYD,QAAQG,SAEhEH,QAAQG,OAAO,mB,UCrBXG,G,iLAVX,OAAO,kBAACC,GAAA,EAAD,CAAUzZ,MAAI,EAAC9B,GAAG,e,GAFNrB,aC4BR,M,mlBC5BR,IAQD6c,GAA0B,GAG1BC,GAAa,GAEbC,GAAiB,GAGjBC,GAAkB,GASXC,GAA2B,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,OAAQnb,EAA6B,EAA7BA,KAAMob,EAAuB,EAAvBA,SAAU1X,EAAa,EAAbA,OAC3D2X,EAAM,GACJjU,EAAU,GACZkU,EAAQ,GAMZ,OALQtf,QAAQC,IAAI,4BACZD,QAAQC,IAAIyH,GACZ1H,QAAQC,IAAI+D,GACZhE,QAAQC,IAAImf,GAEZpb,GACJ,IAhC0B,qBAiCtBsb,EAAM5X,EAAOkO,QAAUlO,EAAOtE,GAC9Bic,EAAG,UAAMF,EAAN,YAAgBC,EAAhB,YAA4BtB,qBAAUwB,IACzC,MAEJ,IAxCgB,WAyCZ,GAAI5X,EAAO6X,WAAY,CAAC,IAAD,EACK7X,EAAO6X,WAAzBC,EADa,EACbA,KAAMC,EADO,EACPA,QACZH,EAAK,MAAYG,GAAW,IAC5BH,EAAK,OAAaE,GAAQA,EAAO,GAAKF,EAAK,MAAY,EAG3D,GAAI5X,EAAOgY,KAAM,CAAC,IAAD,EACYhY,EAAOgY,KAAxBC,EADK,EACLA,MAAOC,EADF,EACEA,MACfN,EAAK,SAAe,UAAa,SAAVM,EAAmB,IAAM,IAAOD,EAG3D,GAAIjY,EAAOwU,OAAQ,CACf,IAAI2D,EAAgBb,GAAeI,GACnCU,OAAOC,KAAKrY,EAAOwU,QAAQrK,SAAQ,SAAA1O,GAC/B,IAAI+Y,EACAxU,EAAOwU,OAAO/Y,aAAgB2c,OACxBjC,KAAKC,UAAUpW,EAAOwU,OAAO/Y,IAC7BuE,EAAOwU,OAAO/Y,GACxB,GAAI0c,GAAiBA,EAAc1c,GAAM,CACrC,IAAM6c,EAAYH,EAAc1c,GAAK8c,IAC/BC,EAAYL,EAAc1c,GAAKgd,MAChCH,GAAa9D,EAAOlK,QAAUgO,KAC/B9D,EACIgE,GAAahE,EAAOlK,OAASkO,EACvBhE,EAAOkE,MAAM,EAAGF,GAChBhE,EACVoD,EAAMnc,GAAO+Y,QAGjBoD,EAAMnc,GAAO+Y,IAEZoD,EAAMnc,IAASmc,EAAMnc,IAA8B,IAAtBmc,EAAMnc,GAAK6O,gBAClCsN,EAAMnc,MAIzBkc,EAAG,UAAMF,EAAN,YAAgBC,EAAhB,YAA4BtB,qBAAUwB,IACzC,MAEJ,IA/Ee,UAgFXD,EAAG,UAAMF,EAAN,YAAgBC,EAAhB,YAA4B1X,EAAOtE,IACtC,MACJ,IAjFgB,WAkFZ,IAAMid,EAAapB,GAAgBG,GAC7BE,EAAQe,EAAU,gBACfA,EAAa3Y,EAAO4Y,IAAIzF,KAAK,MAChC,CAAEyF,IAAK5Y,EAAO4Y,IAAIzF,KAAK,MAC7BwE,EAAG,UAAMF,EAAN,YAAgBC,EAAhB,YAA4BtB,qBAAUwB,IACzC,MAEJ,IAtFc,SAuFVD,EAAG,UAAMF,EAAN,YAAgBC,EAAhB,YAA4B1X,EAAOtE,IACtCgI,EAAQwS,OAAS,MACjBxS,EAAQqM,KAAOoG,KAAKC,UAAUpW,EAAO7E,MACrC,MACJ,IA5Fc,SA6FVwc,EAAG,UAAMF,EAAN,YAAgBC,GACnBhU,EAAQwS,OAAS,OACjBxS,EAAQqM,KAAOoG,KAAKC,UAAUpW,EAAO7E,MACrC,MACJ,IA/Fc,SAgGVwc,EAAG,UAAMF,EAAN,YAAgBC,EAAhB,YAA4B1X,EAAOtE,IACtCgI,EAAQwS,OAAS,SACjB,MACJ,QACI,MAAM,IAAIK,MAAJ,wCAA2Cja,IAEzD,MAAO,CAAEqb,MAAKjU,YAUZmV,GAA4B,SAAC,GAA0C,IAAxCnO,EAAuC,EAAvCA,SAAUpO,EAA6B,EAA7BA,KAAMob,EAAuB,EAAvBA,SAAU1X,EAAa,EAAbA,OACnD9D,EAAkBwO,EAAlBxO,QAASua,EAAS/L,EAAT+L,KACb4B,EAAOjB,GAAwBM,GAC/BoB,EAAKzB,GAAWK,GAGpB,OAAQpb,GAEJ,IA9HgB,WAgJhB,IA7I0B,qBA8ItB,IAAKJ,EAAQ6c,IAAI,iBACb,MAAM,IAAIxC,MACN,oTAWR,MAAO,CACHpb,KATGkd,EACD5B,EAAKjb,KAAI,SAAAN,GAAG,aACLA,EADK,CAERQ,GAAG,GAAD,OAAK2c,EAAK7c,KAAI,SAAAC,GAAG,OAAIP,EAAIO,MAAM0X,KAAK,WAE1C2F,EACIrC,EAAKjb,KAAI,SAAAN,GAAG,OAAKA,EAAI8d,eAAe,MAAQ9d,EAA3B,MAAsCA,EAAtC,CAA2CQ,GAAIR,EAAI4d,QACpErC,EAGNwC,MAAOC,SAAShd,EAAQlB,IAAI,iBAAkB,KAEtD,IA9Jc,SA+JV,MAAO,CACHG,KAAK,MACE6E,EAAO7E,KADV,CAEAO,GAAI2c,EAAOA,EAAK7c,KAAI,SAAAC,GAAG,OAAIgb,EAAKhb,MAAM0X,KAAK,KAAO2F,EAAKrC,EAAKqC,GAAMrC,EAAK/a,MAGnF,QACI,MAAO,CAAEP,KAAMsb,GAAc,MAmD1B0C,GArCM,SAAC1B,GAA+C,IAAvC2B,EAAsC,uDAAzBC,KAAWC,UAQlD,gDAAO,WAAOhd,EAAMob,EAAU1X,GAAvB,oBAAAuZ,EAAA,+DACsB/B,GAAyB,CAC9CC,SACAnb,OACAob,WACA1X,WAJI2X,EADL,EACKA,IAAKjU,EADV,EACUA,QADV,kBAQI0V,EAAWzB,EAAKjU,GAASzI,MAAK,SAAAyP,GAAQ,OACzCmO,GAA0B,CACtBnO,WACApO,OACAob,WACA1X,eAbL,2CAAP,uDAAM,GA6BKmZ,CAAa,oCAVF,SAACxB,GAAuB,IAAlBjU,EAAiB,uDAAP,GACjCA,EAAQxH,UACTwH,EAAQxH,QAAU,IAAIma,QAAQ,CAAEmD,OAAQ,sBAE5C,IAAMC,EAAW/c,aAAaua,QAAQ,SAEtC,OADAvT,EAAQxH,QAAQwd,IAAI,gBAApB,iBAA+CD,IACxCJ,KAAWC,UAAU3B,EAAKjU,M,iNC7M/BiW,GAAQ,CACZC,MAAO,kBAAC,KAAD,CAAcjhB,MAAO,CAACyH,YAAa,KAC1CyZ,OAAQ,kBAAC,KAAD,CAAWlhB,MAAO,CAACyH,YAAa,KACxCtF,QAAS,kBAAC,KAAD,CAAanC,MAAO,CAACyH,YAAa,KAC3CT,MAAO,kBAAC,KAAD,CAAkBhH,MAAO,CAACyH,YAAa,KAC9Cb,UAAW,kBAAC,KAAD,CAAsB5G,MAAO,CAACyH,YAAa,KACtD0Z,QAAS,kBAAC,KAAD,CAAUnhB,MAAO,CAACyH,YAAa,KACxC2Z,MAAO,kBAAC,KAAD,CAAkBphB,MAAO,CAACyH,YAAa,MAuC1C4Z,GAAiB,SAAAxK,GACrB,IAAIjG,EAAQ,GACZ,OAAQiG,GACN,IAAK,QACHjG,EAAQ,4BACR,MACF,IAAK,SACHA,EAAQ,oBACR,MACF,IAAK,UACHA,EAAQ,wBACR,MACF,IAAK,QACHA,EAAQ,4BACR,MACF,IAAK,YACHA,EAAQ,kBACR,MACF,IAAK,QACHA,EAAQ,sBACR,MACF,QACEA,EAAQiG,EAIZ,OAAOjG,GAOMrL,gBAJS,SAAArD,GAAK,MAAK,CAChCof,UAAWC,aAAarf,MAGXqD,EArEF,SAAC,GAAD,IAAG+b,EAAH,EAAGA,UAAWE,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,OAA3B,OACX,6BACE,kBAAC,IAAD,CAAMxe,GAAE,WAAcjD,MAAO,CAAEgD,eAAgB,SAC7C,kBAACuG,GAAA,EAAD,KACE,kBAAC,KAAD,CAAevJ,MAAO,CAAEqK,SAAU,GAAIhJ,MAAO,aAC7C,uBAAGrB,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAASjJ,MAAO,YAAtD,kCAcHigB,EACGA,EAAUze,KAAI,SAAAkc,GAAQ,OACpBA,EAAS2C,QACP,kBAACC,GAAA,EAAD,CACE7e,IAAKic,EAASlI,KACd5T,GAAE,WAAM8b,EAASlI,MACjB+K,YAAW,UAAKP,IC/CLQ,ED+C8B9C,EAASlI,KC9CrDgL,EACF9L,cACA+L,MAAM,KACNjf,KAAI,SAAAkf,GACD,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKhC,MAAM,MAEpDvF,KAAK,QDyCAlV,QAASkc,EACTU,SAAUlB,GAAMjC,EAASlI,QAEzB,KCnDW,IAAAgL,KDqDjB,GACJ,kBAACM,GAAA,EAAD,CAAYC,MAAOX,EAAQY,OAAQ,WEhDxBC,GALE,SAAC9iB,GAAD,OAAW,kBAAC+iB,GAAA,EAAD,iBACpB/iB,EADoB,CAExBob,KAAM4H,O,oDCDGrZ,GAAQsZ,aAAe,CAChCpZ,QAAS,CACLqZ,QAASC,KACTC,UAAY,CACRC,KAAM,WAEVtU,MAAOuU,Q,8ICSAC,GAhBgB,SAAAvjB,GAAK,OAChC,kBAACwjB,GAAA,EAAYxjB,EACT,kBAACyjB,GAAA,EAAD,CACIvV,MAAM,OACNwV,eAAe,IAEnB,kBAACD,GAAA,EAAD,CACIvV,MAAM,4BACNyV,UAAU,EACVD,eAAe,EACfpZ,QAAQ,SAEZ,kBAACsZ,GAAA,EAAD,QCJOC,GALW,SAAA7jB,GAAK,OAC3B,kBAAC8jB,GAAA,EAAW9jB,ICaH+jB,GAAkB,SAAA/jB,GAAK,OAClC,kBAACgkB,GAAA,EAAD,iBACMhkB,EADN,CAEEoR,MAAM,qCACN6S,QAAS,kBAAC,GAAD,MACTC,mBAAmB,IAEnB,kBAACC,GAAA,EAAD,KAEE,kBAAC,KAAD,CAAW9b,OAAO,cAAc+b,UAAU,IAC1C,kBAACC,GAAA,EAAD,CACExjB,UAAU,gBACVwH,OAAO,mBACP+b,UAAU,IAKZ,kBAACE,GAAA,EAAD,MACA,kBAACV,GAAA,EAAD,SAKOW,GAAoB,SAAAvkB,GAAK,OACpC,kBAACwkB,GAAA,EAAD,iBAAYxkB,EAAZ,CAAmBoR,MAAM,mCACvB,kBAACqT,GAAA,EAAD,CAAYd,SAAS,QACnB,kBAACe,GAAA,EAAD,CAAWC,YAAU,EAACtc,OAAO,gBAC7B,kBAACqc,GAAA,EAAD,CAAWC,YAAU,EAACtc,OAAO,qBAC7B,kBAACqc,GAAA,EAAD,CAAWC,YAAU,EAACC,WAAS,EAACvc,OAAO,mBAShCwc,GAAkB,SAAA7kB,GAAK,OAClC,kBAAC8kB,GAAA,EAAD,iBAAU9kB,EAAV,CAAiBoR,MAAM,mCACrB,kBAACqT,GAAA,EAAD,CAAYM,QAAS,kBAAC,GAAD,OACnB,kBAACL,GAAA,EAAD,CAAWC,YAAU,EAACtc,OAAO,KAAKsL,UAAQ,IAC1C,kBAAC+Q,GAAA,EAAD,CAAWC,YAAU,EAACtc,OAAO,gBAC7B,kBAACqc,GAAA,EAAD,CAAWC,YAAU,EAACtc,OAAO,qBAC7B,kBAACqc,GAAA,EAAD,CAAWC,YAAU,EAACC,WAAS,EAACvc,OAAO,mBChDzC2c,I,OAAYrf,EAAQ,KAAesf,IA0DxB7Z,G,iLAlDH,IAAD,OACDyP,EAAY9a,KAAKC,MAAM6a,WAAa,GACtCtK,EAAgB,GACQ,KAAzBxQ,KAAKC,MAAMoS,YACZ7B,EAAa,iBAAaxQ,KAAKC,MAAM8R,iBAAxB,YACX/R,KAAKC,MAAMoS,UADA,YAETyI,EACDxX,KAAI,SAAAsL,GACH,MAAM,GAAN,OAAUA,EAAMmM,WAAhB,YAA8BnM,EAAMoM,eAErCC,OANU,uBAUf,IAAIkK,EAAuBF,GAAUzU,EAAc,CAAC4U,YAAa,IACjE,OACE,kBAAC,cAAD,CACA9Z,MACE6Z,EAEA3Z,QAAS,CACPC,KAAM,aACN7B,MAAO,WACP8B,aAAa,EACbC,2BAA2B,EAC3BC,WAAY,EACZC,QAAS,EACTC,cAAc,EACdC,UAAU,EACVC,mBAAmB,EACnBC,YAAW,EACXC,aAAY,EACZC,UAAU,CAAC,aAAa,gBACxB+O,UAAS,GAGX9O,SAAU,CAACC,KAAK,CAACC,KAAK,EAAEC,GAAG,GAAI7I,GAAG,CAAC4I,KAAK,EAAEC,GAAG,GAAIC,IAAK,iBACtDC,eAAgB,SAACC,EAAQzJ,EAAMqI,GAC5B,EAAKrL,MAAMkb,mBAAmB7P,IAEjCsB,SAAU,SAACF,EAAQzJ,EAAMqI,W,GA1CRjJ,aCGVsY,I,0NAxBbtC,aAAe,SAAA/M,GACb,EAAKrL,MAAM2a,qBAAqBtP,I,wEAGhC,OACA,kBAAChL,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACnB,kBAAC,KAAD,CACA5C,MAAO,CAACQ,MAAM,SACZH,UAAW,mBACXqN,MAAM,GACN7C,MAAOtL,KAAKC,MAAMsI,eAClBqE,SAAU5M,KAAKqY,aACf7M,QAAS,CAEPqP,cAAc,U,GAfHxY,cCgBnB4iB,GAAYrf,EAAQ,KAAesf,GA+HxBG,G,YAvHb,WAAYplB,GAAO,IAAD,8BAChB,4CAAMA,KACDqQ,eAAiB,EAAKA,eAAe7K,KAApB,gBAFN,E,4EAKHc,GACb,IAAIuL,EAAM,GAwEV,OAvEmD,IAA7CvL,EAASwL,iBAAiBC,SAAS,OACrCF,EAAM,qLACNvL,EAASsH,WAAWoE,SAAQ,SAAC3D,EAAWxB,GACtC,IAAI6B,EAAS,GACbL,EAAUK,OAAOsD,SAAQ,SAAArD,IACW,IAA9BA,EAAMxK,KAAK4N,SAAS,MAEtBrD,GAAM,cAAWC,EAAMxK,KAAjB,YAAyBwK,EAAMtD,MAA/B,KAENqD,GAAM,UAAOC,EAAMtD,MAAb,QAGV,IAAI4G,EAAevD,EAAOwD,UAAU,EAAGxD,EAAOyD,OAAS,GACrB,aAA9B7L,EAASwL,iBACXD,GAAM,gDAA6ChF,EACjD,EADI,4EACiEA,EACrE,EAFI,cAEGwB,EAAUO,gBAFb,eAGJtI,EAAS8L,UAHL,YAIFH,EAJE,gBAQNJ,GAAM,gDAA6ChF,EACjD,EADI,4EACiEA,EACrE,EAFI,kBAEOvG,EAASwL,iBAFhB,YAGJzD,EAAUO,gBAHN,eAICtI,EAAS8L,UAJV,YAIuBH,EAJvB,iBAOVJ,GAAM,MAINA,EAAM,gLACNvL,EAASsH,WAAWoE,SAAQ,SAAC3D,EAAWxB,GACtC,IAAI6B,EAAS,GACbL,EAAUK,OAAOsD,SAAQ,SAAArD,IACW,IAA9BA,EAAMxK,KAAK4N,SAAS,MAEtBrD,GAAM,cAAWC,EAAMxK,KAAjB,YAAyBwK,EAAMtD,MAA/B,KAENqD,GAAM,UAAOC,EAAMtD,MAAb,QAGV,IAAI4G,EAAevD,EAAOwD,UAAU,EAAGxD,EAAOyD,OAAS,GACrB,WAA9B7L,EAASwL,iBACXD,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,cAEGwB,EAAUO,gBAFb,eAGJtI,EAAS8L,UAHL,YAIFH,EAJE,gBAM8B,WAA9B3L,EAASwL,iBACfD,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,eAEIwB,EAAUO,gBAFd,gBAGJtI,EAAS8L,UAHL,YAIFH,EAJE,cAONJ,GAAM,gDAA6ChF,EACjD,EADI,uEAC4DA,EAChE,EAFI,cAEGwB,EAAUO,gBAFb,eAGJtI,EAAS8L,UAHL,YAIFH,EAJE,iBAQVJ,GAAM,KAGHA,I,+BAEC,IAAD,OACHvL,EAAW,CAACwL,iBAAmB/R,KAAKC,MAAM8R,iBAAiBlE,WAAW7N,KAAKC,MAAM4N,WAAWwE,UAAUrS,KAAKC,MAAMoS,WACjHP,EAASmT,GAAUjlB,KAAKsQ,eAAe/J,GAAU,CAAC6e,YAAa,IAEnE,OACE,kBAAC,cAAD,CACA9Z,MACEwG,EAEAtG,QAAS,CACPC,KAAM,aACN7B,MAAO,WACP8B,aAAa,EACbC,2BAA2B,EAC3BC,WAAY,EACZC,QAAS,EACTC,cAAc,EACdC,UAAU,EACVC,mBAAmB,EACnBC,YAAW,EACXC,aAAY,EACZC,UAAU,CAAC,aAAa,gBACxB+O,UAAS,GAGX9O,SAAU,CAACC,KAAK,CAACC,KAAK,EAAEC,GAAG,GAAI7I,GAAG,CAAC4I,KAAK,EAAEC,GAAG,GAAIC,IAAK,iBACtDC,eAAgB,SAACC,EAAQzJ,EAAMqI,GAC5B,EAAKrL,MAAMkb,mBAAmB7P,IAEjCsB,SAAU,SAACF,EAAQzJ,EAAMqI,W,GA9GNjJ,a,+NCd3B,IAAMmJ,GAAU,CACd,CAAEF,MAAO,MAAO6C,MAAO,YACvB,CAAE7C,MAAO,SAAU6C,MAAO,UAC1B,CAAE7C,MAAO,SAAU6C,MAAO,UAC1B,CAAE7C,MAAO,WAAY6C,MAAO,gBAC5B,CAAE7C,MAAO,WAAY6C,MAAO,gBAC5B,CAAE7C,MAAO,QAAS6C,MAAO,mBAErBmX,GAAc,CAClB,CAAEha,MAAO,OAAQ6C,MAAO,QACxB,CAAE7C,MAAO,SAAU6C,MAAO,UAC1B,CAAE7C,MAAO,OAAQ6C,MAAO,SAmBpBiN,GAAe,CAAEC,KAAM,SAAAC,GAAM,O,4VAAA,IAAUA,EAAV,CAAkBrU,OAAQ,QACvDse,G,YACJ,WAAYtlB,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,CACX2U,KAAM,GACNjF,UAAW,GACXN,iBAAkB,MAClBlL,aAAc,EACdL,OAAQ,eACRG,OAAO,EACP4B,eAAgB,GAChBJ,MAAO,GACPqT,UAAW,GAWX3N,WAAY,GACZ4N,OAAQ,GAERX,UAAW,GACXY,cAAe,GACf9Y,QAAS,GACT+Y,YAAa,GACbC,UAAW,GACXhX,QAAS,GACTwD,WAAY,EACZjI,OAAQ,CAACmL,MAAO,GAAI6C,MAAO,IAC3BrH,KAAK,CAACwE,MAAO,GAAI6C,MAAO,KAE1B,EAAK4D,iBAAmB9H,IAAM4R,YAC9B,EAAKC,YAAc7R,IAAM4R,YACzB,EAAKE,UAAY9R,IAAM4R,YACvB,EAAK2J,UAAYvb,IAAM4R,YACvB,EAAKG,wBAA0B,EAAKA,wBAAwBvW,KAA7B,gBAE/B,EAAKwW,eAAiB,EAAKA,eAAexW,KAApB,gBACtB,EAAKyW,sBAAwB,EAAKA,sBAAsBzW,KAA3B,gBAC7B,EAAK0W,oBAAsB,EAAKA,oBAAoB1W,KAAzB,gBAC3B,EAAKwW,eAAiB,EAAKA,eAAexW,KAApB,gBACtB,EAAKmV,qBAAuB,EAAKA,qBAAqBnV,KAA1B,gBAC5B,EAAK2W,aAAe,EAAKA,aAAa3W,KAAlB,gBACpB,EAAK0V,mBAAqB,EAAKA,mBAAmB1V,KAAxB,gBAC1B,EAAKggB,kBAAoB,EAAKA,kBAAkBhgB,KAAvB,gBACzB,EAAKigB,qBAAuB,EAAKA,qBAAqBjgB,KAA1B,gBAC5B,EAAKkgB,oBAAsB,EAAKA,oBAAoBlgB,KAAzB,gBAlDV,E,iFAqDE,IAAD,OAMlB5C,IACGC,IADH,gDACgD9C,KAAKC,MAAM2lB,cACxD7iB,MAAK,SAAAC,GACJ5C,QAAQC,IAAI2C,EAAIC,MAChB,IAAMsD,EAAWvD,EAAIC,KACrB,EAAKC,SAAS,CACZsN,cAAejK,EAASiK,cACxB3C,WAAYtH,EAASsH,WACrBjJ,QAAS2B,EAAS3B,QAClB0S,KAAM/Q,EAASG,eACf2L,UAAW9L,EAAS8L,UACpBN,iBAAkBxL,EAASwL,iBAC3BlL,aAAcN,EAASM,aACvBL,OAAQD,EAASC,OACjBG,MAAOJ,EAASI,MAChB4B,eAAgBhC,EAASgC,eACzBJ,MAAO5B,EAAS4B,MAChBC,WAAY7B,EAAS6B,WACrB0S,UAAWvU,EAASsf,YAAc,QAIxChjB,IAAMC,IAAN,uCAAiDC,MAAK,SAAAC,GACpD,IAAMJ,EAAUI,EAAIC,KACdoZ,EAAgBzZ,EAAQ0Z,QAAO,SAAAnc,GAAM,OAAIA,EAAOsH,MAAM2K,OAAS,KAC/DmK,EAAgBF,EAAc/Y,KAAI,SAAAnD,GACtC,MAAO,CAAEmL,MAAOnL,EAAOqD,GAAI2K,MAAOhO,EAAO8B,gBAE3C,EAAKiB,SAAS,CACZN,QAASyZ,EACTX,cAAea,EACfZ,YAAa/Y,EAAQ,GAAG6E,MAAMnE,KAAI,SAAAwD,GAChC,MAAO,CAAEwE,MAAOxE,EAAKtD,GAAI2K,MAAOrH,EAAKM,qB,8CAMrBoD,GACtB,IAAMwL,EAASxL,EAAMwL,OACf1K,EAAQ0K,EAAO1K,MACfgM,EAAOtB,EAAOsB,KAKpBtX,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,uBACXqX,EAAOhM,Q,2CAISA,GACnBtL,KAAKkD,SAAS,CACZqF,eAAgB+C,M,0JASZkF,E,iBAA0BxQ,KAAK2C,MAAMoP,iB,YACzC/R,KAAK2C,MAAM0P,U,YACTrS,KAAK2C,MAAMmY,UACZxX,KAAI,SAAAsL,GACH,MAAM,GAAN,OAAUA,EAAMmM,WAAhB,YAA8BnM,EAAMoM,eAErCC,O,YAICuB,EAAc,CAChBhM,cAAeA,EACf3C,WAAY7N,KAAK2C,MAAMkL,WACvBjJ,QAAS5E,KAAK2C,MAAMiC,QACpB8B,eAAgB1G,KAAK2C,MAAM2U,KAC3BjF,UAAWrS,KAAK2C,MAAM0P,UACtBN,iBAAkB/R,KAAK2C,MAAMoP,iBAC7BlL,aAAc,EACdL,OAAQ,gBACRG,OAAO,EACP4B,eAAgBvI,KAAK2C,MAAM4F,eAC3BJ,MAAOnI,KAAK2C,MAAMwF,MAClBC,WAAY4Y,SAAShhB,KAAK2C,MAAMyF,YAChCyd,WAAW7lB,KAAK2C,MAAMmY,WAExBjY,IACGijB,IADH,qDACqD9lB,KAAKC,MAAM2lB,aAAepJ,GAC5EzZ,MAAK,SAASyP,GACbG,aAAM,oCAAuB,CAC3BC,YAAa,MAEfxS,QAAQC,IAAImS,MAGhBpS,QAAQC,IAAImc,G,2IAICC,GACb,IAAMnF,EAAOtX,KAAK+R,iBAAiB2K,QAAQzc,MAAMqX,KAEjDtX,KAAKkD,SAAL,gBACGoU,EAAOmF,EAAanR,U,uFAGGmR,G,mFAE1Bzc,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B0b,YAAa,OAEfvb,QAAQC,IAAIoc,GACNnF,EAAOtX,KAAK8b,YAAYY,QAAQzc,MAAMqX,K,SACzBtX,KAAK2C,MAAMC,QAAQ+Z,MAAK,SAASxc,GAClD,OAAOA,EAAOqD,KAAOiZ,EAAanR,S,OADhCnL,E,OAGJC,QAAQC,IAAIF,GACZH,KAAKkD,UAAL,oBAEGoU,EAAOmF,EAAanR,OAFvB,6BAGenL,EAAOsH,MAAMnE,KAAI,SAAAwD,GAC5B,MAAO,CAAEwE,MAAOxE,EAAKtD,GAAI2K,MAAOrH,EAAKM,eAJzC,yBAMWjH,EAAOsH,MAAM,GAAGjE,IAN3B,I,iJASkBiZ,GAClB,IAAMnF,EAAOtX,KAAK+b,UAAUW,QAAQzc,MAAMqX,KAC1CtX,KAAKkD,SAAL,gBACGoU,EAAOmF,EAAanR,U,0CAGLmR,GAClB,IAAMnF,EAAOtX,KAAKwlB,UAAU9I,QAAQzc,MAAMqX,KAC1CtX,KAAKkD,SAAL,gBACGoU,EAAOmF,EAAanR,QAEvBlL,QAAQC,IAAIiX,EAAKmF,K,yCAGAnR,GACjBtL,KAAKkD,SAAS,CACZsN,cAAelF,M,iCAMjBtL,KAAKkD,SAAS,CACZ4X,UAAU,GAAD,oBACJ9a,KAAK2C,MAAMmY,WADP,CAEP,CAAEE,WAAY,GAAID,WAAY,SAEhClN,WAAY,O,wCAGEf,GAChB9M,KAAK2C,MAAMmY,UAAUiL,OAAOjZ,EAAO,GACnC9M,KAAKkD,SAAS,CAAE4X,UAAW9a,KAAK2C,MAAMmY,UAAWjN,WAAY,O,2CAE1Cf,GACnB9M,KAAK2C,MAAMkL,WAAWkY,OAAOjZ,EAAO,GACpC9M,KAAKkD,SAAS,CAAE2K,WAAY7N,KAAK2C,MAAMkL,e,gDAGfxI,EAAGyH,GAE3B9M,KAAK2C,MAAMmY,UAAUhO,GAAOkO,WAAa3V,EAAE2Q,OAAO1K,MAClDtL,KAAKkD,SAAS,CAAE4X,UAAW9a,KAAK2C,MAAMmY,c,gDAId2B,EAAc3P,GAEtC9M,KAAK2C,MAAMmY,UAAUhO,GAAOiO,WAAa0B,EAAanR,MACtDtL,KAAKkD,SAAS,CAAE4X,UAAW9a,KAAK2C,MAAMmY,c,gCAOtC,IAAI+B,EAAa,GAIjB7c,KAAK2C,MAAMmY,UAAU7I,SAAQ,SAASrD,EAAOrL,GAC3CsZ,EAAWrX,KAAK,CAAE8F,MAAO,GAAIlH,KAAMwK,EAAMmM,gBAG3C/a,KAAKkD,SAAS,CACZ2K,WAAW,GAAD,oBACL7N,KAAK2C,MAAMkL,YADN,CAER,CAAEc,OAAQkO,EAAYhO,gBAAiB,W,6CAKtBxJ,EAAG0X,GAExB/c,KAAK2C,MAAMkL,WAAWkP,GAAQlO,gBAAkBxJ,EAAE2Q,OAAO1K,MACzDtL,KAAKkD,SAAS,CAAE2K,WAAY7N,KAAK2C,MAAMkL,e,4CAEnBxI,EAAG0X,EAAQC,GAE/Bhd,KAAK2C,MAAMkL,WAAWkP,GAAQpO,OAAOqO,GAAQ1R,MAAQjG,EAAE2Q,OAAO1K,MAC9DtL,KAAKkD,SAAS,CAAE2K,WAAY7N,KAAK2C,MAAMkL,e,+BAG/B,IAAD,OACC3N,EAAYF,KAAKC,MAAjBC,QAER,OACE,kBAAC,IAAMmG,SAAP,KACE,yBAAK5F,MAAO,CAAEE,QAAS,OAAQC,eAAgB,WAC7C,0DAGF,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTO,UAAWZ,EAAQ+c,4BACnBhJ,QAAS,GAET,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACzG,EAAA,EAAD,CAAMG,MAAO,CAAE+B,WAAY,YAAad,QAAS,aACdwD,IAAhClF,KAAK2C,MAAM+Y,cAAc,GACxB,kBAACpb,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,iEACA,kBAAC,KAAD,CACEuU,OAAQF,GACR5P,QAASxL,KAAK2C,MAAM+Y,cACpBwB,IAAKld,KAAK8b,YACVxE,KAAK,YAEL1K,SAAU5M,KAAKkc,yBAInB,kBAAC5b,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,qEACA,kBAAC,KAAD,CACEuU,OAAQF,GACR5P,QAASxL,KAAK2C,MAAMgZ,YACpBuB,IAAKld,KAAK+b,UACVzE,KAAK,UAEL1K,SAAU5M,KAAKmc,wBAKrB,GAGF,kBAAC7b,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,wDACA,2BACEuQ,KAAK,OACLxW,UAAU,uBACV8L,SAAU5M,KAAKgc,wBACf1Q,MAAOtL,KAAK2C,MAAM2U,QAGtB,kBAAChX,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,iDACA,2BACEuQ,KAAK,YACLxW,UAAU,uBACV8L,SAAU5M,KAAKgc,wBACf1Q,MAAOtL,KAAK2C,MAAM0P,aAGtB,kBAAC/R,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,uDACA,2BACEuQ,KAAK,aACLxW,UAAU,uBACV8L,SAAU5M,KAAKgc,wBACf1Q,MAAOtL,KAAK2C,MAAMyF,cAGtB,kBAAC9H,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,+DACA,kBAAC,KAAD,CACIuU,OAAQF,GACR5P,QAAS8Z,GACTpI,IAAKld,KAAKwlB,UACVlO,KAAK,QACL1K,SAAU5M,KAAK2lB,wBAIvB,kBAACrlB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAI2D,GAAI,IACpB,IACD,yBAAKtG,MAAO,CAAEuG,aAAc,GAAIzF,UAAW,KAA3C,+BAGA,kBAAC,KAAD,CACET,UAAU,cACVwa,OAAQF,GACR5P,QAASA,GACT0R,IAAKld,KAAK+R,iBACVuF,KAAK,mBAEL1K,SAAU5M,KAAKic,mBAIrB,kBAAC3b,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAAET,WAAS,EAAC6C,GAAI,GAAI2D,GAAI,IAChC,kBAACzG,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAI2D,GAAI,IACvB,yBAAKtG,MAAO,CAAEuG,aAAc,GAAIzF,UAAW,KAA3C,kCAKA,kBAAC,GAAD,CACEqZ,qBAAsB5a,KAAK4a,qBAC3BrS,eAAgBvI,KAAK2C,MAAM4F,qBAQrC,kBAACjI,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,yBAAKjG,UAAU,4BACb,kBAAC,GAAD,CACEiR,iBAAkB/R,KAAK2C,MAAMoP,iBAC7BM,UAAWrS,KAAK2C,MAAM0P,UACtByI,UAAW9a,KAAK2C,MAAMmY,UACtBK,mBAAoBnb,KAAKmb,sBAG7B,kBAAC7a,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEc,UAAW,KAClC,kBAACjB,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAE+B,WAAY,YAAad,QAAS,SAE3C,6BAQG1B,KAAK2C,MAAMmY,UAAUxX,KAAI,SAACsL,EAAO9B,GAChC,OACE,yBAAKvJ,IAAKuJ,GACR,kBAACxM,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAAC6C,GAAI,GAAIC,GAAI,EAAG4Q,QAAS,GAC3C,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IAAvB,wBAGA,kBAAC/C,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACrB,2BACEvC,UAAU,uBACVwK,MAAOsD,EAAMoM,WACbpO,SAAU,SAAAvH,GAAC,OACT,EAAKiY,0BAA0BjY,EAAGyH,QAK1C,kBAACxM,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAAC6C,GAAI,GAAIC,GAAI,EAAG4Q,QAAS,GAC3C,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IAAvB,2BAGA,kBAAC/C,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACrB,kBAAC,KAAD,CACEmI,QAASA,GAEToB,SAAU,SAAA6P,GAAY,OACpB,EAAKc,0BACHd,EACA3P,QAMV,kBAACxM,EAAA,EAAD,CACEU,MAAI,EACJT,WAAS,EACT6C,GAAI,GACJC,GAAI,EACJ5C,MAAO,CAAEI,WAAY,aAErB,kBAACP,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC+T,GAAA,EAAD,CACEjU,UAAWZ,EAAQ8lB,OACnBzb,QAAQ,YACR9J,MAAO,CACLqB,MAAO,QACPU,WAAY,WAEduD,QAAS,WACP,EAAK0f,kBAAkB3Y,KAR3B,aAgBN,kBAAC0Q,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,WAAYV,MAAO,aAG/C,KAEN,yBACER,MAAO,CACLE,QAAS,OACTC,eAAgB,WAChBe,OAAQ,aAGV,kBAACoT,GAAA,EAAD,CACExK,QAAQ,YACR9J,MAAO,CAAE+B,WAAY,UAAWV,MAAO,SACvChB,UAAWZ,EAAQ8lB,OACnBjgB,QAAS,SAAAV,GAAC,OAAI,EAAK+X,SAAS/X,KAJ9B,0BAUJ,kBAACmY,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,YAAaV,MAAO,WAIlD,kBAACX,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAAC6C,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IACvC,kBAACzG,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJC,GAAI,GACJ0D,GAAI,GACJtG,MAAO,CAAEG,eAAgB,SAAUgB,UAAW,WAE7C,IAPH,sBAUA,kBAACtB,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAE+B,WAAY,YAAad,QAAS,SAE3C,6BAQG1B,KAAK2C,MAAMkL,WAAWvK,KAAI,SAACgL,EAAWyO,GACrC,OACE,yBAAKxZ,IAAKwZ,EAAQtc,MAAO,CAAEiB,QAAS,KACjC,IADH,QAEQqb,EAAS,EACf,kBAACzE,GAAA,EAAD,CAAO7X,MAAO,CAAEiB,QAAS,KACvB,kBAACpB,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAA/B,WAGCuH,EAAUK,OAAOrL,KAAI,SAACsL,EAAOoO,GAC5B,OACE,kBAAC1c,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,EAAGxD,IAAKyZ,GACpC,2BACElc,UAAU,uBACVwK,MAAOsD,EAAMtD,MACbsB,SAAU,SAAAvH,GAAC,OACT,EAAKqY,sBACHrY,EACA0X,EACAC,IAGJvE,YAAW,gBAAWuE,EAAS,UAMzC,kBAAC1c,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAA/B,WAGA,kBAACzG,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAC7B,2BACEjG,UAAU,wBACVwK,MAAOgD,EAAUO,gBACjBjC,SAAU,SAAAvH,GAAC,OACT,EAAKsY,uBAAuBtY,EAAG0X,QAKvC,kBAACzc,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEG,eAAgB,WACvC,kBAACN,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC+T,GAAA,EAAD,CACEjU,UAAWZ,EAAQ8lB,OACnBzb,QAAQ,YACR9J,MAAO,CAAEqB,MAAO,QAASU,WAAY,WACrCuD,QAAS,WACP,EAAK2f,qBAAqB3I,KAL9B,kBAiBd,6BACE,yBAAKjc,UAAU,0BACb,kBAAC,GAAD,CACEiR,iBAAkB/R,KAAK2C,MAAMoP,iBAC7BM,UAAWrS,KAAK2C,MAAM0P,UACtBxE,WAAY7N,KAAK2C,MAAMkL,eAI7B,yBACEpN,MAAO,CACLE,QAAS,OACTC,eAAgB,WAChBe,OAAQ,aAGV,kBAACoT,GAAA,EAAD,CACEjU,UAAWZ,EAAQ8lB,OACnBvlB,MAAO,CAAE+B,WAAY,UAAWV,MAAO,SACvCyI,QAAQ,YACRxE,QAAS,SAAAV,GAAC,OAAI,EAAKoY,QAAQpY,KAJ7B,kBAUJ,kBAAC/E,EAAA,EAAD,CACEC,WAAS,EACTS,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAEG,eAAgB,WAAYc,QAAS,SAE9C,kBAACpB,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC+T,GAAA,EAAD,CACExK,QAAQ,YACR9J,MAAO,CAAE+B,WAAY,WAAYV,MAAO,SACxChB,UAAWZ,EAAQ8lB,OACnBjgB,QAAS/F,KAAKoc,cAJhB,0BAYR,kBAAC,KAAD,CACItI,sBAAoB,EACpBlB,YAAa,IACb7J,SAAU4J,KAAMoB,SAASC,iB,GA9nBV3R,aAqoBZC,eAvpBA,CACb2a,4BAA6B,CAC3BrZ,UAAW,QACXlC,QAAS,IAEXskB,OAAQ,CACNnkB,cAAe,SAipBJS,CAAmBijB,I,+NCrqBlC,IAAM/Z,GAAU,CACd,CAAEF,MAAO,MAAO6C,MAAO,YACvB,CAAE7C,MAAO,SAAU6C,MAAO,UAC1B,CAAE7C,MAAO,SAAU6C,MAAO,UAC1B,CAAE7C,MAAO,WAAY6C,MAAO,gBAC5B,CAAE7C,MAAO,WAAY6C,MAAO,gBAC5B,CAAE7C,MAAO,QAAS6C,MAAO,mBAErBmX,GAAc,CAClB,CAAEha,MAAO,OAAQ6C,MAAO,QACxB,CAAE7C,MAAO,SAAU6C,MAAO,UAC1B,CAAE7C,MAAO,OAAQ6C,MAAO,SAapBiN,GAAe,CAAEC,KAAM,SAAAC,GAAM,O,4VAAA,IAAUA,EAAV,CAAkBrU,OAAQ,QACvDsU,G,YACJ,WAAYtb,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,CACX2U,KAAM,GACNjF,UAAW,GACXN,iBAAkB,MAClBlL,aAAc,EACdL,OAAQ,eACRG,OAAO,EACP4B,eAAgB,GAChBJ,MAAO,OACPqT,UAAW,GAWX3N,WAAY,GACZ4N,OAAQ,GAERX,UAAW,GACXY,cAAe,GACf9Y,QAAS,GACT+Y,YAAa,GACbC,UAAW,GACXhX,QAAS,GACTwD,WAAY,GAEd,EAAK2J,iBAAmB9H,IAAM4R,YAC9B,EAAKC,YAAc7R,IAAM4R,YACzB,EAAKE,UAAY9R,IAAM4R,YACvB,EAAK2J,UAAYvb,IAAM4R,YACvB,EAAKG,wBAA0B,EAAKA,wBAAwBvW,KAA7B,gBAE/B,EAAKwW,eAAiB,EAAKA,eAAexW,KAApB,gBACtB,EAAKyW,sBAAwB,EAAKA,sBAAsBzW,KAA3B,gBAC7B,EAAK0W,oBAAsB,EAAKA,oBAAoB1W,KAAzB,gBAC3B,EAAKwW,eAAiB,EAAKA,eAAexW,KAApB,gBACtB,EAAKmV,qBAAuB,EAAKA,qBAAqBnV,KAA1B,gBAC5B,EAAK2W,aAAe,EAAKA,aAAa3W,KAAlB,gBACpB,EAAK0V,mBAAqB,EAAKA,mBAAmB1V,KAAxB,gBAC1B,EAAKggB,kBAAoB,EAAKA,kBAAkBhgB,KAAvB,gBACzB,EAAKigB,qBAAuB,EAAKA,qBAAqBjgB,KAA1B,gBAC5B,EAAKkgB,oBAAsB,EAAKA,oBAAoBlgB,KAAzB,gBAhDV,E,iFAmDE,IAAD,OAClB5C,IAAMC,IAAN,uCAAiDC,MAAK,SAAAC,GACpD,IAAMJ,EAAUI,EAAIC,KACdoZ,EAAgBzZ,EAAQ0Z,QAAO,SAAAnc,GAAM,OAAIA,EAAOsH,MAAM2K,OAAS,KAC/DmK,EAAgBF,EAAc/Y,KAAI,SAAAnD,GACtC,MAAO,CAAEmL,MAAOnL,EAAOqD,GAAI2K,MAAOhO,EAAO8B,gBAE3C,EAAKiB,SAAS,CACZN,QAASyZ,EACTX,cAAea,EACfZ,YAAa/Y,EAAQ,GAAG6E,MAAMnE,KAAI,SAAAwD,GAChC,MAAO,CAAEwE,MAAOxE,EAAKtD,GAAI2K,MAAOrH,EAAKM,gBAGzChH,QAAQC,IAAIuC,GACZ,EAAKM,SAAS,CACZ0Y,UAAWhZ,EAAQ,GAAGY,GACtBoB,QAAoC,GAA3BhC,EAAQ,GAAG6E,MAAM2K,OAAc,GAAKxP,EAAQ,GAAG6E,MAAM,GAAGjE,U,8CAK/CgH,GACtB,IAAMwL,EAASxL,EAAMwL,OACf1K,EAAQ0K,EAAO1K,MACfgM,EAAOtB,EAAOsB,KAKpBtX,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,uBACXqX,EAAOhM,Q,2CAISA,GACnBtL,KAAKkD,SAAS,CACZqF,eAAgB+C,M,0JAMZkF,E,iBAA0BxQ,KAAK2C,MAAMoP,iB,YACzC/R,KAAK2C,MAAM0P,U,YACTrS,KAAK2C,MAAMmY,UACZxX,KAAI,SAAAsL,GACH,MAAM,GAAN,OAAUA,EAAMmM,WAAhB,YAA8BnM,EAAMoM,eAErCC,O,YAICuB,EAAc,CAChBhM,cAAeA,EACf3C,WAAY7N,KAAK2C,MAAMkL,WACvBjJ,QAAS5E,KAAK2C,MAAMiC,QACpB8B,eAAgB1G,KAAK2C,MAAM2U,KAC3BjF,UAAWrS,KAAK2C,MAAM0P,UACtBN,iBAAkB/R,KAAK2C,MAAMoP,iBAC7BlL,aAAc,EACdL,OAAQ,gBACRG,OAAO,EACP4B,eAAgBvI,KAAK2C,MAAM4F,eAC3BJ,MAAOnI,KAAK2C,MAAMwF,MAClBC,WAAY4Y,SAAShhB,KAAK2C,MAAMyF,YAChCyd,WAAY7lB,KAAK2C,MAAMmY,WAEzBjY,IACGgC,KAAK,wCAAyC2X,GAC9CzZ,MAAK,SAASyP,GACbyT,OAAOC,SAASC,SAChBxT,aAAM,6CAA2B,CAC/BC,YAAa,MAEfxS,QAAQC,IAAImS,MAEhBpS,QAAQC,IAAImc,G,2IAICC,GACb,IAAMnF,EAAOtX,KAAK+R,iBAAiB2K,QAAQzc,MAAMqX,KAEjDtX,KAAKkD,SAAL,gBACGoU,EAAOmF,EAAanR,U,uFAIGmR,G,mFAE1Bzc,KAAKkD,UAAS,SAACP,EAAO1C,GAAR,MAAmB,CAC/B0b,YAAa,OAEfvb,QAAQC,IAAIoc,GACNnF,EAAOtX,KAAK8b,YAAYY,QAAQzc,MAAMqX,K,SACzBtX,KAAK2C,MAAMC,QAAQ+Z,MAAK,SAASxc,GAClD,OAAOA,EAAOqD,KAAOiZ,EAAanR,S,OADhCnL,E,OAGJC,QAAQC,IAAIF,GACZH,KAAKkD,UAAL,oBAEGoU,EAAOmF,EAAanR,OAFvB,6BAGenL,EAAOsH,MAAMnE,KAAI,SAAAwD,GAC5B,MAAO,CAAEwE,MAAOxE,EAAKtD,GAAI2K,MAAOrH,EAAKM,eAJzC,yBAMWjH,EAAOsH,MAAM,GAAGjE,IAN3B,I,iJASkBiZ,GAClB,IAAMnF,EAAOtX,KAAK+b,UAAUW,QAAQzc,MAAMqX,KAC1CtX,KAAKkD,SAAL,gBACGoU,EAAOmF,EAAanR,U,0CAGLmR,GAClB,IAAMnF,EAAOtX,KAAKwlB,UAAU9I,QAAQzc,MAAMqX,KAC1CtX,KAAKkD,SAAL,gBACGoU,EAAOmF,EAAanR,QAEvBlL,QAAQC,IAAIiX,EAAKmF,K,yCAGAnR,GACjBtL,KAAKkD,SAAS,CACZsN,cAAelF,M,iCAMjBtL,KAAKkD,SAAS,CACZ4X,UAAU,GAAD,oBACJ9a,KAAK2C,MAAMmY,WADP,CAEP,CAAEE,WAAY,GAAID,WAAY,SAEhClN,WAAY,O,wCAGEf,GAChB9M,KAAK2C,MAAMmY,UAAUiL,OAAOjZ,EAAO,GACnC9M,KAAKkD,SAAS,CAAE4X,UAAW9a,KAAK2C,MAAMmY,UAAWjN,WAAY,O,2CAE1Cf,GACnB9M,KAAK2C,MAAMkL,WAAWkY,OAAOjZ,EAAO,GACpC9M,KAAKkD,SAAS,CAAE2K,WAAY7N,KAAK2C,MAAMkL,e,gDAGfxI,EAAGyH,GAE3B9M,KAAK2C,MAAMmY,UAAUhO,GAAOkO,WAAa3V,EAAE2Q,OAAO1K,MAClDtL,KAAKkD,SAAS,CAAE4X,UAAW9a,KAAK2C,MAAMmY,c,gDAId2B,EAAc3P,GAEtC9M,KAAK2C,MAAMmY,UAAUhO,GAAOiO,WAAa0B,EAAanR,MACtDtL,KAAKkD,SAAS,CAAE4X,UAAW9a,KAAK2C,MAAMmY,c,gCAOtC,IAAI+B,EAAa,GAIjB7c,KAAK2C,MAAMmY,UAAU7I,SAAQ,SAASrD,EAAOrL,GAC3CsZ,EAAWrX,KAAK,CAAE8F,MAAO,GAAIlH,KAAMwK,EAAMmM,gBAG3C/a,KAAKkD,SAAS,CACZ2K,WAAW,GAAD,oBACL7N,KAAK2C,MAAMkL,YADN,CAER,CAAEc,OAAQkO,EAAYhO,gBAAiB,W,6CAKtBxJ,EAAG0X,GAExB/c,KAAK2C,MAAMkL,WAAWkP,GAAQlO,gBAAkBxJ,EAAE2Q,OAAO1K,MACzDtL,KAAKkD,SAAS,CAAE2K,WAAY7N,KAAK2C,MAAMkL,e,4CAEnBxI,EAAG0X,EAAQC,GAE/Bhd,KAAK2C,MAAMkL,WAAWkP,GAAQpO,OAAOqO,GAAQ1R,MAAQjG,EAAE2Q,OAAO1K,MAC9DtL,KAAKkD,SAAS,CAAE2K,WAAY7N,KAAK2C,MAAMkL,e,+BAG/B,IAAD,OACC3N,EAAYF,KAAKC,MAAjBC,QAER,OACE,kBAAC,IAAMmG,SAAP,KACE,yBAAK5F,MAAO,CAAEE,QAAS,OAAQC,eAAgB,WAC7C,0DAGF,kBAACN,EAAA,EAAD,CACEC,WAAS,EACTO,UAAWZ,EAAQ+c,4BACnBhJ,QAAS,GAET,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACzG,EAAA,EAAD,CAAMG,MAAO,CAAE+B,WAAY,YAAad,QAAS,aACdwD,IAAhClF,KAAK2C,MAAM+Y,cAAc,GACxB,kBAACpb,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,iEACA,kBAAC,KAAD,CACEuU,OAAQF,GACR5P,QAASxL,KAAK2C,MAAM+Y,cACpBwB,IAAKld,KAAK8b,YACVxE,KAAK,YACL6F,aAAcnd,KAAK2C,MAAM+Y,cAAc,GACvC9O,SAAU5M,KAAKkc,yBAInB,kBAAC5b,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,qEACA,kBAAC,KAAD,CACEuU,OAAQF,GACR5P,QAASxL,KAAK2C,MAAMgZ,YACpBuB,IAAKld,KAAK+b,UACVzE,KAAK,UACL6F,aAAcnd,KAAK2C,MAAMgZ,YAAY,GACrC/O,SAAU5M,KAAKmc,wBAKrB,GAGF,kBAAC7b,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,wDACA,2BACEuQ,KAAK,OACLxW,UAAU,uBACV8L,SAAU5M,KAAKgc,2BAGnB,kBAAC1b,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,iDACA,2BACEuQ,KAAK,YACLxW,UAAU,uBACV8L,SAAU5M,KAAKgc,2BAGnB,kBAAC1b,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,uDACA,2BACEuQ,KAAK,aACLxW,UAAU,uBACV8L,SAAU5M,KAAKgc,2BAGnB,kBAAC1b,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,+DACA,kBAAC,KAAD,CACIuU,OAAQF,GACR5P,QAAS8Z,GACTpI,IAAKld,KAAKwlB,UACVlO,KAAK,QACL6F,aAAcmI,GAAa,GAC3B1Y,SAAU5M,KAAK2lB,wBAIvB,kBAACrlB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAI2D,GAAI,IACpB,IACD,yBAAKtG,MAAO,CAAEuG,aAAc,GAAIzF,UAAW,KAA3C,+BAGA,kBAAC,KAAD,CACET,UAAU,cACVwa,OAAQF,GACR5P,QAASA,GACT0R,IAAKld,KAAK+R,iBACVuF,KAAK,mBACL6F,aAAc3R,GAAQ,GACtBoB,SAAU5M,KAAKic,mBAIrB,kBAAC3b,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAI2D,GAAI,IACrB,yBAAKtG,MAAO,CAAEuG,aAAc,GAAIzF,UAAW,KAA3C,iCAGA,kBAAC,GAAD,CACEqZ,qBAAsB5a,KAAK4a,qBAC3BrS,eAAgBvI,KAAK2C,MAAM4F,qBAMrC,kBAACjI,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,yBAAKjG,UAAU,4BACb,kBAAC,GAAD,CACEiR,iBAAkB/R,KAAK2C,MAAMoP,iBAC7BM,UAAWrS,KAAK2C,MAAM0P,UACtByI,UAAW9a,KAAK2C,MAAMmY,UACtBK,mBAAoBnb,KAAKmb,sBAG7B,kBAAC7a,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEc,UAAW,KAClC,kBAACjB,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAE+B,WAAY,YAAad,QAAS,SAE3C,6BAQG1B,KAAK2C,MAAMmY,UAAUxX,KAAI,SAACsL,EAAO9B,GAChC,OACE,yBAAKvJ,IAAKuJ,GACR,kBAACxM,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAAC6C,GAAI,GAAIC,GAAI,EAAG4Q,QAAS,GAC3C,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IAAvB,wBAGA,kBAAC/C,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACrB,2BACEvC,UAAU,uBACVwK,MAAOsD,EAAMoM,WACbpO,SAAU,SAAAvH,GAAC,OACT,EAAKiY,0BAA0BjY,EAAGyH,QAK1C,kBAACxM,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAAC6C,GAAI,GAAIC,GAAI,EAAG4Q,QAAS,GAC3C,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IAAvB,4BAGA,kBAAC/C,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACrB,kBAAC,KAAD,CACEmI,QAASA,GACT2R,aAAc3R,GAAQ,GACtBoB,SAAU,SAAA6P,GAAY,OACpB,EAAKc,0BACHd,EACA3P,QAMV,kBAACxM,EAAA,EAAD,CACEU,MAAI,EACJT,WAAS,EACT6C,GAAI,GACJC,GAAI,EACJ5C,MAAO,CAAEI,WAAY,aAErB,kBAACP,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC+T,GAAA,EAAD,CACEjU,UAAWZ,EAAQ8lB,OACnBzb,QAAQ,YACR9J,MAAO,CACLqB,MAAO,QACPU,WAAY,WAEduD,QAAS,WACP,EAAK0f,kBAAkB3Y,KAR3B,aAgBN,kBAAC0Q,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,WAAYV,MAAO,aAG/C,KAEN,yBACER,MAAO,CACLE,QAAS,OACTC,eAAgB,WAChBe,OAAQ,aAGV,kBAACoT,GAAA,EAAD,CACExK,QAAQ,YACR9J,MAAO,CAAE+B,WAAY,UAAWV,MAAO,SACvChB,UAAWZ,EAAQ8lB,OACnBjgB,QAAS,SAAAV,GAAC,OAAI,EAAK+X,SAAS/X,KAJ9B,0BAUJ,kBAACmY,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,YAAaV,MAAO,WAIlD,kBAACX,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAAC6C,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IACvC,kBAACzG,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJC,GAAI,GACJ0D,GAAI,GACJtG,MAAO,CAAEG,eAAgB,SAAUgB,UAAW,WAE7C,IAPH,sBAUA,kBAACtB,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAE+B,WAAY,YAAad,QAAS,SAE3C,6BAQG1B,KAAK2C,MAAMkL,WAAWvK,KAAI,SAACgL,EAAWyO,GACrC,OACE,yBAAKxZ,IAAKwZ,EAAQtc,MAAO,CAAEiB,QAAS,KACjC,IADH,QAEQqb,EAAS,EACf,kBAACzE,GAAA,EAAD,CAAO7X,MAAO,CAAEiB,QAAS,KACvB,kBAACpB,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAA/B,WAGCuH,EAAUK,OAAOrL,KAAI,SAACsL,EAAOoO,GAC5B,OACE,kBAAC1c,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,EAAGxD,IAAKyZ,GACpC,2BACElc,UAAU,uBACVwK,MAAOsD,EAAMtD,MACbsB,SAAU,SAAAvH,GAAC,OACT,EAAKqY,sBACHrY,EACA0X,EACAC,IAGJvE,YAAW,gBAAWuE,EAAS,UAMzC,kBAAC1c,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAA/B,WAGA,kBAACzG,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAC7B,2BAEEjG,UAAU,wBACVwK,MAAOgD,EAAUO,gBACjBjC,SAAU,SAAAvH,GAAC,OACT,EAAKsY,uBAAuBtY,EAAG0X,QAKvC,kBAACzc,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEG,eAAgB,WACvC,kBAACN,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC+T,GAAA,EAAD,CACEjU,UAAWZ,EAAQ8lB,OACnBzb,QAAQ,YACR9J,MAAO,CAAEqB,MAAO,QAASU,WAAY,WACrCuD,QAAS,WACP,EAAK2f,qBAAqB3I,KAL9B,kBAiBd,6BACE,yBAAKjc,UAAU,0BACb,kBAAC,GAAD,CACEiR,iBAAkB/R,KAAK2C,MAAMoP,iBAC7BM,UAAWrS,KAAK2C,MAAM0P,UACtBxE,WAAY7N,KAAK2C,MAAMkL,eAK7B,yBACEpN,MAAO,CACLE,QAAS,OACTC,eAAgB,WAChBe,OAAQ,aAGV,kBAACoT,GAAA,EAAD,CACEjU,UAAWZ,EAAQ8lB,OACnBvlB,MAAO,CAAE+B,WAAY,UAAWV,MAAO,SACvCyI,QAAQ,YACRxE,QAAS,SAAAV,GAAC,OAAI,EAAKoY,QAAQpY,KAJ7B,kBAUJ,kBAAC/E,EAAA,EAAD,CACEC,WAAS,EACTS,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAEG,eAAgB,WAAYc,QAAS,SAE9C,kBAACpB,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC+T,GAAA,EAAD,CACExK,QAAQ,YACR9J,MAAO,CAAE+B,WAAY,WAAYV,MAAO,SACxChB,UAAWZ,EAAQ8lB,OACnBjgB,QAAS/F,KAAKoc,cAJhB,cAYR,kBAAC,KAAD,CACItI,sBAAoB,EACpBlB,YAAa,IACb7J,SAAU4J,KAAMoB,SAASC,iB,GA/lBJ3R,aAsmBlBC,eAlnBA,CACb2a,4BAA6B,CAC3BrZ,UAAW,QACXlC,QAAS,IAEXskB,OAAQ,CACNnkB,cAAe,SA4mBJS,CAAmBiZ,I,WC5nBnB6K,GALa,SAAAnmB,GAAK,OAC7B,kBAAC8jB,GAAA,EAAW9jB,ICkBHomB,GAAoB,SAAApmB,GAAK,OACpC,kBAACgkB,GAAA,EAAD,iBACMhkB,EADN,CAEEoR,MAAM,+BACN6S,QAAS,kBAAC,GAAD,MACTC,mBAAmB,IAEnB,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAW9b,OAAO,iBAAiB+b,UAAU,IAC7C,kBAACiC,GAAA,EAAD,CAAahe,OAAO,aAAa+b,UAAU,IAC3C,kBAAC,KAAD,CAAW/b,OAAO,mBAAmB+b,UAAU,IAC/C,kBAAC,KAAD,CAAW/b,OAAO,gBAAgB+b,UAAU,IAC5C,kBAACE,GAAA,EAAD,MACA,kBAACV,GAAA,EAAD,SAKO0C,GAAsB,SAAAtmB,GAAK,OACtC,kBAAC,GAAD,OAqBWumB,GAAoB,SAAAvmB,GAG/B,OAAO,kBAAC,GAAD,CAAc2lB,YAAa3lB,EAAMuD,M,sBCjD3BijB,GAhBc,SAAAxmB,GAAK,OAC9B,kBAACwjB,GAAA,EAAYxjB,EACT,kBAACyjB,GAAA,EAAD,CACIvV,MAAM,OACNwV,eAAe,IAEnB,kBAACD,GAAA,EAAD,CACIvV,MAAM,4BACNyV,UAAU,EACVD,eAAe,EACfpZ,QAAQ,SAEZ,kBAACsZ,GAAA,EAAD,QCJO6C,GALS,SAAAzmB,GAAK,OACzB,kBAAC8jB,GAAA,EAAW9jB,ICiBH0mB,GAAgB,SAAA1mB,GAAK,OAChC,kBAACgkB,GAAA,EAAD,iBACMhkB,EADN,CAEEoR,MAAM,yCACN6S,QAAS,kBAAC,GAAD,MACTC,mBAAmB,IAEnB,kBAACC,GAAA,EAAD,KAEE,kBAAC,KAAD,CAAW9b,OAAO,YAAY+b,UAAU,IACxC,kBAACC,GAAA,EAAD,CACExjB,UAAU,gBACVwH,OAAO,mBACP+b,UAAU,IAMZ,kBAACE,GAAA,EAAD,MACA,kBAACV,GAAA,EAAD,SAKA+C,G,YACJ,WAAY3mB,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,CACXxC,OAAQ,GACRuP,WAAW,GAJI,E,iFAQE,IAAD,OAClB7M,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GACpD,EAAKE,SAAS,CAAE/C,OAAQ6C,EAAIC,KAAMyM,WAAW,S,+BAK/C,IAAImX,EAAgB7mB,KAAK2C,MAAMxC,OAAOmD,KAAI,SAAAuT,GACxC,IAAIiQ,EAAO,GAGX,OAFAA,EAAI,GAASjQ,EAAIrT,GACjBsjB,EAAI,KAAWjQ,EAAI5U,YACZ6kB,KAGT,OACE,kBAACrC,GAAA,EAAD,iBAAYzkB,KAAKC,MAAjB,CAAwBoR,MAAM,uCAC5B,kBAACqT,GAAA,EAAD,CAAYd,SAAS,QACnB,kBAACe,GAAA,EAAD,CAAWrc,OAAO,cAClB,kBAACqc,GAAA,EAAD,CAAWrc,OAAO,qBACjBtI,KAAK2C,MAAM+M,UACV,kBAACqX,GAAA,EAAD,MAEA,kBAACC,GAAA,EAAD,CAAa1e,OAAO,YAAY2e,QAASJ,U,GA/BvBxkB,aA2CxB6kB,G,YACJ,WAAYjnB,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,CACXxC,OAAQ,GACRuP,WAAW,GAJI,E,iFAQE,IAAD,OAClB7M,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GACpD,EAAKE,SAAS,CAAE/C,OAAQ6C,EAAIC,KAAMyM,WAAW,S,+BAK/C,IAAImX,EAAgB7mB,KAAK2C,MAAMxC,OAAOmD,KAAI,SAAAuT,GACxC,IAAIiQ,EAAO,GAGX,OAFAA,EAAI,GAASjQ,EAAIrT,GACjBsjB,EAAI,KAAWjQ,EAAI5U,YACZ6kB,KAGT,OACE,kBAAC/B,GAAA,EAAD,iBAAU/kB,KAAKC,MAAf,CAAsBoR,MAAM,uCAC1B,kBAACqT,GAAA,EAAD,CAAYM,QAAS,kBAAC,GAAD,OACnB,kBAACL,GAAA,EAAD,CAAWC,YAAU,EAACtc,OAAO,KAAKsL,UAAQ,IAC1C,kBAAC+Q,GAAA,EAAD,CAAWrc,OAAO,cAClB,kBAACqc,GAAA,EAAD,CAAWrc,OAAO,qBACjBtI,KAAK2C,MAAM+M,UACV,kBAACqX,GAAA,EAAD,MAEA,kBAACC,GAAA,EAAD,CAAa1e,OAAO,YAAY2e,QAASJ,U,GAhCzBxkB,a,sBCzEb8kB,GAhBc,SAAAlnB,GAAK,OAC9B,kBAACwjB,GAAA,EAAYxjB,EACT,kBAACyjB,GAAA,EAAD,CACIvV,MAAM,OACNwV,eAAe,IAEnB,kBAACD,GAAA,EAAD,CACIvV,MAAM,4BACNyV,UAAU,EACVD,eAAe,EACfpZ,QAAQ,SAEZ,kBAACsZ,GAAA,EAAD,QCJOuD,GALS,SAAAnnB,GAAK,OACzB,kBAAC8jB,GAAA,EAAW9jB,I,ICuBYoC,YAqNEA,YA4CFA,Y,itBClS5B,IAAMglB,GAAUzhB,EAAQ,MAElB0hB,GAAe,CACnB5S,iBAAiB,EACjBvQ,KAAM,GACN0L,SAAS,GCLLyX,GAAe,G,8jBCArB,IAAMA,GAAe,CACnBxP,OAAQ,GACRjS,UAAW,EACXoQ,MAAO,GACPnQ,UAAW,GACXtC,GAAI,GACJ+jB,SAAU,GACVC,eAAc,GCJDC,gBAAgB,CAC7BxhB,KHIa,WAAwC,IAA/BtD,EAA8B,uDAAtB2kB,GAAcI,EAAQ,uCACpD,OAAQA,EAAOtjB,MACb,IjDV4B,mBiDW1B,OAAO,MACFzB,EADL,CAEE+R,iBAAkB2S,GAAQK,EAAOrjB,SACjCF,KAAMujB,EAAOrjB,UAEjB,QACE,OAAO1B,IGZXwD,OFHa,WAAwC,IAA/BxD,EAA8B,uDAAtB2kB,GAAcI,EAAQ,uCACpD,OAAQA,EAAOtjB,MACb,IlDNsB,akDOpB,OAAOsjB,EAAOrjB,QAChB,QACE,OAAO1B,IEDXwB,KDIa,WAAwC,IAA/BxB,EAA8B,uDAAtB2kB,GAAcI,EAAQ,uCACpD,OAAQA,EAAOtjB,MACb,InDXyB,gBmDYvB,OAAO,MACFzB,EADL,GAEK+kB,EAAOrjB,QAFZ,CAGEmjB,eAAc,IAElB,InDhBoB,WmDiBlB,OAAO,MACF7kB,EADL,GAEK+kB,EAAOrjB,SAEd,InDpB4B,mBmDqB1B,OAAO,MACF1B,EADL,CAEEmV,OAAO4P,EAAOrjB,QAAQyT,OACtBjS,UAAU6hB,EAAOrjB,QAAQwB,UACzBoQ,MAAMyR,EAAOrjB,QAAQ4R,MACrBnQ,UAAU4hB,EAAOrjB,QAAQyB,UACzByhB,SAASG,EAAOrjB,QAAQkjB,SACxBC,eAAe,IAEjB,InD7BqC,8BmD8BjC,OAAO,MACF7kB,EADL,CAEEkR,cAAe6T,EAAOrjB,UAE5B,InDhCwB,iBmDiCtB,OAAO,MACF1B,EADL,CAEE6kB,cAAeE,EAAOrjB,UAE5B,QACE,OAAO1B,MErBP2kB,GAAe,GAEf/hB,GAAUoiB,aAAqB,CAAEC,SAAU,WAkElCC,GAhEU,SAAC,GAMnB,IALLC,EAKI,EALJA,aACA7G,EAII,EAJJA,aAII,IAHJ8G,oBAGI,MAHWC,KAGX,EAFJziB,EAEI,EAFJA,QAEI,IADJ0iB,cACI,MADK,KACL,EACEC,EAAUT,aAAgB,CAC9BU,MAAOC,KACPjR,KAAMkR,KACNC,OAAQC,KACRC,KAAMC,aAAYR,EAAQF,EAAaE,IACvC/hB,YAAaA,KAMTwiB,EAAI,WAAG,SAAUC,IAAV,kEACX,OADW,SACLC,aACJ,CACEC,aAAU5H,EAAc6G,EAAcC,IAEtCzkB,IAAIwlB,OALG,oCAAUH,MAQjBI,EAAiBC,eAEjBnB,EAAQoB,cAbe,SAACtmB,EAAO+kB,GAAR,OAC3BQ,EAAQR,EAAOtjB,OAAS8kB,KAAcvmB,OAAQuC,EAAWwiB,KAezDJ,GACA6B,aACEC,aACEL,EACAM,KACAC,aAAiB/jB,GACjBgkB,QAUN,OADAR,EAAeS,IAAId,GACZb,EAWK4B,CAAiB,CAC7B3B,gBACA7G,gBACA8G,aAVmB,SAAAE,GAInB,OAAOyB,MAOPnkB,aCeaokB,GAtDI,kBACjB,kBAACC,GAAA,EAAD,CACEC,UAAW9G,GACX+E,aAAcA,GACd9I,SAAUA,GACV8K,aAAcA,GACd7I,aAAcA,GACd5P,MAAM,eACNzH,MAAOA,GACPrE,QAASA,GACT0iB,OAAO,MAeP,kBAAC8B,GAAA,EAAD,CACEzS,KAAK,UACL0S,KAAMhG,GACNiG,OAAQzF,GACR0F,KAAMpF,KAER,kBAACiF,GAAA,EAAD,CACEzS,KAAK,QACL0S,KAAMrD,GACNsD,OAAQrD,GACRsD,KAAMhD,KAGR,kBAAC6C,GAAA,EAAD,CACEzS,KAAK,YACL0S,KAAM3D,GACN4D,OAAQ1D,GACR2D,KAAM1D,O,oLC/ENhR,GAAelT,YAAW,CAC9BuH,KAAM,CACJ,sBAAuB,CACrB/H,MAAO,WAET,8BAA+B,CAC7B2T,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAhBApT,CAoBlBqT,MA0BGwU,G,YACJ,WAAYlqB,GAAQ,IAAD,8BACjB,4CAAMA,KAuBRmqB,OAxBmB,wBAwBV,uBAAA/I,EAAA,sEACD3C,QAAQkK,IAAI,CAChB/lB,IACGC,IAAI,sCACJC,MAAK,SAAAC,GACJ,EAAKE,SAAS,CACZuT,UAAWzT,EAAIC,KAAK6C,UACpB4Q,SAAU1T,EAAIC,KAAKskB,SACnBzP,OAAQ9U,EAAIC,KAAK6U,YAGpBhT,OAAM,SAAAC,GAAG,OAAI3E,QAAQC,IAAI0E,QAXvB,OAaP,EAAK7B,SAAS,CAAEwM,WAAW,IAbpB,2CAxBU,EAkDnB9C,SAAW,SAAAvH,GACT,IAAIwQ,GAAU,EAId,GAHA,EAAK3S,SAAS,CACZiD,OAAQ,CAAE6M,QAAS,MAED,aAAhB3N,EAAE2Q,OAAOxS,GACX,IAA2C,IAAvC+R,GAAchD,KAAKlN,EAAE2Q,OAAO1K,OAAkB,CAChDuK,GAAU,EACV,IAAIC,EAAe,EAAKnT,MAAMoT,UAC9BD,EAAaI,SACX,qMAEFJ,EAAaI,SAAW,GAER,cAAhB7Q,EAAE2Q,OAAOxS,KACP6B,EAAE2Q,OAAO1K,QAAU,EAAK3I,MAAMuT,UAChCL,GAAU,EACVC,EAAaK,UAAY,sEAEzBL,EAAaK,UAAY,IAGzBN,GACF,EAAK3S,SAAS,CACZ6S,UAAWD,IAIf,EAAK5S,SAAL,gBAAiBmC,EAAE2Q,OAAOxS,GAAK6B,EAAE2Q,OAAO1K,SA9EvB,EAiGnB8K,SAjGmB,yCAiGR,WAAM/Q,GAAN,kBAAAgc,EAAA,yDACThc,EAAEC,iBAEE+Q,EAAe,GAEf,EAAK1T,MAAMuT,WAAa,EAAKvT,MAAMwT,YACrCE,EAAe,4DAEmB,KAAhC,EAAK1T,MAAM8T,UAAUH,SACvBD,EAAe,qDACkB,KAA/B,EAAK1T,MAAM+T,SAASJ,SACtBD,EAAe,sDAEW,KAAxBA,EAAaC,OAbR,uBAcP,EAAKrW,MAAMkG,OAAO6M,QAAUqD,EAE5B,EAAKnT,SAAS,CACZiD,OAAQ,EAAKlG,MAAMkG,SAjBd,iCAsBHwQ,EAAU,CACdD,SAAU,EAAK/T,MAAM+T,SACrBD,UAAW,EAAK9T,MAAM8T,UACtBP,SAAU,EAAKvT,MAAMuT,SACrB4B,OAAQ,EAAKnV,MAAM0nB,OAErBjqB,QAAQC,IAAI,EAAKJ,MAAMgG,KAAK9B,KAAKlB,KAAKO,IACtC,EAAKN,UAAS,SAASP,EAAO1C,GAC5B,MAAO,CACLyP,WAAW,MA/BN,UAkCH,EAAKzP,MAAMqqB,eAAe3T,EAAS,EAAK1W,MAAMgG,KAAK9B,KAAKlB,KAAKO,IAlC1D,QAmCT+mB,YAAW,WACT,EAAKrnB,UAAS,SAASP,EAAO1C,GAC5B,MAAO,CACLyP,WAAW,QAGd,GAzCM,4CAjGQ,sDAEjB,EAAK/M,MAAQ,CACX+M,WAAW,EACXgH,SAAU,GACVD,UAAW,GACXP,SAAU,GACVC,UAAW,GACX2B,OAAQ,GACR3R,OAAQ,GACR4P,UAAW,CACTW,SAAU,GACVD,UAAW,GACXP,SAAU,GACVC,UAAW,IAEbkU,MAAO,KACP5K,IAAK,GACL+K,WAAY,IAEd,EAAKC,kBAAoB,EAAKA,kBAAkBhlB,KAAvB,gBACzB,EAAKilB,SAAW,EAAKA,SAASjlB,KAAd,gBAChB,EAAKklB,YAAc,EAAKA,YAAYllB,KAAjB,gBAtBF,E,iFAwCjBzF,KAAKoqB,W,mFAEiB/kB,G,gFAClBA,EAAE2Q,OAAO4U,MAAM,G,uBACXP,EAAQhlB,EAAE2Q,OAAO4U,MAAM,GACvBC,EAAWC,IAAIC,gBAAgBV,G,SAClBrqB,KAAK2qB,YAAYN,G,cAAhCW,E,gBACEhrB,KAAKkD,SAAS,CAAEmnB,MAAOW,EAAQR,WAAYK,I,sIAiC5CI,GACP,OAAO,IAAIvM,SAAQ,SAACC,EAASE,GAC3B,IAAMqM,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,kBAAM1M,EAAQuM,EAAOpd,SACrCod,EAAOI,QAAU,SAAAtc,GAAK,OAAI6P,EAAO7P,S,6EAGnBic,G,wFACKjrB,KAAK0qB,SAASO,GAAMnmB,OAAM,SAAAO,GAAC,OAAIA,K,aAA9CyI,E,kBACgBuQ,O,uBACpBje,QAAQC,IAAI,UAAWyN,EAAOkF,S,mDAGzBlF,G,yIA+CG+I,GACV,OAAY,OAARA,GAAwB,KAARA,I,+BAOZ,IAAD,EACuB7W,KAAK2C,MAA3BwD,EADD,EACCA,OAAQuJ,EADT,EACSA,UACRxP,EAAYF,KAAKC,MAAjBC,QAER,OACE,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,EAAGxT,MAAO,CAAEC,OAAQ,UAC5B,IAAdgP,IAAwD,IAAlC1P,KAAKC,MAAMkE,KAAKqjB,cACrC,yBACE1mB,UAAU,gBACVL,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBK,MAAO,OAAOP,OAAO,UAGvB,kBAAC,KAAD,CACEiP,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,SAAS,KAIb,kBAAC,IAAMxJ,SAAP,KACE,kBAAC/F,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACuR,GAAA,EAAD,CAAO7X,MAAO,CAAEiB,QAAS,GAAIkC,UAAU,IAAIjD,QAAQ,OAAOoN,cAAc,SAASlN,WAAW,SAASD,eAAe,WAClH,yBAAKH,MAAO,CAAEsB,WAAY,SAA1B,8BAA4D,IAC5D,sDACc/B,KAAKC,MAAMkE,KAAKojB,SAAU,IACrCvnB,KAAKC,MAAMkE,KAAK2B,WAEnB,uCAAa9F,KAAKC,MAAMkE,KAAK8R,SAGjC,kBAAC3V,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACuR,GAAA,EAAD,CAAO7X,MAAO,CAAEiB,QAAS,KACvB,kBAACoV,GAAA,EAAD,CAAW7J,UAAU,OAAO8J,SAAS,MACnC,kBAACC,GAAA,EAAD,MACA,yBAAKlW,UAAWZ,EAAQ+I,OACtB,kBAAC+D,GAAA,EAAD,CAAYC,UAAU,KAAK1C,QAAQ,OACnC,0BACEzJ,UAAWZ,EAAQiX,KACnBC,YAAU,EACVhB,SAAUpW,KAAKoW,UAEf,kBAAC9V,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GACrB,kBAAC,GAAD,CACEgU,aAAa,QACbC,KAAK,WACL/M,QAAQ,WACRiN,WAAS,EACThU,GAAG,WACH2K,MAAM,UACN7C,MAAOtL,KAAK2C,MAAM+T,SAClB9J,SAAU5M,KAAK4M,SACf8L,WAAY,CAAEjY,MAAO,CAAEqK,SAAU,KACjCygB,gBAAiB,CAAE9qB,MAAO,CAAEqK,SAAU,QAG1C,kBAACxK,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GACrB,kBAAC,GAAD,CACEkH,QAAQ,WACRiN,WAAS,EACThU,GAAG,YACH2K,MAAM,SACNmJ,KAAK,YACLD,aAAa,QACb/L,MAAOtL,KAAK2C,MAAM8T,UAClB7J,SAAU5M,KAAK4M,SACf8L,WAAY,CAAEjY,MAAO,CAAEqK,SAAU,KACjCygB,gBAAiB,CAAE9qB,MAAO,CAAEqK,SAAU,QAG1C,kBAACxK,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,IACb,kBAAC,GAAD,CACEmH,QAAQ,WACRiN,WAAS,EACTF,KAAK,WACLnJ,MAAM,8BACN/J,KAAK,WACLZ,GAAG,WACH6T,aAAa,mBACb/L,MAAOtL,KAAK2C,MAAMuT,SAClBtJ,SAAU5M,KAAK4M,SACfoC,MAAgD,KAAzChP,KAAK2C,MAAMoT,UAAUG,SAASI,OACrCoB,WAAY1X,KAAK2C,MAAMoT,UAAUG,SACjCwC,WAAY,CAAEjY,MAAO,CAAEqK,SAAU,KACjCygB,gBAAiB,CAAE9qB,MAAO,CAAEqK,SAAU,QAG1C,kBAACxK,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,IACb,kBAAC,GAAD,CACEmH,QAAQ,WACRiN,WAAS,EACTF,KAAK,YACLnJ,MAAM,iDACN/J,KAAK,WACLZ,GAAG,YACH6T,aAAa,oBACb/L,MAAOtL,KAAK2C,MAAMwT,UAClBvJ,SAAU5M,KAAK4M,SACfoC,MAAiD,KAA1ChP,KAAK2C,MAAMoT,UAAUI,UAAUG,OACtCoB,WAAY1X,KAAK2C,MAAMoT,UAAUI,UACjCuC,WAAY,CAAEjY,MAAO,CAAEqK,SAAU,KACjCygB,gBAAiB,CAAE9qB,MAAO,CAAEqK,SAAU,QAG1C,kBAACxK,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,IACb,0DACA,6BACG,IAC0B,KAA1BpD,KAAK2C,MAAM6nB,WACV,yBACE/pB,MAAO,CAAEQ,MAAO,GAAIP,OAAQ,IAC5BS,IAAKnB,KAAK2C,MAAM6nB,WAChBhpB,IAAI,KAGN,yBACEf,MAAO,CAAEQ,MAAO,GAAIP,OAAQ,IAC5BS,IAAKnB,KAAK2C,MAAMmV,OAChBtW,IAAI,MAIV,6BACE,2BACEkE,QAAQ,QACRjF,MAAO,CACLiB,QAAS,UACTJ,aAAc,MACdmB,OAAQ,UACRD,WAAY,UACZV,MAAO,QACPS,UACE,yGATN,sBAcA,2BACEiB,GAAG,QACHY,KAAK,OACLwI,SAAU5M,KAAKyqB,kBACfhqB,MAAO,CAAE+qB,WAAY,eAK7B,6BACE,yBAAK1qB,UAAU,cAAcqF,EAAO6M,UAGtC,kBAAC+B,GAAA,EAAD,CACE3Q,KAAK,SACLoT,WAAS,EACTjN,QAAQ,YACRzI,MAAM,UACNhB,UAAWZ,EAAQyX,QALrB,oC,GAjTA1N,IAAM5H,WA8UbC,eAtWA,CACb,UAAW,CACTuV,KAAM,CACJjR,gBAAiB,UAGrBqC,MAAO,CACLtI,QAAS,OACToN,cAAe,SACflN,WAAY,UAEdiX,OAAQ,CACNnW,OAAQ,EACRiF,gBAAiB,WAEnBuQ,KAAM,CACJlW,MAAO,OACPM,UAAW,GAEboW,OAAQ,CACNhW,OAAQ,aAkVGW,CACb0D,aANsB,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAKtB,CAAEmmB,etDzXwB,SAAC3T,EAAS8U,GAAV,OAAqB,SAAAlnB,GACjDnE,QAAQC,IAAIsW,GACZpS,EAAS,CACPH,KDhB0B,iBCiB1BC,SAAS,IAEXxB,IACGgC,KAAK,2CAA4C,CAChDrB,GAAIioB,EACJ3T,OAAQnB,EAAQmB,OAChB5B,SAAUS,EAAQT,SAClBpQ,UAAW6Q,EAAQF,UACnB8Q,SAAU5Q,EAAQD,WAGnB3T,MAAK,SAAAC,GACJ5C,QAAQC,IAAI2C,EAAIC,MAChBsB,EAAS,CACPH,KDlCwB,mBCmCxBC,QAASrB,EAAIC,UAGhB6B,OAAM,SAAAC,GAAG,OAAI3E,QAAQC,IAAI0E,SsDiW5BiB,CAGEmkB,K,wECpYEuB,I,QAAc,WAClB,IAAIC,EAAY,CAACC,KAAW,KAAMC,KAAW,KAAMC,KAAM,KAAMC,KAAK,MAGpE,OAFYJ,EAAUK,KAAKC,MAAMD,KAAKE,SAAWP,EAAUvZ,WA0BvDrS,G,iLACM,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,QAASC,EADV,EACUA,OACjB,OACE,kBAACG,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,MAAO,CACLC,OAAQ,OACRC,QAAS,OAETE,WAAY,UAEdC,UAAS,UAAKZ,EAAQa,WAAb,mBAET,kBAACT,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CACLQ,MAAO,OACPC,SAAU,SACVR,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ2B,WAAW,OAAD,OAASrC,EAAOiB,iBAAhB,sBACV0T,eAAgB,WAepB,kBAACxU,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAACkB,QAAQ,SAAShB,MAAO,CAAEiB,QAAS,eACtD,kBAACpB,EAAA,EAAD,CAAMU,MAAI,EAACoC,IAAE,GACX,yBACE3C,MAAO,CACLkB,OAAQ,WAERE,cAAe,YACfC,MAAO,UACPC,WAAY,SAId,kBAACiL,GAAA,EAAD,CAAYiI,cAAY,EAAC1K,QAAQ,KAAK0C,UAAU,MAC7C9M,EAAO8B,cAIZ,yBACExB,MAAO,CACLkB,OAAQ,gBAERG,MAAO,YAIT,kBAACqqB,GAAA,EAAD,CACE7U,KAAK,YACLhM,MAAOnL,EAAOisB,aACdC,aAAA,EACAC,UAAW,GACX1c,KAAK,UACJ,IACH,kBAAC5C,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CACLC,OAAQ,GACRQ,SAAU,SAEVqrB,UAAW,eAGZpsB,EAAOqsB,cAGZ,kBAAChP,GAAA,EAAD,CAASiP,OAAK,IAEd,yBACEhsB,MAAO,CACLkB,OAAQ,WACRC,UAAW,SACXE,MAAO,YAKT,kBAACxB,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACViB,QAAQ,SACRZ,WAAW,UAEX,kBAACP,EAAA,EAAD,CACEU,MAAI,EACJoC,IAAE,EACF3C,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,eAGlB,kBAAC8rB,GAAA,EAAD,CACE5rB,UAAWZ,EAAQysB,YACnBlsB,MAAO,CAAEmG,gBAAiB8kB,OAEzBvrB,EAAOysB,YACJzsB,EAAOysB,YAAYnK,OAAO,GAAGC,cAC7B,KAEN,kBAAC1V,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,KAGT9M,EAAOysB,YAAczsB,EAAOysB,YAAc,WAI/C,kBAACtsB,EAAA,EAAD,CACEU,MAAI,EACJoC,IAAE,EACF3C,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,aAGlB,kBAAC,KAAD,CACEH,MAAO,CAGLiB,QAAS,UACTmrB,UAAW,cACXvrB,aAAc,OAEhBwJ,SAAS,UAEX,kBAACkC,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,KAET9M,EAAO2sB,0B,GA1JHzqB,aAsKVC,eAzLA,CACbvB,WAAY,CACVO,aAAc,MACdiB,UACE,uGACFrB,SAAU,SACVsB,WAAY,QACZC,OAAQ,WAEVkqB,YAAa,CACXjsB,OAAQ,OACRO,MAAO,OACPiH,YAAa,MAGb4C,SAAU,OACV/I,WAAY,QAyKDO,CAAmBvC,ICvL5B2C,I,oBACJ,WAAYzC,GAAQ,IAAD,8BACjB,4CAAMA,KAMRmqB,OAPmB,wBAOZ,uBAAA/I,EAAA,sEACC3C,QAAQkK,IAAI,CAChB/lB,IAAMC,IAAN,uCAAiDC,MAAK,SAAAC,GACpD,IAAMJ,EAAUI,EAAIC,KACpB7C,QAAQC,IAAIuC,GACZ,EAAKM,SAAS,CAAEN,iBALf,OAQL,EAAKM,SAAS,CAACwM,WAAU,IARpB,2CALL,EAAK/M,MAAQ,CACX+M,WAAU,EACV9M,QAAS,IAJM,E,iFAkBjB5C,KAAKoqB,W,+BAEG,IACAlqB,EAAYF,KAAKC,MAAjBC,QADD,EAEqBF,KAAK2C,MAA1BC,EAFA,EAEAA,QAAQ8M,EAFR,EAEQA,UACX+P,EAAMzf,KAAKC,MAAMwf,IAErB,OACE,kBAACnf,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAWZ,EAAQiD,gBAAiB1B,QAAQ,UACvDiO,EAAU,yBAAK5O,UAAU,gBAAgBL,MAAO,CAACE,QAAQ,OAAOE,WAAW,SAASD,eAAe,SAASK,MAAM,SAC/G,kBAAC,KAAD,CAEE0O,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,QAASH,KAEH,kBAAC,IAAMrJ,SAAP,KAAgB,kBAAC/F,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI5C,MAAO,CAAEiB,QAAS,aAC1E,kBAACpB,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GAGvBrR,EAAQU,KAAI,SAACnD,GAAD,OAAU,kBAACG,EAAA,EAAD,CAAMiD,IAAKpD,EAAOqD,GAAIxC,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAAG,kBAAC,IAAD,CAAOtG,MAAO,CAACgD,eAAe,QAAQC,GAAE,UAAK+b,EAAL,oBAAoBtf,EAAOqD,GAA3B,WAAuC,kBAAC,GAAD,CAAYrD,OAAQA,iB,GAxC5JkC,cAgDVC,eA9DA,CACba,gBAAiB,CACfQ,WAAY,OACZC,UAAW,SAEb7C,WAAW,CACTO,aAAa,MACbiB,UAAW,uGACXrB,SAAS,SACTsB,WAAY,UACZC,OAAO,YAoDIH,CAAmBI,I,iCC9B5BqqB,G,YACJ,WAAY9sB,GAAQ,IAAD,8BACjB,4CAAMA,KAURmqB,OAXmB,wBAWV,uBAAA/I,EAAA,sEACD3C,QAAQkK,IAAI,CAChB/lB,IAAMC,IAAN,wCAAkDC,MAAK,SAAAC,GACrD,IAAMJ,EAAUI,EAAIC,KACpB7C,QAAQC,IAAIuC,GACZ,EAAKM,SAAS,CAAEN,QAASA,EAAQoqB,iBAGnCnqB,IAAMC,IAAN,sCAAgDC,MAAK,SAAAC,GACnD,IAAM2e,EAAS3e,EAAIC,KACnB7C,QAAQC,IAAIshB,GACZ,EAAKze,SAAS,CAAEye,cAElB9e,IAAMC,IAAN,qCAA+CC,MAAK,SAAAC,GAClD,IAAM0e,EAAQ1e,EAAIC,KAClB7C,QAAQC,IAAIqhB,GACZ,EAAKxe,SAAS,CAAEwe,aAElB7e,IAAMC,IAAN,6CAAuDC,MAAK,SAAAC,GAC1D,IAAMiqB,EAAkBjqB,EAAIC,KAC5B7C,QAAQC,IAAI4sB,GACZ,EAAK/pB,SAAS,CAAE+pB,gBAAiBA,SArB9B,OAwBP,EAAK/pB,SAAS,CAAEwM,WAAW,IAxBpB,2CATP,EAAK/M,MAAQ,CACX+M,WAAW,EACX9M,QAAS,GACT+e,OAAQ,GACRD,MAAO,GACPwL,eAAgB,IAElB,EAAK9C,OAAS,EAAKA,OAAO3kB,KAAZ,gBATG,E,iFAsCjBzF,KAAKoqB,W,8CAGiB7jB,GAGtB,OAFAA,EAAS4B,MAAkB5B,EAAS4B,MAnDnCqO,cACA+L,MAAM,KACNjf,KAAI,SAAAkf,GACH,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKhC,MAAM,MAElDvF,KAAK,KA+CN7a,QAAQC,IAAIkG,EAAS4B,OACE,SAAnB5B,EAAS4B,MAET,kBAACglB,GAAA,EAAD,CACE1sB,MAAO,CAAE+B,WAAY,UAAWV,MAAO,SACvC8N,KAAK,QACLzB,MAAK,UAAK5H,EAAS4B,SAGK,WAAnB5B,EAAS4B,MAEhB,kBAACglB,GAAA,EAAD,CACE1sB,MAAO,CAAE+B,WAAY,UAAWV,MAAO,SACvC8N,KAAK,QACLzB,MAAK,UAAK5H,EAAS4B,SAKrB,kBAACglB,GAAA,EAAD,CACE1sB,MAAO,CAAE+B,WAAY,MAAOV,MAAO,SACnC8N,KAAK,QACLzB,MAAK,UAAK5H,EAAS4B,W,+BAMjB,IAAD,OACCuH,EAAc1P,KAAK2C,MAAnB+M,UACAxP,EAAYF,KAAKC,MAAjBC,QACJuf,EAAMzf,KAAKC,MAAMwf,IAErB,OACE,kBAACnf,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,EAAGxT,MAAO,CAAEC,OAAQ,UAC1CgP,EACC,yBACE5O,UAAU,gBACVL,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBK,MAAO,OACPP,OAAQ,UAGV,kBAAC,KAAD,CACEiP,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,QAASH,KAIb,kBAAC,IAAMrJ,SAAP,KACE,kBAAC/F,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACuR,GAAA,EAAD,CAAOxX,UAAWZ,EAAQ+I,OACxB,kBAAC3I,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEuG,aAAc,KACrC,kBAAC1G,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEgG,SAAU,IAC5B,yBAAKhG,MAAO,CAAEsB,WAAY,SAA1B,8CAAyD,MAG9B,IAA9B/B,KAAK2C,MAAMC,QAAQwP,OAClB,yBAAK3R,MAAO,IAAZ,kEAEAT,KAAK2C,MAAMC,QAAQU,KAAI,SAAAnD,GACrB,OACE,kBAAC,IAAMkG,SAAP,CAAgB9C,IAAKpD,EAAOyb,WAC1B,kBAACtb,EAAA,EAAD,CACEC,WAAS,EACTE,MAAO,CAAEI,WAAY,SAAUusB,SAAU,UAEzC,kBAAC9sB,EAAA,EAAD,CAAMU,MAAI,GACR,yBACEF,UAAWZ,EAAQmtB,IACnB5sB,MAAO,CACLQ,MAAO,OACPP,OAAQ,OACRW,UAAW,QACXC,aAAc,OAEhBE,IAAI,UACJL,IAAKhB,EAAOiB,oBAGhB,kBAACd,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEgG,SAAU,EAAG/E,QAAS,KACxC,kBAAC4rB,GAAA,EAAD,CAASjc,MAAM,+BAAakc,UAAU,OACpC,yBAAK9sB,MAAO,CAAEsB,WAAY,SACxB,kBAAC,IAAD,CACEjB,UAAU,OACVyC,IAAKpD,EAAOyb,UACZnb,MAAO,CAAEgD,eAAgB,QACzBC,GAAE,UAAK+b,EAAL,oBAAoBtf,EAAOyb,UAA3B,WAEDzb,EAAO8B,eAId,kBAACqrB,GAAA,EAAD,CACEjc,MAAM,sEACNkc,UAAU,OAEV,yBAAK9sB,MAAO,CAAEqB,MAAO,YAClB3B,EAAOqtB,sBADV,IAEGrtB,EAAOstB,qBAId,kBAACntB,EAAA,EAAD,CAAMU,MAAI,GACR,kBAACssB,GAAA,EAAD,CAASjc,MAAM,yBAAUkc,UAAU,OACjC,kBAACG,GAAA,EAAD,CACEnjB,QAAQ,cACRe,MACGnL,EAAOqtB,sBACNrtB,EAAOstB,kBACT,IAEFhtB,MAAO,CAAEQ,MAAO,UAKxB,kBAACuc,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,UAAa,UAOnD,kBAACrB,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACuR,GAAA,EAAD,CAAOxX,UAAWZ,EAAQ+I,OACxB,kBAAC3I,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEuG,aAAc,KACrC,kBAAC1G,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEgG,SAAU,IAC5B,yBAAKhG,MAAO,CAAEsB,WAAY,SAA1B,+BAAyD,MAI5D/B,KAAK2C,MAAMsqB,gBAAgB3pB,KAAI,SAAA4pB,GAC9B,OACE,kBAAC,IAAM7mB,SAAP,CAAgB9C,IAAK2pB,EAAe1pB,IAClC,kBAAClD,EAAA,EAAD,CACEC,WAAS,EACTE,MAAO,CAAEI,WAAY,SAAUusB,SAAU,UAEzC,kBAAC9sB,EAAA,EAAD,CAAMU,MAAI,GACR,yBACEF,UAAWZ,EAAQmtB,IACnB5sB,MAAO,CACLQ,MAAO,OACPP,OAAQ,OACRW,UAAW,QACXC,aAAc,OAEhBE,IAAI,UACJL,IAAK+rB,EAAepV,UAGxB,kBAACxX,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEgG,SAAU,EAAG/E,QAAS,KACxC,yBAAKjB,MAAO,CAAEsB,WAAY,SACxB,kBAAC,IAAD,CACEjB,UAAU,OACVL,MAAO,CAAEgD,eAAgB,QACzBC,GAAE,iBAAYwpB,EAAe1pB,KAE5B0pB,EAAexmB,iBAGpB,yBACEjG,MAAO,CAAEE,QAAS,OAAQE,WAAY,WAEtC,kBAACysB,GAAA,EAAD,CAASjc,MAAM,wBAASkc,UAAU,OAChC,yBAAK9sB,MAAO,CAAEqB,MAAO,YAArB,0BACWorB,EAAe9kB,aAG5B,kBAACklB,GAAA,EAAD,CAASjc,MAAM,sBAASkc,UAAU,OAChC,yBAAK9sB,MAAO,CAAEsK,WAAY,KACvB,EAAK4iB,wBAAwBT,OAKtC,kBAAC5sB,EAAA,EAAD,CAAMU,MAAI,GACmB,cAA1BksB,EAAe1mB,OACd,kBAAC8mB,GAAA,EAAD,CAASjc,MAAM,8BAAgBkc,UAAU,OACtC,IACD,yBACE9sB,MAAO,CACLQ,MAAO,OACPN,QAAS,OACTE,WAAY,SACZkK,WAAY,KAGd,yBACEtK,MAAO,CAAEQ,MAAO,QAChBE,IAAKyE,EAAQ,KACbpE,IAAI,4BAKV,kBAAC8rB,GAAA,EAAD,CAASjc,MAAM,6BAAkBkc,UAAU,OACzC,yBACE9sB,MAAO,CACLQ,MAAO,OACPN,QAAS,OACTE,WAAY,SACZkK,WAAY,KAGd,yBACEtK,MAAO,CACLQ,MAAO,OACP2F,gBAAiB,UACjBtF,aAAc,OAEhBH,IAAKyE,EAAQ,KACbpE,IAAI,8BAOhB,kBAACgc,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,UAAa,gB,GA7QtCsI,IAAM5H,WAuVdC,eAjXA,CACb2G,MAAO,CACLvH,QAAS,GACTH,UAAW,GACXqC,UAAW,KAEbyR,KAAM,CACJ0B,SAAU,QAEZ6W,MAAO,CAGLltB,OAAQ,IACRW,UAAW,UAoWAiB,CAAmB0D,aAHV,SAAArD,GAAK,MAAK,CAChCwB,KAAMxB,EAAMuD,YAAY/B,QAEiC,GAAzB6B,CAA6B+mB,KCxXzDc,I,sOAoBkB7tB,KAAKC,MAAjBC,QADA,IAEF2tB,EAAc7tB,KAAKC,MAAM4tB,YAG/B,OACE,kBAACvtB,EAAA,EAAD,CACEG,MAAO,CACL+M,SAAU,SACV5J,UAAW,QACXpB,WAAW,8CACXsS,eAAgB,OAChB/L,SAAU,aAGZ,kBAACzI,EAAA,EAAD,CACEC,WAAS,EACTE,MAAO,CACLG,eAAgB,SAEhBmI,SAAU,WACV+kB,IAAI,QAGN,kBAACxtB,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAC7B,uBACEtG,MAAO,CAAEuB,WAAW,4BAA8B8I,SAAU,GAAInJ,OAAO,WAAYC,UAAW,gBAExEsD,IAArB2oB,EAAY1pB,KAAoB,GAAG0pB,EAAY1pB,KAAKojB,SAHvD,SAGuFriB,IAArB2oB,EAAY1pB,KAAoB,GAAG0pB,EAAY1pB,KAAK2B,YAGxH,kBAACxF,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,GAAItG,MAAO,CAACkB,OAAO,cAC/C,IAED,6BAAK,uBAAGlB,MAAO,CAAEuB,WAAW,4BAA8B8I,SAAS,GAAGnJ,OAAO,WAAYC,UAAU,WAA9F,oDACL,6BAAK,uBAAGnB,MAAO,CAAEkB,OAAO,WAAYC,UAAU,SAASC,cAAc,YAAYE,WAAW,OAAO+I,SAAS,KAAvG,aAAuI5F,IAArB2oB,EAAYE,KAAoB,GAAGF,EAAYE,KAAK1U,cAG/K,kBAAC/Y,EAAA,EAAD,CAAMG,MAAO,CAACsI,SAAS,WAAWilB,KAAK,MAAMxa,OAAO,MAAMqG,UAAU,0BAC9C3U,IAArB2oB,EAAYE,KAAoB,GAAGF,EAAYE,KAAKzU,WAErD,kBAAChZ,EAAA,EAAD,CAAMG,MAAO,CAACsI,SAAS,WAAW0K,MAAM,MAAMD,OAAO,MAAMqG,UAAU,yBAC7C3U,IAAvB2oB,EAAYI,OAAsB,GAAI,yBAAK9sB,IAAK0sB,EAAYI,OAAOC,qBAAsBztB,MAAO,CAACC,OAAO,IAAKc,IAAI,+B,GA7DhGa,cA2EXC,eA7EA,GA6EmB,CAAEoY,WAAW,GAAhCpY,CACb0D,aAPsB,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAIC,GAAzB6B,CAA6B6nB,K,sDChEzBM,G,YACJ,WAAYluB,GAAQ,IAAD,8BACjB,4CAAMA,KAYRmqB,OAbmB,wBAaV,uBAAA/I,EAAA,sEACD3C,QAAQkK,IAAI,CAChB/lB,IACGC,IADH,0DAEGC,MAAK,SAAAC,GACJ5C,QAAQC,IAAI2C,EAAIC,MAChB,IAAMmrB,EAAoBprB,EAAIC,KAE9B,EAAKC,SAAS,CAAEmrB,aAAcD,EAAkBC,kBAEpDxrB,IAAMC,IAAI,sCAAsCC,MAAK,SAAAC,GACnD5C,QAAQC,IAAI2C,EAAIC,MAChB,EAAKC,SAAS,CAAEorB,eAAgBtrB,EAAIC,KAAK4C,eAE3ChD,IAAMC,IAAN,8CAAwDC,MAAK,SAAAC,GAC3D,IAAMqE,EAAYrE,EAAIC,KACtB7C,QAAQC,IAAIgH,GACZ,EAAKnE,SAAS,CAAEmE,mBAjBb,OAoBP,EAAKnE,SAAS,CAAEwM,WAAW,IApBpB,2CAbU,EAsCnB6e,eAtCmB,wBAsCF,uBAAAlN,EAAA,6DACf,EAAKne,SAAS,CACZsrB,uBAAuB,IAEzB,EAAKtrB,SAAS,CAAEurB,eAAe,IAJhB,SAKT/P,QAAQkK,IAAI,CAChB/lB,IAAMC,IAAN,+CAAyDC,MAAK,SAAAC,GAC5D,IAAM0rB,EAAc1rB,EAAIC,KACxB7C,QAAQC,IAAI2C,EAAIC,MAChB,EAAKC,SAAS,CAAEwrB,gBAChB,EAAKxrB,SAAS,CAAEurB,eAAe,SAVpB,2CAtCE,EAoDnBE,4BAA8B,WAC5B,EAAKJ,kBArDY,EAwDnBK,6BAA+B,WAC7B,EAAK1rB,SAAS,CAAEsrB,uBAAuB,KAzDtB,EA4DnBK,aAAe,SAACH,GACd,QAAwBxpB,IAArBwpB,EAAYX,KACd,MAA+B,aAA5BW,EAAYX,KAAKvnB,OAEjB,kBAACsoB,GAAA,EAAD,CAAeC,UAAQ,GACvB,kBAAC/hB,GAAA,EAAD,CACAzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEsK,WAAY,EAAGnJ,UAAW,WAJnC,wIAMsD,IACrD,EAAKe,MAAM0rB,eAMA,oCAEZ,kBAACS,GAAA,EAAD,CAAeC,UAAQ,GAErB,kBAACzuB,EAAA,EAAD,CAAMC,WAAS,EAAC0T,QAAS,GACvB,kBAAC3T,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJ2D,GAAI,GACJ1D,GAAI,GACJ5C,MAAO,CAAEE,QAAS,OAAQE,WAAY,WAEtC,kBAAC,GAAD,CACEqc,IAAK,SAAA8R,GAAE,OAAK,EAAKC,eAAiBD,GAClCnB,YAAa,EAAKlrB,MAAM+rB,iBAKhC,kBAACQ,GAAA,EAAD,CACE1rB,GAAG,0BACHqH,QAAS,EAAK+jB,8BAEd,kBAACtuB,EAAA,EAAD,CACEG,MAAO,CAAEE,QAAS,OAAQC,eAAgB,aAE1C,kBAAC,KAAD,CACEuuB,QAAS,kBACP,kBAACpa,GAAA,EAAD,CACEtU,MAAO,CAAE+B,WAAY,UAAWV,MAAO,QACvCyI,QAAQ,aAFV,2BAOF6kB,QAAS,kBAAM,EAAKH,sBA/G9B,EAAKtsB,MAAQ,CACX0E,UAAW,GACXmnB,uBAAuB,EACvB9e,WAAW,EACXgf,YAAa,GACbL,aAAc,EACdC,eAAgB,EAChBG,eAAe,GATA,E,iFAoCjBzuB,KAAKoqB,W,+BAsFG,IACAlqB,EAAYF,KAAKC,MAAjBC,QACR,OACE,oCACGF,KAAK2C,MAAM+M,UACV,yBACE5O,UAAU,gBACVL,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBK,MAAO,OACPP,OAAQ,UAGV,kBAAC,KAAD,CACEiP,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,QAAS7P,KAAK2C,MAAM+M,aAIxB,kBAACpP,EAAA,EAAD,CACEC,WAAS,EACT0T,QAAS,EACTxT,MAAO,CAAEC,OAAQ,OAAQ2c,UAAW,MAEpC,kBAAC/c,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACuR,GAAA,EAAD,CACE7X,MAAO,CACLC,OAAQ,OACRgB,QAAS,GACTf,QAAS,OACTE,WAAY,SACZD,eAAgB,WAGlB,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASK,WAAW,UAC5C,kBAACP,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAACE,MAAO,CAAEG,eAAgB,WAC5C,kBAACN,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,EACJC,GAAI,EACJ0D,GAAI,EACJtG,MAAO,CAAEE,QAAS,OAAQC,eAAgB,WAE1C,yBACEH,MAAO,CACLQ,MAAO,QACPP,OAAQ,QACRY,aAAc,OAEhBE,IAAI,SACJL,IAAKnB,KAAKC,MAAMkE,KAAK2T,WAI3B,kBAACxX,EAAA,EAAD,CAAMU,MAAI,GACR,kBAACgM,GAAA,EAAD,CACEzC,QAAQ,KACR0K,cAAY,EACZxU,MAAO,CAAEqB,MAAO,YAEf9B,KAAKC,MAAMkE,KAAKojB,SALnB,IAK8BvnB,KAAKC,MAAMkE,KAAK2B,YAGhD,kBAACxF,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEmB,UAAW,WAC7B,kBAACoL,GAAA,EAAD,CAAYzC,QAAQ,KAAK9J,MAAO,CAAEqB,MAAO,YACtC9B,KAAKC,MAAMkE,KAAK0B,WAEnB,kBAACmH,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEsK,WAAY,EAAGjJ,MAAO,YAJjC,oCAWF,kBAACxB,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEmB,UAAW,SAAUL,UAAU,SACjD,kBAACyL,GAAA,EAAD,CAAYzC,QAAQ,KAAK9J,MAAO,CAAEqB,MAAO,YACtC9B,KAAK2C,MAAM0E,UAAU+K,QAExB,kBAACpF,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEsK,WAAY,EAAGjJ,MAAO,YAJjC,gDAWF,kBAACxB,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEmB,UAAW,SAAUL,UAAU,SACjD,kBAACyL,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEsK,WAAY,EAAGnJ,UAAW,WAJrC,wIAMwD,IACrD5B,KAAK2C,MAAM0rB,eAIhB,kBAAC/tB,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEmB,UAAW,WAC7B,kBAACmT,GAAA,EAAD,CACExK,QAAQ,YACR9J,MAAO,CAAE+B,WAAY,UAAWV,MAAO,QACvCiE,QAAS/F,KAAK2uB,6BAHhB,kCAWR,kBAACruB,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG0D,GAAI,GAC5B,kBAACuR,GAAA,EAAD,CACE7X,MAAO,CACLmD,UAAW,IACXwK,UAAW,OACXzN,QAAS,OACToN,cAAe,WAGjB,kBAACzN,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEiB,QAAS,KAChC,kBAACpB,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEgG,SAAU,IAC5B,yBAAKhG,MAAO,CAAEsB,WAAY,SAA1B,4DAEO,KAGX,kBAACzB,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEiB,QAAS,KACC,IAAhC1B,KAAK2C,MAAM0E,UAAU+K,OACpBpS,KAAK2C,MAAM0E,UAAU/D,KAAI,SAAAiD,GACvB,OACE,kBAAC,IAAMF,SAAP,CAAgB9C,IAAKgD,EAAS/C,IAC5B,kBAAClD,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEI,WAAY,WACnC,kBAACP,EAAA,EAAD,CAAMU,MAAI,GACR,yBACEF,UAAWZ,EAAQmtB,IACnB5sB,MAAO,CACLQ,MAAO,OACPP,OAAQ,OACRW,UAAW,QACXC,aAAc,OAEhBE,IAAI,UACJL,IAAKoF,EAASuR,UAGlB,kBAACxX,EAAA,EAAD,CAAMU,MAAI,EAACP,MAAO,CAAEgG,SAAU,EAAG/E,QAAS,KACxC,yBAAKjB,MAAO,CAAEsB,WAAY,SACxB,kBAAC,IAAD,CACEjB,UAAU,OACVL,MAAO,CAAEgD,eAAgB,QACzBC,GAAE,iBAAY6C,EAAS/C,KAEtB+C,EAASG,iBAGd,yBAAKjG,MAAO,CAAEqB,MAAO,YAArB,0BACWyE,EAAS6B,cAIxB,kBAACoV,GAAA,EAAD,CAAS/c,MAAO,CAAEkB,OAAQ,OAAQV,MAAO,UAAa,QAK5D,kBAACX,EAAA,EAAD,CACEC,WAAS,EACTkB,QAAQ,SACRZ,WAAW,SACXJ,MAAO,CAAEgG,SAAU,IAEnB,kBAACnG,EAAA,EAAD,CAAMU,MAAI,GACR,kBAACgM,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEsK,WAAY,IAJvB,oEAcZ,kBAACskB,GAAA,EAAD,CACEtY,UAAU,EACVpM,KAAM3K,KAAK2C,MAAM6rB,sBACjB3jB,QAAS7K,KAAK4uB,6BACdxhB,kBAAgB,2BAEf,KAC6B,IAA7BpN,KAAK2C,MAAM8rB,cACV,yBACE3tB,UAAU,gBACVL,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBK,MAAO,QACPP,OAAQ,QACRQ,SAAU,WAGZ,kBAAC,KAAD,CACEyO,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,QAAS7P,KAAK2C,MAAM8rB,iBAKxBzuB,KAAK6uB,aAAa7uB,KAAK2C,MAAM+rB,oB,GA5VrBrsB,aA4WTC,eA9WA,GA8WmB,CAAEoY,WAAW,GAAhCpY,CACb0D,aAPsB,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAIC,GAAzB6B,CAA6BmoB,K,qBCzVzB7nB,I,wMACoBC,GAGtB,OAFAA,EAAS4B,MAAkB5B,EAAS4B,MAVnCqO,cACA+L,MAAM,KACNjf,KAAI,SAAAkf,GACH,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKhC,MAAM,MAElDvF,KAAK,KAMN7a,QAAQC,IAAIkG,EAAS4B,OACE,SAAnB5B,EAAS4B,MAET,kBAACglB,GAAA,EAAD,CACE1sB,MAAO,CAAE+B,WAAY,UAAWV,MAAO,SACvC8N,KAAK,QACLzB,MAAK,UAAK5H,EAAS4B,SAGK,WAAnB5B,EAAS4B,MAEhB,kBAACglB,GAAA,EAAD,CACE1sB,MAAO,CAAE+B,WAAY,UAAWV,MAAO,SACvC8N,KAAK,QACLzB,MAAK,UAAK5H,EAAS4B,SAKrB,kBAACglB,GAAA,EAAD,CACE1sB,MAAO,CAAE+B,WAAY,MAAOV,MAAO,SACnC8N,KAAK,QACLzB,MAAK,UAAK5H,EAAS4B,W,qCAKZ5B,GAGb,MAAwB,cAApBA,EAASC,OAET,kBAAC,IAAD,CACE9C,GAAE,iBAAY6C,EAAS/C,IACvB/C,MAAO,CACLE,QAAS,OACT8C,eAAgB,OAChB3B,MAAO,UAEPjB,WAAY,WAGd,kBAACysB,GAAA,EAAD,CAASjc,MAAM,yBAAckc,UAAU,aACrC,yBAAK9sB,MAAO,CAAEgG,SAAU,IAAxB,IAA+BF,EAASG,iBAE1C,kBAAC4mB,GAAA,EAAD,CAASjc,MAAM,wBAASkc,UAAU,OAChC,yBACE9sB,MAAO,CACLqK,SAAU,GACVnJ,OAAQ,UACRG,MAAO,UACPiJ,WAAY,GACZrK,OAAQ,IAEVI,UAAU,aAEV,6BACE,uBACEL,MAAO,CACLmB,UAAW,SACX0tB,cAAe,SACfC,WAAY,OACZ5tB,OAAQ,IAGT4E,EAAS6B,aAGd,6BACE,kBAAC,KAAD,CAAiB3H,MAAO,CAAEqK,SAAU,GAAI5C,YAAa,QAI3D,kBAAColB,GAAA,EAAD,CAASjc,MAAM,sBAASkc,UAAU,OAChC,yBAAKzsB,UAAU,iBAAiBL,MAAO,CAAEsK,WAAY,IAClD/K,KAAK2tB,wBAAwBpnB,KAGlC,kBAAC+mB,GAAA,EAAD,CAASjc,MAAM,mBAAakc,UAAU,OACpC,yBACE9sB,MAAO,CACLQ,MAAO,OACPN,QAAS,OACTE,WAAY,SACZkK,WAAY,KAGd,yBACEtK,MAAO,CAAEQ,MAAO,QAChBE,IAAKyE,EAAQ,KACbpE,IAAI,6BAMe,kBAApB+E,EAASC,SAAiD,IAAnBD,EAASI,MAEvD,uBACEhB,KAAK,QACLlF,MAAO,CACLE,QAAS,OACT8C,eAAgB,OAChB3B,MAAO,YAIT,8BACA,yBAAKrB,MAAO,CAAEgG,SAAU,IAAMF,EAASG,gBACvC,yBAAKjG,MAAO,CAAEQ,MAAO,QACnB,yBACER,MAAO,CAAEQ,MAAO,QAChBE,IAAKyE,EAAQ,MACbpE,IAAI,4BAMQ,kBAApB+E,EAASC,SACU,IAAnBD,EAASI,MAGP,kBAAC,IAAD,CACEjD,GAAE,iBAAY6C,EAAS/C,IACvB/C,MAAO,CACLE,QAAS,OACT8C,eAAgB,OAChB3B,MAAO,UAEPjB,WAAY,WAGd,kBAACysB,GAAA,EAAD,CAASjc,MAAM,kCAAoBkc,UAAU,aAC3C,yBAAK9sB,MAAO,CAAEgG,SAAU,IAAMF,EAASG,iBAEzC,kBAAC4mB,GAAA,EAAD,CAASjc,MAAM,wBAASkc,UAAU,OAChC,yBACE9sB,MAAO,CACLqK,SAAU,GACVnJ,OAAQ,UACRG,MAAO,UACPiJ,WAAY,KAGbxE,EAAS6B,WACV,kBAAC,KAAD,CAAiB3H,MAAO,CAAEqK,SAAU,GAAI5C,YAAa,OAGzD,kBAAColB,GAAA,EAAD,CAASjc,MAAM,sBAASkc,UAAU,OAChC,yBAAKzsB,UAAU,iBAAiBL,MAAO,CAAEsK,WAAY,KAClD,IACA/K,KAAK2tB,wBAAwBpnB,KAGlC,kBAAC+mB,GAAA,EAAD,CAASjc,MAAM,6BAAkBkc,UAAU,OACzC,yBACE9sB,MAAO,CACLQ,MAAO,OACPN,QAAS,OACTE,WAAY,SACZkK,WAAY,KAGd,yBACEtK,MAAO,CACLQ,MAAO,OACP2F,gBAAiB,UACjBtF,aAAc,OAEhBH,IAAKyE,EAAQ,KACbpE,IAAI,6BAMe,iBAApB+E,EAASC,OAEhB,yBACE/F,MAAO,CACLE,QAAS,OACT8C,eAAgB,OAChB3B,MAAO,YAIT,8BACA,yBAAKrB,MAAO,CAAEgG,SAAU,IAAMF,EAASG,gBACvC,yBAAK5F,UAAU,SAASL,MAAO,CAAEE,QAAS,SACxC,yBAAKF,MAAO,CAAEQ,MAAO,QACnB,yBACER,MAAO,CAAEQ,MAAO,QAChBE,IAAKyE,EAAQ,MACbpE,IAAI,2BAGR,yBAAKV,UAAU,SAASL,MAAO,CAAEE,QAAS,SACvC4F,EAASM,qBArBb,I,+BA4BC,IAAD,SACmB7G,KAAKC,MAAvBC,EADD,EACCA,QAAS4G,EADV,EACUA,KAEjB,OACE,kBAAC,IAAMT,SAAP,KAcE,kBAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASM,UAAS,UAAKZ,EAAQoG,WACvD,kBAAChG,EAAA,EAAD,CAAMU,MAAI,EAACT,WAAS,EAACC,UAAU,SAASK,WAAW,UACjD,kBAACP,EAAA,EAAD,CACE8C,GAAI,EACJ2D,GAAI,EACJ/F,MAAI,EACJP,MAAO,CACLiB,QAAS,MACTkF,gBAAiB,QACjBtF,aAAc,MACd0F,aAAc,QACdC,OAAQ,IACR/F,SAAU,SACVgG,aAAc,WACdC,WAAY,UACZvF,UAAW,SACXX,MAAO,QACPsB,UACE,yGAGHuE,EAAKM,YAIV,kBAAC9G,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CAAEC,OAAQ,QAASO,MAAO,OAAQC,SAAU,WAElD,IAED,yBACEC,IAAK2F,EAAK1F,iBACVX,MAAO,CACLC,OAAQ,OACRO,MAAO,OACPK,aAAc,eAEhBE,IAAI,MAGR,kBAAClB,EAAA,EAAD,CACEU,MAAI,EACJT,WAAS,EACTC,UAAU,SACVC,MAAO,CACLiB,QAAS,SACTc,WAAY,QACZD,UACE,yGAGH,IAEAuE,EAAKO,UAAU/D,KAAI,SAAAiD,GAAQ,OAC1B,kBAACjG,EAAA,EAAD,CACEU,MAAI,EACJF,UAAS,UAAKZ,EAAQoH,cACtB/D,IAAKgD,EAAS/C,IAEb,IACA,EAAK+D,eAAehB,c,GA/RdlE,cAySRC,eAvUA,CACbgE,SAAU,CACRhF,aAAc,MACdJ,SAAU,SACV8F,aAAc,OACdzE,UACE,iHAEJ+E,aAAc,CACZ3F,OAAQ,MACRiF,gBAAiB,UACjBlF,QAAS,WACTiC,WAAY,OACZrC,aAAc,MACdiB,UACE,yGAwTSD,CAAmBgE,ICpT5BkpB,GAAY,SAAAC,GAChB,IAAMtvB,EAASuvB,YAAUD,EAAU,CACjCE,KAAK,qCAEP,OAAQxvB,GAAUA,EAAO2H,QAAW,IAEhCN,G,YACJ,WAAYvH,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,CACX8E,MAAO,GACPiI,WAAW,EACXvP,OAAQ,IALO,E,iFAQE,IAAD,OACd+lB,EAAWlmB,KAAKC,MAAMimB,SAEpB0J,EAAgBJ,GAAUtJ,EAASuJ,UACzCrvB,QAAQC,IAAIuvB,GACZ/sB,IACGC,IADH,mDAEgD8sB,EAAcloB,SAF9D,WAIG3E,MAAK,SAAAC,GACJ5C,QAAQC,IAAI2C,EAAIC,MAChB,IACI4sB,EADU7sB,EAAIC,KACC6sB,UACnB,EAAK5sB,SAAS,CAAEuE,MAAOooB,EAAQngB,WAAW,OAE9C7M,IACGC,IADH,8CAC8C8sB,EAAcloB,WACzD3E,MAAK,SAAAC,GACJ,IAAM7C,EAAS6C,EAAIC,KACnB7C,QAAQC,IAAIF,GACZ,EAAK+C,SAAS,CAAE/C,OAAQA,S,oCAQhB0W,GACZ,IAAIqP,EAAWlmB,KAAKC,MAAMimB,SAEpB0J,EAAgBJ,GAAUtJ,EAASuJ,UAErCM,EAAY/vB,KAAK2C,MAAMxC,OACF,OAArB4vB,EAAUC,SAAiBD,EAAUC,OAAS,IAClDD,EAAUC,OAAOxqB,KAAKqR,GACtBkZ,EAAU3D,aAAe6D,GAAQF,EAAUC,QAE3ChwB,KAAKkD,SAAS,CAAE/C,OAAQ4vB,IAExBltB,IACGijB,IADH,mDAEgD8J,EAAcloB,UAC1DqoB,GAEDhtB,MAAK,SAAAC,S,+BAMA,IAAD,OACC9C,EAAYF,KAAKC,MAAjBC,QADD,EAEmBF,KAAK2C,MAAvB8E,EAFD,EAECA,MAAOtH,EAFR,EAEQA,OACPuP,EAAc1P,KAAK2C,MAAnB+M,UACR,OACE,kBAACpP,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAWZ,EAAQyH,eAAgBlG,QAAQ,UAGxDiO,EACC,yBACE5O,UAAU,gBACVL,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBK,MAAO,OACPP,OAAQ,UAGV,kBAAC,KAAD,CACEiP,SAAU,KACVC,KAAM,GACN9N,MAAO,UACP+N,QAASH,KAIb,kBAAC,IAAMrJ,SAAP,KACE,kBAAC/F,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI5C,MAAO,CAAEuG,aAAc,KAChD,kBAACsR,GAAA,EAAD,KACE,kBAAChY,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAO,CAAEiB,QAAS,KAChC,kBAACpB,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACrB,kBAAC2J,GAAA,EAAD,CAAYzC,QAAQ,KAAK0C,UAAU,MAChC9M,EAAO8B,cAGZ,kBAAC3B,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,IACrB,2BAAIlD,EAAOqsB,cAEb,kBAAClsB,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,GACJC,GAAI,GACJ9C,WAAS,EACTE,MAAO,CAAEG,eAAgB,kBAEzB,kBAACN,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,eAGlB,kBAAC8rB,GAAA,EAAD,CACE5rB,UAAWZ,EAAQysB,YACnBlsB,MAAO,CAAEmG,gBAAiB8kB,OAEzB,IACAvrB,EAAOysB,YACJzsB,EAAOysB,YAAYnK,OAAO,GAAGC,cAC7B,KAEN,kBAAC1V,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEsK,WAAY,IAGG,KAAvB5K,EAAOysB,YACJzsB,EAAOysB,YACP,WAIR,kBAACtsB,EAAA,EAAD,CACEG,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,eAGlB,kBAAC,KAAD,MACA,kBAACoM,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEsK,WAAY,IAGpB5K,EAAO2sB,eAPV,qBAUF,kBAACxsB,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,eAGlB,kBAACurB,GAAA,EAAD,CACE7U,KAAK,IACLhM,MAAOnL,EAAOisB,aACdC,YAAU,OACVC,UAAW,GACX1c,KAAK,QACLhD,SAAU,SAACpC,EAAOyD,GAChB,EAAKiiB,cAAcjiB,MAGvB,kBAACjB,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEsK,WAAY,IAJvB,uBAOY5K,EAAO6vB,OAAS7vB,EAAO6vB,OAAO5d,OAAS,EAPnD,MAWF,kBAAC9R,EAAA,EAAD,CACEU,MAAI,EACJP,MAAO,CACLE,QAAS,OACTE,WAAY,SACZD,eAAgB,eAGlB,kBAACoM,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CAAEyH,YAAa,IAJxB,uBAQA,kBAACsR,GAAA,EAAD,CAAkBjP,QAAQ,cAAce,MAAO,WAOzD,kBAAChL,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,EAAG5C,MAAO,CAAEiB,QAAS,aACzC+F,EAAMnE,KAAI,SAAAwD,GAAI,OACb,kBAAC,GAAD,CAAUvD,IAAKuD,EAAKtD,GAAIsD,KAAMA,c,GAhNvBzE,aA0NjB4tB,GAAU,SAAAjG,GAAI,OAAIA,EAAKmG,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,KAAQrG,EAAK5X,QAEzD9P,eA9OA,CACb+S,KAAM,CACJ3U,OAAQ,IACRO,MAAO,QAGT0G,eAAgB,CAGd/D,UAAW,UAqOAtB,CAAmBkF,ICpP5BwB,GAAa1G,YAAW,CAC5B2G,MAAO,CACLC,OAAQ,sBAFO5G,EAIhB,SAAArC,GAAK,OACN,kBAAC,IAAD,eACEQ,MAAO,CAAE0I,YAAa,MAAOC,aAAc,OAC3CC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAEVxJ,OAIF0J,GAAiBrH,aAAW,SAAAsH,GAAK,MAAK,CAC1CC,KAAM,CACJjG,UAAW,QACXlD,OAAO,OACP,UAAW,CAET,sDAAuD,CACrDoB,MAAO8H,EAAME,QAAQ7F,OAAO8F,YAPbzH,CAWnB0H,MA8CJ,IAMehE,gBANS,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAKxB,CAAEG,cAFW0B,EAlDf,SAAyB/F,GAAQ,IAAD,EACEgK,IAAMC,SAAS,MADjB,mBACvBC,EADuB,KACbC,EADa,KAW9B,OACE,yBAAK3J,MAAO,CAAEsK,WAAY,IACxB,kBAAC,KAAD,CACEV,gBAAc,kBACdC,gBAAc,OACdC,QAAQ,YACRxE,QAdc,SAAAyE,GAClBJ,EAAYI,EAAMC,gBAcdhK,MAAO,CAAEqB,MAAO,aAGlB,kBAAC,GAAD,CACE0B,GAAG,kBACH2G,SAAUA,EACVO,aAAW,EACXC,KAAMC,QAAQT,GACdU,QAnBc,WAClBT,EAAY,QAoBR,kBAAC,GAAD,CAAgBrE,QAAS9F,EAAMqE,YAC7B,kBAAC,KAAD,CAAe7D,MAAO,CAAEqK,SAAU,MAClC,uBAAGrK,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAAtC,6BAEF,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAgBtK,MAAO,CAAEqK,SAAU,MAEnC,kBAAC,IAAD,CAAMpH,GAAG,mBAAmBjD,MAAO,CAACgD,eAAgB,QAASsC,QAAS,WAAKqE,EAAY,QACrF,uBAAG3J,MAAO,CAAEqK,SAAU,GAAIC,WAAY,MAAOtH,eAAgB,SAA7D,qC,gCCxCN6sB,I,oBACJ,WAAYrwB,GAAQ,IAAD,8BACjB,4CAAMA,KACD0C,MAAQ,GAFI,E,mHAKT,IACAzC,EAAYF,KAAKC,MAAjBC,QACR,OACE,kBAAC,IAAMmG,SAAP,KACE,yBAAK5F,MAAO,CAAEE,QAAS,OAAQ8F,SAAU,IACvC,yBAAKhG,MAAO,CAAEE,QAAS,SAmBK,QAAzBX,KAAKC,MAAMkE,KAAK+I,MACQ,UAAzBlN,KAAKC,MAAMkE,KAAK+I,KACd,kBAAC,IAAD,CACExJ,GAAG,oCACHjD,MAAO,CAAEgD,eAAgB,OAGzB9C,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGZ,kBAAC0vB,GAAA,EAAD,CAEEhmB,QAAQ,WACR2D,aAAW,OACXzN,MAAO,CACLC,OAAQ,OACRoK,SAAU,OACVtI,WAAY,UACZV,MAAO,UACPiJ,WAAY,KAGd,kBAAC,KAAD,CAAgBtK,MAAO,CAAEqK,SAAU,GAAI5C,YAAa,KACpD,yBAAKpH,UAAU,cAAf,oCAIJ,IAGJ,yBACEL,MAAO,CACLgG,SAAU,EACV9F,QAAS,OACTC,eAAgB,WAChBC,WAAY,WAGd,yBACEJ,MAAO,CACLqK,SAAU,GACVnJ,OAAQ,UACRG,MAAO,UACPiJ,WAAY,GACZpK,QAAS,OACTE,WAAY,WAGd,uDACSb,KAAKC,MAAMkE,KAAK0B,WAX3B,iBAYQ,+BAIR,yBACEpF,MAAO,CACLqB,MAAO,UAEPgJ,SAAU,OAEVpJ,QAAS,QAGV,IACD,6BAAM1B,KAAKC,MAAMkE,KAAK2B,UAAtB,MAEF,kBAAC4mB,GAAA,EAAD,CACE5rB,UAAWZ,EAAQswB,WACnB/vB,MAAO,CAAEQ,MAAO,OAAQP,OAAQ,OAAQqK,WAAY,IACpDvJ,IAAI,aACJL,IAAKnB,KAAKC,MAAMkE,KAAK2T,SAEvB,kBAAC,GAAD,a,GAxGgB7N,IAAM5H,YAsHnBC,gBA7IA,SAAAsH,GAAK,MAAK,CACvB6mB,gBAAiB,CACf/uB,QAAS,mBACTf,QAAS,OACTE,WAAY,SACZ2B,WAAY,UACZ9B,OAAQ,OACRY,aAAc,mBAEhBovB,qBAAsB,CACpB3lB,WAAYnB,EAAMqK,QAAQ,GAC1BwG,KAAM,EACN3P,SAAU,IAEZ6lB,0BAA2B,CACzBjvB,QAAS,IAEX8uB,WAAW,gBACR5mB,EAAMgnB,YAAYC,KAAK,MAAQ,CAC9BlwB,QAAS,YA0HmB,CAAE+Z,WAAW,GAAhCpY,CACb0D,aAPsB,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAIC,CAAEa,WAA3BgB,CAAsCsqB,K,sDCvHlCQ,G,YACJ,WAAY7wB,GAAQ,IAAD,8BACjB,4CAAMA,KAYRmqB,OAbmB,wBAaV,uBAAA/I,EAAA,sEACD3C,QAAQkK,IAAI,CAChB/lB,IAAMC,IAAN,qCAA+CC,MAAK,SAAAC,GAClD,IAAM0e,EAAQ1e,EAAIC,KAClB7C,QAAQC,IAAIqhB,GACZ,EAAKxe,SAAS,CAAEwe,aAElB7e,IAAMC,IAAN,sCAAgDC,MAAK,SAAAC,GACnD,IAAM2e,EAAS3e,EAAIC,KACnB7C,QAAQC,IAAIshB,GACZ,EAAKze,SAAS,CAAEye,gBAVb,OAaP,EAAKze,SAAS,CAAEwM,WAAW,IAbpB,2CAbU,EA4BnBqhB,8BAAgC,SAACC,EAAaC,EAAWC,GACvD,EAAKhuB,SAAS,CACZiuB,oBAAoB,EACpBH,YAAaA,EACbC,UAAWA,EACXC,WAAYA,KAjCG,EAqCnBE,0BAA4B,WAC1B,EAAKluB,SAAS,CAAEiuB,oBAAoB,KApCpC,EAAKxuB,MAAQ,CACXuqB,eAAgB,GAChBxd,WAAW,EACXgS,MAAO,GACPC,OAAQ,GACRwP,oBAAoB,EACpBH,YAAa,GACbE,WAAY,GACZD,UAAW,IAVI,E,iFAyCjBjxB,KAAKC,MAAM+E,UACXhF,KAAKoqB,W,gCAEG9Y,EAAM+f,GACd,IAAIC,EAAUhgB,EAId,OAHIA,EAAKc,OAASif,IAChBC,EAAUhgB,EAAKa,UAAU,EAAGkf,IAEvBC,I,+BAEC,IAAD,OACCpxB,EAAYF,KAAKC,MAAjBC,QAEFqxB,EAAW,SAACC,EAAUptB,EAAMqtB,GAAjB,OACf,kBAACnxB,EAAA,EAAD,CACE8C,IAAE,EACFpC,MAAI,GAOJ,uBAAGP,MAAO,CAACsB,WAAW,SAAmB,UAATqC,EAAmB,4BAAmB,GAAtE,IAAoF,WAATA,EAAoB,sCAAoB,IAGnH,kBAAC,KAAD,CAAUstB,YAAY,EAAOC,SAAUF,GAIpCD,EAASluB,KAAI,SAAAsuB,GACZ,OACE,kBAAC,IAAMvrB,SAAP,CAAgB9C,IAAKquB,EAAKpuB,IACxB,kBAAClD,EAAA,EAAD,CAAMU,MAAI,EAACoC,GAAI,GAAIC,GAAI,GAAI0D,GAAI,IAC7B,kBAACzG,EAAA,EAAD,CACEG,MAAO,CACLc,UAAW,GACXyF,aAAc,KAGhB,kBAAC6qB,GAAA,EAAD,CAAM/wB,UAAWZ,EAAQmV,MACvB,kBAACyc,GAAA,EAAD,CACE/rB,QAAS,WACM,UAAT3B,GACF,EAAK2sB,8BACHa,EAAKxC,QACLwC,EAAKvH,MACLuH,EAAKvgB,OAGI,WAATjN,GACF6hB,OAAOtb,KAAKinB,EAAKG,KAAM,YAS3B,yBACEtxB,MAAO,CACLQ,MAAO,OACPP,OAAiB,UAAT0D,EAAmB,QAAU,OAErC5B,WAAW,OAAD,OAASovB,EAAKvH,MAAd,sBACVvV,eAAgB,WAGpB,kBAACkd,GAAA,EAAD,KACE,kBAAChlB,GAAA,EAAD,CACEiI,cAAY,EACZ1K,QAAQ,KACR0C,UAAU,KACVxM,MAAO,CACLC,OAAQ,GACRQ,SAAU,SACVqrB,UAAW,eAGZqF,EAAKvgB,OAGPugB,EAAKxC,QAAQhd,OAAS,IACrB,kBAAC,IAAM/L,SAAP,KACE,kBAAC2G,GAAA,EAAD,CACEzC,QAAQ,QACRzI,MAAM,gBACNmL,UAAU,IACVxM,MAAO,CACLC,OAAQ,GACRQ,SAAU,SACVqrB,UAAW,eAGZ,EAAK0F,UAAUL,EAAKxC,QAAS,KAVhC,QAcFwC,EAAKxC,kBAWzB,kBAACC,GAAA,EAAD,CACE1kB,KAAM,EAAKhI,MAAMwuB,mBACjBtmB,QAAS,EAAKumB,0BACdhkB,kBAAgB,2BAEhB,kBAAC8hB,GAAA,EAAD,CACE1rB,GAAG,0BACHqH,QAAS,EAAKumB,2BAEb,EAAKzuB,MAAMuuB,YAGd,kBAACpC,GAAA,EAAD,CAAeC,UAAQ,GACrB,kBAACzuB,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACViB,QAAQ,SACRZ,WAAW,UAEX,kBAACP,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,EACJ3C,MAAO,CACL+B,WAAW,OAAD,OAAS,EAAKG,MAAMsuB,UAApB,sBACVnc,eAAgB,QAChBpU,OAAQ,WAGZ,kBAACJ,EAAA,EAAD,CACEU,MAAI,EACJoC,GAAI,EACJ3C,MAAO,CACLiB,QAAS,SAQX,kBAACwwB,GAAA,EAAD,CAAmB1uB,GAAG,4BACnB,EAAKb,MAAMquB,mBAS1B,OACE,kBAAC,IAAM3qB,SAAP,KACE,kBAAC/F,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACViB,QAAQ,SAERhB,MAAO,CAAEC,OAAQ,OAAO0sB,SAAS,UAEJ,qBAArBptB,KAAK2C,MAAM+e,OACnB1hB,KAAK2C,MAAM+e,MAAMtP,OAAS,EACtBmf,EAASvxB,KAAK2C,MAAM+e,MAAO,QAAS,KACpC,KAE0B,qBAAtB1hB,KAAK2C,MAAMgf,QACnB3hB,KAAK2C,MAAMgf,OAAOvP,OAAS,EACvBmf,EAASvxB,KAAK2C,MAAMgf,OAAQ,SAAU,MACtC,W,GA3NS1X,IAAM5H,WAqSdC,gBA1TA,SAAAsH,GAAK,MAAK,CACvByL,KAAM,CACJ1U,QAAS,QAEXwxB,QAAS,CACPxxB,QAAS,OACToN,cAAe,UAEjBqhB,QAAS,CACP3U,KAAM,YAER2X,MAAO,CACLnxB,MAAO,KAEToxB,SAAU,CACR1xB,QAAS,OACTE,WAAY,SACZsI,YAAaS,EAAMqK,QAAQ,GAC3BmB,cAAexL,EAAMqK,QAAQ,OAwSC,CAAEyG,WAAW,GAAhCpY,CACb0D,aAPsB,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAIC,CAAEa,WAA3BgB,CAAsC8qB,KCvOlCwB,I,oBACJ,WAAYryB,GAAQ,IAAD,8BACjB,4CAAMA,KAmBRmF,SAAW,SAAAC,GACTA,EAAEC,iBACFlF,QAAQC,IAAI,EAAKJ,OACjB,EAAKA,MAAMqE,aACS,EAAKrE,MAAjBsF,QACAC,KAAK,WAvBb,EAAK7C,MAAQ,CACXC,QAAS,GACT2vB,YAAY,EACZlX,KAAM,GAER,EAAKmX,mBAAqB,EAAKA,mBAAmB/sB,KAAxB,gBAPT,E,kFAWjBzF,KAAKkD,SAAS,CAAEqvB,YAAavyB,KAAK2C,MAAM4vB,e,sCAE1BlX,GAAO,IAAD,OACpB,OAAO,SAAAhW,GACL,EAAKnC,SAAS,CACZmY,KAAMA,O,+BAYF,IAAD,EAC+Brb,KAAKC,MAAnCC,EADD,EACCA,QAAS0J,EADV,EACUA,MAAOrJ,EADjB,EACiBA,UAChBgyB,EAAevyB,KAAK2C,MAApB4vB,WAFD,EAGavyB,KAAKC,MAAM8H,MAAzB4nB,EAHC,EAGDA,KAAMlQ,EAHL,EAGKA,IACZrf,QAAQC,IAAI,UACZD,QAAQC,IAAIsvB,GALL,IAOOF,EACVzvB,KAAKC,MADPimB,SAAYuJ,SAGRgD,EACJ,yBAAKhyB,MAAO,CAAEC,OAAQ,OAAQQ,SAAU,WACtC,yBACEJ,UAAWZ,EAAQ8kB,QACnBvkB,MAAO,CACLyW,aAAc,kCACdtT,UAAW,GACXjD,QAAS,OACTE,WAAY,SACZD,eAAgB,WAGlB,yBAAKE,UAAU,QACb,kBAAC,IAAD,CAAM4C,GAAG,YACP,yBACEvC,IAA8B,YAC9BK,IAAI,GACJf,MAAO,CAAEC,OAAQ,aAMzB,kBAACgyB,GAAA,EAAD,CAAU5xB,UAAU,iBAAiBL,MAAO,CAAEC,OAAQ,SACpD,kBAACJ,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SAGVC,MAAO,CAAEC,OAAQ,SAEjB,kBAAC,IAAD,CAAMgD,GAAE,UAAK+b,EAAL,cACN,kBAACzV,GAAA,EAAD,CACE2oB,SAAUlD,IAAQ,UAAQhQ,EAAR,cAA0BgQ,IAAQ,UAAQhQ,IAASgQ,IAAQ,UAAQhQ,EAAR,KAC7E1Z,QAAS/F,KAAK4yB,gBAAgB,IAE9B,kBAAC,KAAD,CAAUnyB,MAAO,CAAEqK,SAAU,MAC7B,uBAAGrK,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAAtC,oBAIJ,kBAAC,IAAD,CAAMrH,GAAE,UAAK+b,EAAL,YACN,kBAACzV,GAAA,EAAD,CACE2oB,SAAUlD,IAAQ,UAAQhQ,EAAR,WAClB1Z,QAAS/F,KAAK4yB,gBAAgB,IAE9B,kBAAC,KAAD,CAAoBnyB,MAAO,CAAEqK,SAAU,MACvC,uBAAGrK,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAAtC,2BAIJ,kBAAC,IAAD,CAAMrH,GAAE,UAAK+b,EAAL,WACN,kBAACzV,GAAA,EAAD,CACE2oB,SAAUlD,IAAQ,UAAQhQ,EAAR,UAClB1Z,QAAS/F,KAAK4yB,gBAAgB,IAE9B,kBAAC,KAAD,CAAoBnyB,MAAO,CAAEqK,SAAU,MACvC,uBAAGrK,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAAtC,yCAKsB,QAAzB/K,KAAKC,MAAMkE,KAAK+I,MACQ,UAAzBlN,KAAKC,MAAMkE,KAAK+I,KACd,kBAAC,IAAD,CAAMxJ,GAAE,UACN,kBAACsG,GAAA,EAAD,CACE2oB,SAAUlD,IAAQ,UAAQhQ,EAAR,UAClB1Z,QAAS/F,KAAK4yB,gBAAgB,IAE9B,kBAAC,KAAD,CAAYnyB,MAAO,CAAEqK,SAAU,MAC/B,uBAAGrK,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAAtC,WAIJ,GAaF,kBAACzK,EAAA,EAAD,CACEU,MAAI,EACJoC,IAAE,EACF3C,MAAO,CACLE,QAAS,OACToN,cAAe,SACfnN,eAAgB,WAChBoG,aAAc,SAGhB,kBAAC,IAAD,CAAMtD,GAAE,UAAK+b,EAAL,aACN,kBAACzV,GAAA,EAAD,CACE2oB,SAAUlD,IAAQ,UAAQhQ,EAAR,YAClB1Z,QAAS/F,KAAKoF,UAEd,kBAAC,KAAD,CAAsB3E,MAAO,CAAEqK,SAAU,MACzC,uBAAGrK,MAAO,CAAEqK,SAAU,GAAIC,WAAY,QAAtC,8BAEI,QAMlB,OACE,yBAAKjK,UAAWZ,EAAQ2J,MACtB,kBAACmN,GAAA,EAAD,MACA,kBAAC6b,GAAA,EAAD,CAAQ9pB,SAAS,QAAQjI,UAAWZ,EAAQ4yB,QAC1C,kBAAC,KAAD,KACE,kBAACna,GAAA,EAAD,CACEzK,aAAW,cACX6kB,KAAK,QACLhtB,QAAS/F,KAAKwyB,mBACd1xB,UAAWZ,EAAQ8yB,YAEnB,kBAAC,KAAD,OAEF,kBAAC,GAAD,QAGJ,yBACElyB,UAAS,WAAMZ,EAAQ+yB,WAAd,gBACT/kB,aAAW,YAGX,kBAACglB,GAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B,kBAACC,GAAA,EAAD,CACE9yB,UAAWA,EACXgK,QAAQ,YACR+oB,OAA4B,QAApB1pB,EAAMpJ,UAAsB,QAAU,OAC9CmK,KAAM4nB,EACN1nB,QAAS7K,KAAKwyB,mBACdtyB,QAAS,CACP+I,MAAO/I,EAAQqzB,aAEjBC,WAAY,CACV9oB,aAAa,IAGd+nB,IAGL,kBAACS,GAAA,EAAD,CAAQO,QAAM,EAACL,eAAe,OAC5B,kBAACC,GAAA,EAAD,CACEnzB,QAAS,CACP+I,MAAO/I,EAAQqzB,aAEjBhpB,QAAQ,YACRI,MAAI,GAEH8nB,KAIP,yBAAK3xB,UAAWZ,EAAQwzB,SAAUxlB,aAAW,aAC3C,kBAAC,GAAD,OAEF,0BAAMpN,UAAWZ,EAAQkvB,SACvB,yBAAKtuB,UAAWZ,EAAQ8kB,UAExB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2O,OAAK,EAAChE,KAAMA,GACjB,kBAAC,GAAD,CAAUlQ,IAAKA,KAEjB,kBAAC,IAAD,CAAOkQ,KAAI,UAAKA,EAAL,cACT,kBAAC,GAAD,CAAUlQ,IAAKA,KAEjB,kBAAC,IAAD,CAAOkQ,KAAI,UAAKA,EAAL,YACT,kBAAC,GAAD,CAAYlQ,IAAKA,KAEnB,kBAAC,IAAD,CAAOkQ,KAAI,UAAKA,EAAL,6BACT,kBAAC,GAAD,CAAUzJ,SAAUlmB,KAAKC,MAAMimB,YAEjC,kBAAC,IAAD,CAAOyJ,KAAI,UAAKA,EAAL,WACT,kBAAC,GAAD,CAAY5X,SAAU/X,KAAKC,MAAMkE,QAKnC,kBAAC,IAAD,CAAOwrB,KAAI,UAAKA,EAAL,aACT,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOgE,OAAK,EAAChE,KAAI,UAAKA,EAAL,8BACf,kBAACrX,GAAA,EAAD,CAAO7X,MAAO,CAAEiB,QAAS,KACvB,kBAAC,GAAD,CAAgBwkB,SAAUlmB,KAAKC,MAAMimB,oB,GAtO3Bjc,IAAM5H,YA2PjBC,gBAhUA,SAAAsH,GAAK,gBAAK,CACvBC,KAAM,CACJlJ,QAAS,OACT6B,WAAW,QAEbywB,WAAW,gBACRrpB,EAAMgnB,YAAYgD,GAAG,MAAQ,CAC5B3yB,MARc,IASd4yB,WAAY,IAGhBH,UAAQ,GACN5F,IAAK,OACL9N,MAAO,EACP/e,MAAO,QACPP,OAAQ,qBACRC,QAAS,OACTe,QAAS,YACTqH,SAAU,WAEV7H,SAAS,SACT2yB,WAAY,GAVN,eAWLjqB,EAAMgnB,YAAYgD,GAAG,MAAQ,CAC5BjzB,QAAS,UAZL,4BAcM,SAdN,GAgBRmyB,QAAM,oBACHlpB,EAAMgnB,YAAYgD,GAAG,MAAQ,CAC5B3yB,MAAM,eAAD,OA9BS,IA8BT,OACL8J,WA/Bc,MA4BZ,4BAKQ,QALR,2BAMO,mBANP,8BAOU,mCAPV,GASNioB,YAAU,GACR9qB,YAAa0B,EAAMqK,QAAQ,IADnB,eAEPrK,EAAMgnB,YAAYgD,GAAG,MAAQ,CAC5BjzB,QAAS,SAHH,8BAKM,oBALN,GAOVqkB,QAASpb,EAAMkqB,OAAO9O,QACtBuO,YAAa,CACXtyB,MA9CgB,KAgDlBmuB,QAAS,CACP3oB,SAAU,EACV/E,QAASkI,EAAMqK,QAAQ,GACvBzR,WAAY,WAEdiuB,gBAAiB,CACf/uB,QAAS,mBACTf,QAAS,OACTE,WAAY,SACZ2B,WAAY,UACZ9B,OAAQ,OACRY,aAAc,mBAEhBovB,qBAAsB,CACpB3lB,WAAYnB,EAAMqK,QAAQ,GAC1BwG,KAAM,EACN3P,SAAU,IAEZ6lB,0BAA2B,CACzBjvB,QAAS,OA8PqB,CAAEgZ,WAAW,GAAhCpY,CACb0D,aAPsB,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,OAC1BhC,KAAMxB,EAAMuD,YAAY/B,QAIC,CAAEG,cAA3B0B,CAAyCssB,K,6PChV3C,IAAM9c,GAAelT,YAAW,CAC9BuH,KAAM,CACJ,sBAAuB,CACrB/H,MAAO,WAET,8BAA+B,CAC7B2T,kBAAmB,WAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAhBApT,CAoBlBqT,MA0BH,SAASrB,KACP,OACE,kBAACtH,GAAA,EAAD,CAAYzC,QAAQ,QAAQzI,MAAM,gBAAgByS,MAAM,UACrD,kBACD,kBAAC,IAAD,CAAMzS,MAAM,UAAU4B,GAAG,KAAzB,gBAEQ,KACP,IAAI8Q,MAAOC,cACX,K,IAKDsf,G,YACJ,WAAY9zB,GAAQ,IAAD,8BACjB,4CAAMA,KA0BR2M,SAAW,SAAAvH,GACT,EAAKnC,SAAL,gBAAiBmC,EAAE2Q,OAAOxS,GAAK6B,EAAE2Q,OAAO1K,SA5BvB,EA8BnB+M,aAAe,SAAAf,GAAI,OAAI,SAAA9M,GACrB,EAAKtH,S,4VAAL,IAAmB,EAAKP,MAAxB,gBAAgC2U,EAAO9M,EAAMwL,OAAOge,aA/BnC,EAkCnBC,aAAe,SAAA5uB,GACb,EAAKnC,SAAS,CACZ+S,MAAO,UACPC,SAAU,aArCK,EAyCnBE,SAzCmB,yCAyCP,WAAM/Q,GAAN,gBAAAgc,EAAA,sDACVhc,EAAEC,iBAEF,EAAKpC,SAAS,CAACwM,WAAW,IACpBqI,EAAW,CACf9B,MAAO,EAAKtT,MAAMsT,MAClBC,SAAU,EAAKvT,MAAMuT,SACrBge,SAAU,EAAKvxB,MAAMuxB,UAGdxV,QAAQkK,IAAI,CAAC,EAAK3oB,MAAMk0B,UAAUpc,KAExChV,MAAK,SAAC8T,GACX,EAAK3T,SAAS,CAACwM,WAAW,OAbd,2CAzCO,sDAEjB,EAAK/M,MAAQ,CACXsT,MAAO,GACPC,SAAU,GACVge,UAAU,EACVxkB,WAAW,EACXvJ,OAAQ,IAPO,E,iFAWbnG,KAAKC,MAAMgG,KAAKyO,iBAClB1U,KAAKC,MAAMsF,QAAQC,KAAK,c,uDAGKmP,GAC3BA,EAAU1O,KAAKyO,iBACjB1U,KAAKC,MAAMsF,QAAQC,KAAK,YAGtBmP,EAAUxO,SACZwO,EAAUxO,OAAO6M,QAAU,IAAM2B,EAAUxO,OAAO6M,QAClDhT,KAAKkD,SAAS,CACZiD,OAAQwO,EAAUxO,Y,+BAqCd,IACAA,EAAWnG,KAAK2C,MAAhBwD,OACAjG,EAAYF,KAAKC,MAAjBC,QAER,OACE,kBAAC4W,GAAA,EAAD,CAAW7J,UAAU,OAAO8J,SAAS,MACnC,kBAACC,GAAA,EAAD,MACA,yBAAKlW,UAAWZ,EAAQ+I,OACtB,kBAACgO,GAAA,EAAD,CACErW,eAAe,SACfsW,aAAc,GACdpV,MAAO,4BAEP,yBAAKhB,UAAU,QACb,kBAAC,IAAD,CAAM4C,GAAG,YACP,yBACEvC,IAA8B,YAC9BK,IAAI,GACJf,MAAO,CAAEC,OAAQ,aAMzB,kBAACsM,GAAA,EAAD,CAAYC,UAAU,KAAK1C,QAAQ,MAAnC,4BAIA,0BAAMzJ,UAAWZ,EAAQiX,KAAMC,YAAU,EAAChB,SAAUpW,KAAKoW,UACvD,6BACE,yBAAKtV,UAAU,cAAcqF,EAAO6M,UAGtC,kBAAC,GAAD,CACEzI,QAAQ,WACR5I,OAAO,SACP4V,UAAQ,EACRC,WAAS,EACThU,GAAG,QACH2K,MAAM,QACNmJ,KAAK,QACL1K,SAAU5M,KAAK4M,SACftB,MAAOtL,KAAK2C,MAAMsT,MAClBoB,aAAa,QACbI,WAAS,IAEX,kBAAC,GAAD,CACElN,QAAQ,WACR5I,OAAO,SACP4V,UAAQ,EACRC,WAAS,EACTF,KAAK,WACLnJ,MAAM,WACN/J,KAAK,WACLZ,GAAG,WACH6T,aAAa,mBACbzK,SAAU5M,KAAK4M,SACftB,MAAOtL,KAAK2C,MAAMuT,WAEpB,kBAAC5V,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAACoC,IAAE,GACX,kBAACgxB,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEhpB,MAAM,WACNxJ,MAAM,UACN8K,SAAU5M,KAAKqY,aAAa,YAC5B2b,QAASh0B,KAAK2C,MAAMuxB,WAGxB/lB,MAAM,gCAGV,kBAAC4G,GAAA,EAAD,CAAQxK,QAAQ,YAAYxE,QAAS/F,KAAKi0B,cAA1C,2BAKF,kBAAClf,GAAA,EAAD,CACE3Q,KAAK,SACLoT,WAAS,EACTjN,QAAQ,YACRzI,MAAM,UACNhB,UAAWZ,EAAQyX,QAElB3X,KAAK2C,MAAM+M,UAAY,kBAAC8J,GAAA,EAAD,CAAkB5J,KAAM,GAAI9N,MAAM,OAAOrB,MAAO,CAAEkB,OAAQ,KAAW,4BAK/F,kBAACrB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAACoC,IAAE,GACX,kBAAC,IAAD,CAAMM,GAAG,IAAI6G,QAAQ,WAIvB,kBAACjK,EAAA,EAAD,CAAMU,MAAI,GACR,kBAAC,IAAD,CAAM0C,GAAG,UAAU6G,QAAQ,SACxB,2FAKP,kBAACjK,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMU,MAAI,EAACoC,IAAE,GACX,kBAAC,IAAD,CAAMM,GAAG,IAAI6G,QAAQ,WAGvB,kBAACjK,EAAA,EAAD,CAAMU,MAAI,GACV,kBAACgM,GAAA,EAAD,CAAYzC,QAAQ,aAElB,uBACE5E,KAAK,kHAELqQ,OAAO,SACPue,IAAI,sBASJ9zB,MAAO,CAAEgD,eAAgB,OAAQ3B,MAAO,sBAb1C,+DAsBR,kBAACmV,GAAA,EAAD,CAAKW,GAAI,GACP,kBAAC,GAAD,Y,GAnMc3N,IAAM5H,WA6MfC,eAlPA,CACb,UAAW,CACTuV,KAAM,CACJjR,gBAAiB,UAGrBqC,MAAO,CACL1H,UAAW,GACXZ,QAAS,OACToN,cAAe,SACflN,WAAY,UAEdiX,OAAQ,CACNnW,OAAQ,EACRiF,gBAAiB,WAEnBuQ,KAAM,CACJlW,MAAO,OACPM,UAAW,GAEboW,OAAQ,CACNhW,OAAQ,aA6NGW,CACb0D,aALsB,SAAArD,GAAK,MAAK,CAChCsD,KAAMtD,EAAMuD,YAAYD,KACxBE,OAAQxD,EAAMuD,YAAYC,UAGD,CAAEguB,UpExQJ,SAAApc,GAAQ,OAAI,SAAAxT,GACnC,OAAO1B,IACJgC,KAAK,oCAAqCkT,GAC1ChV,MAAK,SAAAC,GAAO,IAIHc,EAAUd,EAAIC,KAAda,MACJiU,EAASmc,WACX1vB,aAAaga,QAAQ,YAAa1a,GAClCU,aAAaga,QAAQ,QAAS1a,GAC9BD,EAAaC,IAIf,IAAM0wB,EAAUC,IAAW3wB,GAC3B1D,QAAQC,IAAIm0B,GAEZjwB,EAASL,EAAeswB,OAEzB1vB,OAAM,SAAAC,GAAG,OACRR,EAAS,CACPH,KC1CkB,aD2ClBC,QAASU,EAAIyN,SAASvP,aoEiP5B+C,CAAwC+tB,KCrQ3B/tB,gBAJS,SAACrD,GACvB,MAAQ,CACRsD,KAAMtD,EAAMuD,YAAYD,QAEXD,EAnBM,SAAC,GAAD,IAAc3D,EAAd,EAAG4K,UAAsBhH,EAAzB,EAAyBA,KAASyuB,EAAlC,4CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAA10B,GAAK,OACc,IAAzBgG,EAAKyO,gBACH,kBAACrS,EAAcpC,GAEf,kBAAC,IAAD,CAAUyD,GAAG,kBCWrB,GAAIc,aAAaowB,UAAW,CAE1B,IAAM9wB,GAAQU,aAAaowB,UAC3B/wB,EAAaC,IACb,IAAM0wB,GAAUC,IAAW3wB,IAE3B+jB,GAAMtjB,SAASL,EAAeswB,KAE9B,IAAMK,GAAcrgB,KAAKsgB,MAAQ,IAC7BN,GAAQO,IAAMF,KAEhBhN,GAAMtjB,SAASD,KAEf2hB,OAAOC,SAASvgB,KAAO,WAyCZqvB,OArCf,WACE,OACE,kBAAC,IAAD,CAAUnN,MAAOA,IACf,kBAAC,IAAD,CAEEA,MAAOA,IAEP,kBAAC,IAAD,KACE,yBAAK/mB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6uB,KAAK,IAAIgE,OAAK,EAAC1mB,UAAWgoB,KACjC,kBAAC,IAAD,CAAOtF,KAAK,QAAQgE,OAAK,EAAC1mB,UAAWgoB,KACrC,kBAAC,IAAD,CAAOtF,KAAK,SAASgE,OAAK,EAAC1mB,UAAW8mB,KACtC,kBAAC,IAAD,CAAOpE,KAAK,UAAUgE,OAAK,EAAC1mB,UAAW2I,KACvC,kBAAC,IAAD,CAAO+Z,KAAK,YAAYgE,OAAK,EAAC1mB,UAAW0N,KACzC,kBAAC,IAAD,CAAOgV,KAAK,cAAc1iB,UAAW+K,KACrC,kBAAC,GAAD,CAAc2X,KAAK,WAAWgE,OAAK,EAAC1mB,UAAW7G,IAC/C,kBAAC,GAAD,CACEupB,KAAK,2BACL1iB,UAAWpF,IAEb,kBAAC,GAAD,CACE8nB,KAAK,qBACL1iB,UAAW8C,KAEb,kBAAC,IAAD,CAAO4f,KAAK,kBAAkBgE,OAAK,EAAC1mB,UAAWioB,KAC/C,kBAAC,GAAD,CAAcvF,KAAK,SAAS1iB,UAAW0c,KACvC,kBAAC,GAAD,CAAcgG,KAAK,WAAW1iB,UAAWqlB,KACzC,kBAAC,IAAD,CAAOqC,OAAQ,kBAAM,4DCvDf/pB,QACW,cAA7Bqb,OAAOC,SAASiP,UAEe,UAA7BlP,OAAOC,SAASiP,UAEhBlP,OAAOC,SAASiP,SAASptB,MACvB,2D,QCPFqtB,EAAY,CAACC,IAAK,+DAGtBC,IAASX,OAAO,kBAAC,GAAD,MAASY,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5yB,MAAK,SAAA6yB,GACjCA,EAAaC,iB,0CEnInBh2B,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,yC,gECA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,yKCA3CD,EAAOC,QAAU,IAA0B,kC,0CCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,4C,0CCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.fb288ebe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.316d47a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/padlock-unlock.f593928a.svg\";","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport './hover.css';\r\nconst styles = {\r\n courseItem:{\r\n     borderRadius:'4px',\r\n     boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n     overflow:'hidden',\r\n     background: '#EEEEEE',\r\n     cursor:'pointer',\r\n     \r\n },\r\n};\r\nclass CourseItem extends Component {\r\n  render() {\r\n    const { classes,course } = this.props;\r\n    console.log(course)\r\n    return (\r\n      <Grid\r\n      container\r\n      direction=\"column\"\r\n      style={{height:\"100%\",display:'flex',justifyContent:'center',alignItems:'center'}}\r\n      className={`${classes.courseItem} hvr-bounce-in`}\r\n    >\r\n      <Grid\r\n        item\r\n        style={{  width: \"100%\", overflow: \"hidden\",display:'flex',justifyContent:'center',alignItems:'center' }}\r\n      >\r\n        <img\r\n          src={course.background_image}\r\n          style={{ width: \"50px\",objectFit:\"cover\", height:'50px',borderRadius:'50%',marginTop:\"10px\"}}\r\n          alt=\"\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        justify=\"center\"\r\n        style={{ padding: \"10px 0\" }}\r\n      >\r\n        <Grid item>\r\n          <div\r\n            style={{\r\n              margin: \"5px 0\",\r\n              textAlign: \"center\",\r\n              textTransform: \"uppercase\",\r\n              color: \"#595959\",\r\n              fontWeight: \"bold\",\r\n              fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n            }}\r\n          >\r\n            {course.course_name}\r\n          </div>\r\n          <div\r\n            style={{\r\n              margin: \"5px 0\",\r\n              textAlign: \"center\",\r\n              color: \"#909090\",\r\n              fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n            }}\r\n          >\r\n            Task đã làm: {course.task_solved.tasks_complete}/{course.task_solved.task_count}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CourseItem from './CourseItem';\r\nimport \"./coursebody.css\"\r\nconst styles = {\r\n  CourseContainer: {\r\n    paddingTop: \"100px\",\r\n    background: \"#DDDDDD\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  courseItem:{\r\n    borderRadius:'4px',\r\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n    overflow:'hidden',\r\n    background: '#EEEEEE',\r\n    cursor:'pointer',\r\n    \r\n},\r\n};\r\nclass CourseBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      courses: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(`https://hocodevn.com/api/v1/courses`).then(res => {\r\n      const courses = res.data;\r\n      this.setState({ courses });\r\n    });\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {courses} = this.state\r\n    return (\r\n      <Grid container className={classes.CourseContainer} justify=\"center\">\r\n        <Grid item xs={12} sm={12} style={{ padding: \"0px 60px\" }}>\r\n          <div className = \"gallery\" >\r\n          {courses.map((course)=><Link className = \"item\"key={course.id} style={{textDecoration:'none'}}to={`/courses/${course.id}/tasks`}><CourseItem course={course}/></Link>)}\r\n            \r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseBody);\r\n","import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] =`Bearer ${token}`;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post(\"https://hocodevn.com/api/v1/signup\", userData)\r\n    .then(res => history.push(\"/login\"))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  return axios\r\n    .post(\"https://hocodevn.com/api/v1/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      \r\n      // Set token to localStorage\r\n      const { token } = res.data;\r\n      if (userData.remember) {\r\n        localStorage.setItem(\"AuthToken\", token);\r\n        localStorage.setItem(\"token\", token);\r\n        setAuthToken(token); // set token ở header\r\n        // get user\r\n      }\r\n\r\n      const decoded = jwt_decode(token);\r\n      console.log(decoded)\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = user => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"AuthToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const ADD_CODEPOINT = \"ADD_CODEPOINT\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const CHANGE_USER_INFO = \"CHANGE_USER_INFO\";\r\nexport const SET_UNDEFINED_NEXT_MINITASK = \"SET_UNDEFINED_NEXT_MINITASK\";\r\n\r\nexport const CHANGE_LOADING = \"CHANGE_LOADING\";\r\nexport const UPDATE_LOCATION = \"UPDATE_LOCATION\";\r\n","import { ADD_CODEPOINT, GET_USER, CHANGE_USER_INFO,CHANGE_LOADING,SET_UNDEFINED_NEXT_MINITASK } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const submitUpdateMinitask = (minitask_id, task_id) => dispatch => {\r\n  console.log({minitask_id: minitask_id,\r\n    task_id: task_id})\r\n  axios\r\n    .post(\"https://hocodevn.com/api/v1/auth/updateusercourse\", {\r\n      minitask_id: minitask_id,\r\n      task_id: task_id\r\n    })\r\n    .then(res => {\r\n      console.log(res.data)\r\n      dispatch({\r\n        type: ADD_CODEPOINT,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const changeUserInfo = (newUser, userId) => dispatch => {\r\n  console.log(newUser);\r\n  dispatch({\r\n    type: CHANGE_LOADING,\r\n    payload: true\r\n  });\r\n  axios\r\n    .post(\"https://hocodevn.com/auth/userinfoupdate\", {\r\n      id: userId,\r\n      avatar: newUser.avatar,\r\n      password: newUser.password,\r\n      firstname: newUser.firstName,\r\n      lastname: newUser.lastName,\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: CHANGE_USER_INFO,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const getUser = () => dispatch => {\r\n  axios\r\n    .get(\"https://hocodevn.com/auth/userinfo\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const setUndefinedNextMinitask = () => dispatch => {\r\n  dispatch({\r\n    type: SET_UNDEFINED_NEXT_MINITASK,\r\n    payload: undefined\r\n  });\r\n};","import React, { Component } from \"react\";\r\nimport \"./courseHeader.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nclass CourseHeader extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.onLogout = this.onLogout.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    this.props.getUser();\r\n    \r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\")\r\n  };\r\n  render() {\r\n    return (\r\n      <nav className=\"course-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <a href=\"/\">\r\n            <img\r\n              src={require(\"./logo.png\")}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"left-menu\">\r\n            <a href=\"/dsa\">Thông tin cá nhân</a>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div className=\"code-point\">{this.props.user.codepoint}</div>\r\n            <div className=\"nav-name\">\r\n              <div className=\"nameMenu\">{this.props.user.firstname}</div>\r\n              <ul className=\"nameSubmenu\">\r\n                  <li><a href=\"giang\">Thông tin cá nhân</a></li>\r\n                  <li><a href=\"/\" onClick={this.onLogout}>Đăng xuất</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"desktop-hide\"> {/*hide when screen is destop */}\r\n                <a href=\"/dsa\" onClick={this.onLogout}>Đăng xuất</a>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser,getUser }\r\n)(CourseHeader) ;\r\n\r\n","import React, { Component } from 'react';\r\nimport CourseBody from './body/CourseBody1';\r\nimport CourseHeader from './header/CourseHeader';\r\nclass CoursePage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CourseHeader history={this.props.history}/>\r\n                <CourseBody/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoursePage;","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {  Link } from \"react-router-dom\";\r\nimport \"./taskItem.css\";\r\nconst styles = {\r\n  TaskItem: {\r\n    borderRadius: \"4px\",\r\n    overflow: \"hidden\",\r\n    marginBottom:'50px'\r\n  },\r\n  MiniTaskItem: {\r\n    margin: \"5px\",\r\n    backgroundColor: \"white\",\r\n    padding: \"5px 10px\",\r\n    paddingTop:'10px',\r\n    borderRadius: \"9px\",\r\n    boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n  }\r\n};\r\nclass TaskItem extends Component {\r\n  renderMiniItem(minitask) {\r\n    //miniItemStatus\r\n   \r\n    if (minitask.status === \"hoanthanh\" ) {\r\n      return (\r\n        <Link\r\n          to={`/tasks/${minitask.id}`}\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/hoanthanh.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n        </Link>\r\n      );\r\n    } else if (minitask.status === \"chuahoanthanh\" && minitask.vitri===true) {\r\n      return (\r\n        <a\r\n          href=\"giang\"\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/user.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n        </a>\r\n      );\r\n    }\r\n    else if (minitask.status === \"chuahoanthanh\" && minitask.vitri===false) {\r\n      return (\r\n        <Link\r\n        to={`/tasks/${minitask.id}`}\r\n        style={{\r\n          display: \"flex\",\r\n          textDecoration: \"none\",\r\n          color: \"#595959\",\r\n          fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n        }}\r\n      >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{width:'1em'}}><img style={{width:'100%',backgroundColor:'#F5F5F5',borderRadius:'50%'}} src={require('../icons/chuahoanthanh.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n          </Link>\r\n      );\r\n    }\r\n    else if (minitask.status === \"yeucaumokhoa\") {\r\n      return (\r\n        <div\r\n         \r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div className=\"unlock\" style={{ display:'flex'}}>\r\n          <div style={{width:'1em'}}><img style={{width:'100%'}} src={require('../icons/padlock-unlock.svg')} alt=\"Kiwi standing on oval\"/></div>\r\n          <div className=\"hidden\" style={{display:'none'}}>{minitask.point_unlock}</div> \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { classes,task } = this.props;\r\n    //console.log(task)\r\n    return (\r\n      <React.Fragment>\r\n        {/*<div  \r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            color: \"#595959\",\r\n            fontWeight: \"bold\",\r\n            fontFamily: `'Yanone Kaffeesatz', sans-serif`,\r\n            marginBottom: \"50px\",\r\n            fontSize:'2em'\r\n          }}\r\n        >\r\n          Certificate  \r\n        </div>*/}\r\n        <Grid container direction=\"column\" className={`${classes.TaskItem}`}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <Grid\r\n              xs={6}\r\n              md={6}\r\n              item\r\n              style={{\r\n                padding: \"8px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"9px\",\r\n                marginBottom: \"-20px\",\r\n                zIndex: \"1\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                whiteSpace: \" nowrap\",\r\n                textAlign: \"center\",\r\n                width:'200px',\r\n                fontFamily:`'Yanone Kaffeesatz', sans-serif`,\r\n                boxShadow:\"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n              }}\r\n            >\r\n              {task.task_name}{/* tên task */}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{ height: \"200px\", width: \"100%\", overflow: \"hidden\" }}\r\n          > {/* hình task*/}\r\n            <img\r\n              src={task.background_image}\r\n              style={{ height: \"100%\", width: \"100%\",borderRadius: \"4px 4px 0 0\" }}\r\n              alt=\"\"\r\n            />\r\n          </Grid> \r\n          <Grid item container direction=\"column\" style={{ padding: \"10px 0\",background:'#EEEEEE',   boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\" }}> {/* danh sách mini task */}\r\n          {task.minitasks.map((minitask)=><Grid item className={`${classes.MiniTaskItem}`} key={minitask.id} > {this.renderMiniItem(minitask)}</Grid>)}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport axios from \"axios\";\r\nconst styles = {\r\n  TasksContainer: {\r\n    paddingTop: 100,\r\n    background: \"#DDDDDD\",\r\n    minHeight: \"100vh\"\r\n  }\r\n};\r\nclass TaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(`https://hocodevn.com/api/v1/courses/${this.props.courseId}/tasks`)\r\n      .then(res => {\r\n        const tasks = res.data;\r\n        this.setState({ tasks });\r\n      });\r\n\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { tasks } = this.state;\r\n    return (\r\n      <Grid container className={classes.TasksContainer} justify=\"center\">\r\n        <Grid item xs={12} sm={6} style={{ padding: \"0px 10px\" }}>\r\n          {tasks.map(task => (\r\n            <TaskItem key={task.id} task={task} />\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskBody);\r\n","import React, { Component } from \"react\";\r\nimport \"./taskHeader.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nclass TaskHeader extends Component {\r\n  componentDidMount(){\r\n    this.props.getUser();\r\n    \r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\")\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"task-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <a href=\"/\">\r\n            <img\r\n              src={require(\"./logo.png\")}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </a>\r\n        </div>\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"left-menu\">\r\n            <a href=\"/dsa\">Thông tin cá nhân</a>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div className=\"code-point\">{this.props.user.codepoint}</div>\r\n            <div className=\"nav-name\">\r\n              <div className=\"nameMenu\">{this.props.user.firstname}</div>\r\n              <ul className=\"nameSubmenu\">\r\n                  <li><a href=\"giang\">Thông tin cá nhân</a></li>\r\n                  <li><a href=\"giang\" onClick={this.onLogout}>Đăng xuất</a></li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"desktop-hide\"> {/*hide when screen is destop */}\r\n                <a href=\"/dsa\" onClick={this.onLogout}>Đăng xuất</a>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser,getUser }\r\n)(TaskHeader) ;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport TaskBody from './body/TaskBody';\r\nimport TaskHeader from './header/TaskHeader';\r\nclass TaskPage extends Component {\r\n   \r\n    render() {\r\n        const { match: { params } } = this.props;\r\n        //console.log(params);\r\n        return (\r\n            <React.Fragment>\r\n                <TaskHeader history={this.props.history} />\r\n                <TaskBody courseId={params.courseId}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskPage;","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport \"./minitaskdesc.css\";\r\nconst styles = {\r\n  DescContainer: {\r\n    background: \"#ffffff\",\r\n    position: \"relative\",\r\n    //overflowY: \"scroll\",\r\n    height: \"100%\",\r\n    overflow:\"auto\",\r\n    //overflowX: \"hidden\",\r\n    borderRadius: \"4px\",\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\",\r\n    padding: \"10px 10px\"\r\n  }\r\n};\r\nclass MiniTaskDesc extends Component {\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.DescContainer}>\r\n        <div style={{fontFamily:` \"Share Tech Mono\", monospace `,display:'flex',color:'#44BFA3'}}>\r\n        <div style={{flexGrow:1,marginRight:10}}>Độ khó: {this.props.level}</div>\r\n          <div style={{marginRight:'10px'}}>{this.props.code_point}</div>\r\n          \r\n        </div>\r\n        <div className=\"md_desc\" style={{ padding: \"16px\" }}> {/* minitask description */}\r\n          <ReactMarkdown \r\n            escapeHtml={false}\r\n            source={this.props.mini_task_desc} \r\n            renderers={{\r\n              linkReference: reference => {\r\n                if (!reference.href) {\r\n                 \r\n                  return `[${reference.children[0].props.children}]`;\r\n                }\r\n                return <a href={reference.$ref}>{reference.children}</a>;\r\n              },\r\n              heading: props => {\r\n                return <p className=\"md_heading\">{props.children}</p>;\r\n              },\r\n              inlineCode: props => {\r\n                return <code className=\"md_code\">{props.children}</code>;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MiniTaskDesc);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n  }\r\n})(props => (\r\n  <Menu\r\n    style={{paddingLeft:'5px',paddingRight:\"5px\"}}\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\"\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles(theme => ({\r\n  root: {\r\n    minHeight:\"unset\",\r\n    \"&:focus\": {\r\n     // backgroundColor: \"red\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\n\r\n function CustomizedMenus(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MoreHorizIcon\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        style={{color:\"#282828\"}}\r\n      />\r\n\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem onClick={props.logoutUser}>\r\n            <ExitToAppIcon style={{fontSize:16}}/> \r\n            <p style={{fontSize:12,marginLeft:\"3px\"}}>Đăng xuất</p>\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n            <AccountBoxIcon style={{fontSize:16}}/> \r\n            <Link to=\"/profile/account\" style={{textDecoration: \"none\"}}>\r\n            <p style={{ fontSize: 12, marginLeft: \"3px\" }}>Thông tin cá nhân</p>\r\n          </Link>\r\n        </StyledMenuItem>\r\n\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(CustomizedMenus) ;","import React, { Component } from \"react\";\r\nimport \"./minitaskHeader.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nclass MiniTaskHeader extends Component {\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  onBack = e => {\r\n    e.preventDefault();\r\n    const { history } = this.props;\r\n    history.goBack();\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.history);\r\n    this.props.getUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"minitask-header\">\r\n        <input type=\"checkbox\" id=\"nav\" className=\"hidden\" />\r\n        <label htmlFor=\"nav\" className=\"nav-btn\">\r\n          <i />\r\n          <i />\r\n          <i />\r\n        </label>\r\n        <div className=\"logo\">\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n              alt=\"\"\r\n              style={{ height: \"40px\" }}\r\n            ></img>\r\n          </Link>\r\n        </div>\r\n        <div className=\"minitaskName_mobi\">{this.props.minitaskName}</div>{\" \"}\r\n        {/*minitask name */}\r\n        <div className=\"nav-wrapper\">\r\n          <div className=\"desktop-hide1\">\r\n            <div className=\"logo1\">\r\n              <Link to=\"/profile\">\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                  alt=\"\"\r\n                  style={{ height: \"40px\" }}\r\n                ></img>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"left-menu\"\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <div\r\n              onClick={this.onBack}\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              <KeyboardBackspaceIcon style={{ fontSize: 16 }} />\r\n              <p style={{ fontSize: 14, marginLeft: \"3px\" }}>Back</p>\r\n            </div>\r\n            <div\r\n              className=\"miniTask_name\"\r\n              style={{ display: \"flex\", justifyContent: \"center\", flexGrow: 1 }}\r\n            >\r\n              <div>{this.props.minitaskName}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-menu\">\r\n            <div\r\n              className=\"code-point\"\r\n              style={{ fontSize: 14, margin: \"0px 4px\", color: \"#4978cc\" }}\r\n            >\r\n              Số Đậu: {this.props.user.codepoint}\r\n            </div>\r\n            <div className=\"nav-name\" style={{ fontSize: 14 }}>\r\n              {this.props.user.firstname}\r\n            </div>\r\n\r\n            <div className=\"nav_usermenu \">\r\n              <UserMenu />\r\n            </div>\r\n            <div className=\"desktop-hide\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                <PersonIcon style={{ fontSize: 16 }} />\r\n                <Link to=\"/profile\"  style={{ fontSize: 14, marginLeft: \"3px\",textDecoration:\"none\",    fontFamily:' Nunito Sans, sans-serif' }} >Trang cá nhân</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"desktop-hide\">\r\n              <div\r\n                onClick={this.onBack}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\"\r\n                }}\r\n              >\r\n                <ExitToAppIcon style={{ fontSize: 16 }} />\r\n                <p\r\n                  style={{ fontSize: 14, marginLeft: \"3px\" }}\r\n                  onClick={this.onLogout}\r\n                >\r\n                  Đăng xuất\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser, getUser })(\r\n  MiniTaskHeader\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"./codeeditor.css\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/darcula.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\nimport \"codemirror/mode/clike/clike.js\";\r\n//import \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\";\r\nimport \"codemirror/addon/edit/closetag.js\";\r\nimport \"codemirror/addon/edit/matchbrackets.js\";\r\nimport \"codemirror/addon/hint/show-hint.js\";\r\n//import \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\";\r\nimport \"codemirror/addon/hint/anyword-hint.js\";\r\n\r\nclass CodeEditor extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <CodeMirror\r\n      className=\"CodeMirrorCustom\"\r\n        value={this.props.userCode}\r\n        options={{\r\n          mode: \"text/x-java\", \r\n          theme: \"darcula\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck: true,\r\n          autocorrect: true,\r\n          extraKeys: { \"Ctrl-Space\": \"autocomplete\" }\r\n        }}\r\n        \r\n        MarkText={{\r\n          from: { line: 0, ch: 1 },\r\n          to: { line: 3, ch: 1 },\r\n          css: \"font-size:5px\"\r\n        }}\r\n        \r\n        onBeforeChange={(editor, data, value) => {\r\n          this.props.updateUserCode(value); // update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./resultPanel.css\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <div style={{ padding: \"10px 20px\", background: \"#f5f5f5\" }}>\r\n        {children}\r\n      </div>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`,\r\n    \r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n    \r\n      style={{ minHeight: \"100%\", minWidth: \"200px\" }}\r\n      component=\"a\"\r\n      onClick={event => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function ResultPanel(props) {\r\n  //result panel is called in minitask page\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(1);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  const unit_tests = props.unit_tests || [];\r\n  const result = props.result;\r\n  console.log(result)\r\n  function renderResultPanel(result) {\r\n    if (result.stdout !== undefined ) {\r\n      if (result.error !== \"\") {\r\n        return (\r\n          <React.Fragment>\r\n            <div\r\n              style={{\r\n                color: \"#ff1a1a\",\r\n                fontFamily: ` 'Share Tech Mono', monospace`,\r\n                fontSize: 14\r\n              }}\r\n            >\r\n              {result.error}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      } else {\r\n        if (result.stdout.WASSUCCESSFUL === \"true\") {\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  color: \"#19b280\",\r\n                  fontFamily: ` 'Share Tech Mono', monospace`,\r\n                  fontSize: 14\r\n                }}\r\n              >\r\n                <div> Thời gian test: {result.stdout.COMPLETEDIN}</div>\r\n                <div>Kết quả: Passed</div>\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        } else if (result.stdout.WASSUCCESSFUL === \"false\") {\r\n          return (\r\n            <React.Fragment>\r\n              <div\r\n                style={{\r\n                  color: \"#ff1a1a\",\r\n                  fontFamily: ` 'Share Tech Mono', monospace`,\r\n                  fontSize: 14\r\n                }}\r\n              >\r\n                <div>\r\n                  Số lượng test đúng:{\" \"}\r\n                  {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                  {result.stdout.RUNCOUNT}\r\n                </div>\r\n                <div>Kết quả: Failed</div>\r\n                {result.stdout.GETALLFAILURE.map((testfail, index) => {\r\n                  return <div key={index}>{testfail.DETAIL}</div>;\r\n                })}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    else if (result.errorRuntime !== undefined) {\r\n      return (\r\n        <React.Fragment>\r\n          <div\r\n            style={{\r\n              color: \"#ff1a1a\",\r\n              fontFamily: ` 'Share Tech Mono', monospace`,\r\n              fontSize: 14\r\n            }}\r\n          >\r\n           Code chạy quá lâu, vui lòng thử lại. \r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n     else {\r\n      return <div>chưa thực thi</div>;\r\n    }\r\n  }\r\n  function renderTestsPanel(result) {\r\n    return (\r\n      <React.Fragment>\r\n        {unit_tests.map((unit_test, index) => {\r\n          // unit_tests\r\n          return (\r\n            <ExpansionPanel key={index}>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                  <div\r\n                    style={{\r\n                      flexGrow: 1,\r\n                      fontFamily: ` \"Share Tech Mono\", monospace `\r\n                    }}\r\n                  >\r\n                    Test {index + 1}\r\n                  </div>\r\n                </div>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <div>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Input:{\" \"}\r\n                    </Grid>\r\n                    <Grid item style={{ marginLeft: 10 }}>\r\n                      {unit_test.inputs.map((input, index) => (\r\n                        <div\r\n                          key={index}\r\n                          style={{\r\n                            fontFamily: ` \"Share Tech Mono\", monospace `\r\n                          }}\r\n                        >\r\n                          param{index + 1}: {input.value}\r\n                        </div>\r\n                      ))}{\" \"}\r\n                      {/*dùng key ở đây nguy hiểm */}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Output mong đợi: {unit_test.expected_output}\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  /*function renderTestsPanel1(result){ // cái này chưa sửa, tạm thời cứ render ra kết quả ở result panel, test panel cứ hiển thị danh sách test\r\n     if (result.stdout !== undefined) { // if result is not {},  in test panel show description of tests after run code\r\n      return (\r\n        <React.Fragment>\r\n          <div>1/2 sample tests passed.</div>\r\n          {unit_tests.map((unit_test, index) => {\r\n            // unit_tests\r\n            return (\r\n              <ExpansionPanel key={index}>\r\n                <ExpansionPanelSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                    <div style={{ flexGrow: 1 }}>Test {index + 1}</div>\r\n                    <div style={{ width: \"1em\" }}>\r\n                      <img\r\n                        style={{ width: \"100%\" }}\r\n                        src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                        alt=\"Kiwi standing on oval\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                  <div>\r\n                    <Grid container>\r\n                      <Grid item>Input: </Grid>\r\n                      <Grid item style={{ marginLeft: 10 }}>\r\n                        {unit_test.inputs.map((input, index) => (\r\n                          <div key={index}>\r\n                            param{index + 1}: {input.value}\r\n                          </div>\r\n                        ))}{\" \"}\r\n                        {//dùng key ở đây nguy hiểm \r\n                        }\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                      <Grid item>Output: </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                      <Grid item>\r\n                        Output mong đợi: {unit_test.expected_output}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </div>\r\n                </ExpansionPanelDetails>\r\n              </ExpansionPanel>\r\n            );\r\n          })}\r\n        </React.Fragment>\r\n      );\r\n    } \r\n  } */\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      <Tabs\r\n        style={{ minHeight: \"30px\" }}\r\n        variant=\"fullWidth\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"nav tabs example\"\r\n      >\r\n        <LinkTab label=\"Danh sách test\" href=\"/drafts\" {...a11yProps(0)}  />\r\n        <LinkTab label=\"Kết quả\" href=\"/trash\" {...a11yProps(1)} />\r\n      </Tabs>\r\n      <div\r\n        className=\"scroll_test\"\r\n        style={{\r\n          position: \"relative\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          overflowY: \"auto\",\r\n          overflowX: \"hidden\",\r\n          background: \"#f5f5f5\"\r\n        }}\r\n      >\r\n        <TabPanel value={value} index={0}>\r\n          {renderTestsPanel(result)}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          {renderResultPanel(result)}\r\n        </TabPanel>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport \"./resultPanel.css\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <div style={{ padding: \"10px 20px\", background: \"#f5f5f5\" }}>\r\n        {children}\r\n      </div>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n    style={{ minHeight: \"100%\", minWidth: \"200px\" }}\r\n    component=\"a\"\r\n      onClick={event => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nexport default function TestsPanel(props) {\r\n  //result panel is called in minitask page\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0); // if have result, direct to result panel tab\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  const unit_tests = props.unit_tests || [];\r\n\r\n  function renderTestsPanel(unit_tests) {\r\n    return (\r\n      <React.Fragment>\r\n        {unit_tests.map((unit_test, index) => {\r\n          // unit_tests\r\n          return (\r\n            <ExpansionPanel key={index}>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                  <div\r\n                    style={{\r\n                      flexGrow: 1,\r\n                      fontFamily: ` \"Share Tech Mono\", monospace `\r\n                    }}\r\n                  >\r\n                    Test {index + 1}\r\n                  </div>\r\n                </div>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <div>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Input:{\" \"}\r\n                    </Grid>\r\n                    <Grid item style={{ marginLeft: 10 }}>\r\n                      {unit_test.inputs.map((input, index) => (\r\n                        <div\r\n                          key={index}\r\n                          style={{\r\n                            fontFamily: ` \"Share Tech Mono\", monospace `\r\n                          }}\r\n                        >\r\n                          > param{index + 1}: {input.value}\r\n                        </div>\r\n                      ))}{\" \"}\r\n                      {/*dùng key ở đây nguy hiểm */}\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container>\r\n                    <Grid\r\n                      item\r\n                      style={{ fontFamily: ` \"Share Tech Mono\", monospace ` }}\r\n                    >\r\n                      Output mong đợi: {unit_test.expected_output}\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n      }}\r\n    >\r\n      {props.isLoading === true ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <div>\r\n            <div className=\"sweet-loading\">\r\n              <HashLoader\r\n              \r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={props.isLoading}\r\n              />\r\n            </div>{\" \"}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Tabs\r\n            style={{ minHeight: \"30px\" }}\r\n            variant=\"fullWidth\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"nav tabs example\"\r\n          >\r\n            <LinkTab label=\"Danh sách test\" href=\"/drafts\" {...a11yProps(0)} />\r\n          </Tabs>\r\n          <div\r\n            className=\"scroll_test\"\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              overflowY: \"auto\",\r\n              overflowX: \"hidden\",\r\n              background: \"#f5f5f5\"\r\n            }}\r\n          >\r\n            <TabPanel value={value} index={0}>\r\n              {renderTestsPanel(unit_tests)}\r\n            </TabPanel>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Split from \"react-split\";\r\nimport MiniTaskDesc from \"./body/MiniTaskDesc\";\r\nimport MiniTaskHeader from \"./header/MiniTaskHeader\";\r\nimport CodeEditor from \"./body/CodeEditor\";\r\nimport ResultPanel from \"./body/ResultPanel\";\r\nimport TestsPanel from \"./body/TestsPanel\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport \"./minitask.css\";\r\n//import MediaQuery from \"react-responsive\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport js_beautify from \"js-beautify\";\r\n\r\nimport {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n} from \"../../js/actions/userAction\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nclass MiniTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minitask: {},\r\n      result: {},\r\n      userCode: \"\",\r\n      isLoading: false,\r\n      isLoadingComponent: true,\r\n      open: false\r\n    };\r\n\r\n    this.executeCode = this.executeCode.bind(this);\r\n    this.submitCode = this.submitCode.bind(this);\r\n    this.updateUserCode = this.updateUserCode.bind(this);\r\n    this.resetCode = this.resetCode.bind(this);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setUndefinedNextMinitask();\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    axios\r\n      .get(`https://hocodevn.com/api/v1/minitasks/${params.minitaskId}`)\r\n      .then(res => {\r\n        const minitask = res.data;\r\n        this.setState((state, props) => ({\r\n          minitask: minitask,\r\n          isLoadingComponent: false\r\n        }));\r\n        this.setState((state, props) => ({\r\n          minitask: minitask\r\n        }));\r\n        // setTimeout(() => {\r\n        //   console.log(this.state.minitask);\r\n        // }, 0);\r\n        /* if(minitask.user_code !== ''){ // if user have ever code in this minitassk, load user code\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.user_code\r\n        }));\r\n      }\r\n      else{ \r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      } */\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      });\r\n\r\n    // setTimeout(()=>{console.log(this.state.minitask.mini_task_desc)},2000)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.minitaskId !== this.props.match.params.minitaskId\r\n    ) {\r\n      this.props.setUndefinedNextMinitask();\r\n      console.log(\"next \");\r\n      this.setState((state, props) => ({\r\n        result: {}\r\n      }));\r\n      axios\r\n        .get(\r\n          `https://hocodevn.com/api/v1/minitasks/${this.props.match.params.minitaskId}`\r\n        )\r\n        .then(res => {\r\n          const minitask = res.data;\r\n          this.setState((state, props) => ({\r\n            minitask: minitask,\r\n            isLoadingComponent: false\r\n          }));\r\n          this.setState((state, props) => ({\r\n            minitask: minitask\r\n          }));\r\n\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n        });\r\n      // do something\r\n    }\r\n  }\r\n  updateUserCode(value) {\r\n    // is props of <codeEditor/> to update usercode wwhen edit in editor\r\n    this.setState({ userCode: value });\r\n  }\r\n\r\n  beautifyCode(value) {\r\n    var formatCode = js_beautify(value, { max_preserve_newlines: 2 });\r\n    // console.log(formatCode);\r\n\r\n    this.setState((state, props) => ({\r\n      userCode: formatCode\r\n    }));\r\n    this.handleClickSnack();\r\n  }\r\n\r\n  handleClickSnack = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleCloseSnack = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  resetCode() {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success comfirmFesetCodeBtn\",\r\n        cancelButton: \"btn btn-danger cancelCodeBtn\"\r\n      },\r\n      buttonsStyling: false\r\n    });\r\n\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: \"Bạn có chắc chắn muốn xóa code đã lưu?\",\r\n        text: \"Bạn sẽ không thể hoàn tác!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Xóa\",\r\n        cancelButtonText: \"Hủy!\",\r\n        reverseButtons: true\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n          swalWithBootstrapButtons.fire(\"Đã reset!\", \"\", \"success\");\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire(\"Đã hủy\", \"\", \"error\");\r\n        }\r\n      });\r\n    const { minitask } = this.state;\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n\r\n    if (minitask.id !== undefined) {\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n            }, s.${minitask.name_func}(${inputsFormat}),0);\\n  }\\n`;\r\n          } else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n            }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      } else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          } else if (minitask.output_type_func === \"String\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          } else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      }\r\n    }\r\n    return junit4;\r\n  }\r\n\r\n  executeCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(junit4);\r\n    //console.log(code);\r\n    axios\r\n      .post(\"https://hocodevn.com/api/runner/java\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function(response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function(error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n  submitCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    axios\r\n      .post(\"https://hocodevn.com/api/runner/java\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function(response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\") {\r\n            // process alert success and add code point\r\n            this.props.submitUpdateMinitask(\r\n              this.state.minitask.id,\r\n              this.state.minitask.task_id\r\n            );\r\n\r\n            Swal.fire({\r\n              type: \"success\",\r\n              title: `Chúc mừng, bạn đã hoàn thành bài tập này`,\r\n              width: 600,\r\n              padding: \"3em\",\r\n              customClass: \"hidden_alert\",\r\n              backdrop: `\r\n                rgba(0,0,123,0.4)\r\n                url(\"${require(\"./giphy.gif\")}\") \r\n                center center\r\n                no-repeat\r\n              `\r\n            });\r\n            toast(\"Chúc mừng, bạn đã hoàn thành bài tập này!\", {\r\n              containerId: \"B\"\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function(error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n  render() {\r\n    const { minitask, result } = this.state;\r\n    const { isLoadingComponent } = this.state;\r\n    function renderPassedTestCount() {\r\n      if (result !== undefined) {\r\n        if (result.stdout !== undefined) {\r\n          if (result.stdout.WASSUCCESSFUL !== undefined) {\r\n            return (\r\n              <React.Fragment>\r\n                {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                {result.stdout.RUNCOUNT}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"fit layout-code\">\r\n          <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            key={`bottom,center`}\r\n            open={this.state.open}\r\n            onClose={this.handleCloseSnack}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            className=\"success\"\r\n            autoHideDuration={2000}\r\n\r\n            // style={{    backgroundColor: \"#43a047\"            }}\r\n            message={<span id=\"message-id\">Thành công</span>}\r\n          />\r\n          {/* fit->  postion: absolute, top, bottom,left, right:0 ****   .layout-code{ display: flex;flex-direction: column;\r\n        } */}\r\n          <div className=\"layout-code-header\">\r\n            <MiniTaskHeader\r\n              minitaskName={minitask.mini_task_name}\r\n              history={this.props.history}\r\n            />\r\n          </div>\r\n          {isLoadingComponent ? (\r\n            <div\r\n              className=\"sweet-loading\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n                height: \"100vh\"\r\n              }}\r\n            >\r\n              <HashLoader\r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={isLoadingComponent}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"layout-code-body\">\r\n              {/* layout-code-body->   position: relative;flex-grow: 1;*/}\r\n              <div className=\"split-panel fit\">\r\n                <div className=\"stretch fit\">\r\n                  {/*  <MediaQuery minDeviceWidth={701}>*/}\r\n                  <Split\r\n                    className=\"splitHorizontal\"\r\n                    sizes={[25, 75]}\r\n                    minSize={0}\r\n                    expandToMin={false}\r\n                    gutterSize={4}\r\n                    gutterAlign=\"center\"\r\n                    snapOffset={30}\r\n                    dragInterval={1}\r\n                    direction=\"horizontal\"\r\n                    cursor=\"col-resize\"\r\n                  >\r\n                    <div className=\"split-panel-first \">\r\n                      <MiniTaskDesc\r\n                        mini_task_desc={minitask.mini_task_desc}\r\n                        code_point={minitask.code_point}\r\n                        level={minitask.level}\r\n                      />\r\n                    </div>\r\n                    <div className=\"split-panel-second \">\r\n                      <div className=\"coding-area\">\r\n                        <Split\r\n                          className=\"splitVertical\"\r\n                          sizes={[75, 25]}\r\n                          minSize={100}\r\n                          expandToMin={false}\r\n                          gutterSize={4}\r\n                          gutterAlign=\"center\"\r\n                          snapOffset={30}\r\n                          dragInterval={1}\r\n                          direction=\"vertical\"\r\n                          cursor=\"row-resize\"\r\n                        >\r\n                          <div>\r\n                            <div className=\"codeEditor\">\r\n                              <CodeEditor\r\n                                userCode={this.state.userCode}\r\n                                updateUserCode={this.updateUserCode}\r\n                              />\r\n                              <div\r\n                                className=\"reset_code\"\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  bottom: 10,\r\n                                  right: 20,\r\n                                  zIndex: 9\r\n                                }}\r\n                              >\r\n                                <button\r\n                                  onClick={this.resetCode}\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    padding: \"6px 8px\",\r\n                                    cursor: \"pointer\",\r\n                                    background: \"#ef5350\",\r\n                                    fontWeight: \"bold\"\r\n                                  }}\r\n                                >\r\n                                  Reset code\r\n                                </button>\r\n                              </div>\r\n                              <div\r\n                                className=\"reset_code\"\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  bottom: 10,\r\n                                  right: 110,\r\n                                  zIndex: 9\r\n                                }}\r\n                              >\r\n                                <button\r\n                                  onClick={() =>\r\n                                    this.beautifyCode(this.state.userCode)\r\n                                  }\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    padding: \"6px 8px\",\r\n                                    cursor: \"pointer\",\r\n                                    background: \"#3d5afe\",\r\n                                    fontWeight: \"bold\"\r\n                                  }}\r\n                                >\r\n                                  Beautifier code\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"resultPanel\">\r\n                            {this.state.result.stdout !== undefined ||\r\n                            this.state.result.errorRuntime !== undefined ? (\r\n                              <ResultPanel\r\n                                unit_tests={minitask.unit_tests} // truyền unit test vô chỉ là tạm thời, chứ unitest này phải lấy từ result\r\n                                result={this.state.result}\r\n                              />\r\n                            ) : (\r\n                              <TestsPanel\r\n                                isLoading={this.state.isLoading}\r\n                                unit_tests={minitask.unit_tests}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </Split>\r\n                      </div>\r\n                      <div\r\n                        className=\"runtest-area\"\r\n                        style={{\r\n                          minHeight: \"40px\",\r\n                          padding: \"10px 20px\",\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        <div style={{ marginLeft: 20, color: \"#4DBF9D\" }}>\r\n                          {renderPassedTestCount()}\r\n                        </div>\r\n                        <div style={{ marginLeft: 30 }}>\r\n                          <button\r\n                            className={`execute_btn ${this.state.isLoading &&\r\n                              \"disable_btn\"}`}\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                            onClick={this.executeCode}\r\n                            disabled={this.state.isLoading}\r\n                          >\r\n                            {this.state.isLoading\r\n                              ? \"Đang thực thi\"\r\n                              : \"Thực thi\"}\r\n                            <img\r\n                              src={require(\"./play-button.svg\")}\r\n                              alt=\"\"\r\n                              style={{ height: \"10px\", marginLeft: \"3px\" }}\r\n                            ></img>\r\n                          </button>\r\n                        </div>\r\n                        <div style={{ marginLeft: 10 }}>\r\n                          <button\r\n                            onClick={this.submitCode}\r\n                            className={`submitCode_btn ${this.state.isLoading &&\r\n                              \"disable_btn\"}`}\r\n                            disabled={this.state.isLoading}\r\n                          >\r\n                            Nộp bài\r\n                          </button>\r\n                        </div>\r\n\r\n                        {this.props.user.next_minitask !== undefined ? (\r\n                          <div style={{ marginLeft: 30, fontSize: 12 }}>\r\n                            {this.props.user.next_minitask.id === \"\" ? (\r\n                              <Link\r\n                                to={`/profile/course`}\r\n                                style={{\r\n                                  textDecoration: \"none\",\r\n                                  color: \"#595959\"\r\n                                }}\r\n                              >\r\n                                Qua bài mới\r\n                              </Link>\r\n                            ) : (\r\n                              <Link\r\n                                to={`/tasks/${this.props.user.next_minitask.id}`}\r\n                                style={{\r\n                                  textDecoration: \"none\",\r\n                                  color: \"#595959\"\r\n                                }}\r\n                              >\r\n                                Qua bài mới\r\n                              </Link>\r\n                            )}\r\n                          </div>\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </Split>{\" \"}\r\n                  {/* </MediaQuery>*/}\r\n                  {/* <MediaQuery maxDeviceWidth={700}>\r\n                  {\" \"}\r\n                  <div\r\n                    style={{\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      position: \"fixed\",\r\n                      transform: `translate(-50%,-50%)`,\r\n                      textAlign: \"center\"\r\n                    }}\r\n                  >\r\n                    Không hỗ trợ code bằng điện thoại\r\n                  </div>\r\n                </MediaQuery> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <ToastContainer\r\n            enableMultiContainer\r\n            containerId={\"B\"}\r\n            position={toast.POSITION.TOP_RIGHT}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n})(MiniTaskPage);\r\n","import React, { Component } from \"react\";\r\nimport MiniTaskDesc from \"./body/MiniTaskDesc\";\r\nimport MiniTaskHeader from \"./header/MiniTaskHeader\";\r\nimport CodeEditor from \"./body/CodeEditor\";\r\nimport ResultPanel from \"./body/ResultPanel\";\r\nimport TestsPanel from \"./body/TestsPanel\";\r\nimport \"./minitasknosplit.css\";\r\n//import MediaQuery from \"react-responsive\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport js_beautify from \"js-beautify\";\r\nimport { connect } from \"react-redux\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n} from \"../../js/actions/userAction\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass MiniTaskPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minitask: {},\r\n      result: {},\r\n      userCode: \"\",\r\n      isLoading: false,\r\n      isLoadingComponent: true\r\n      ,open: false\r\n    };\r\n\r\n    this.executeCode = this.executeCode.bind(this);\r\n    this.submitCode = this.submitCode.bind(this);\r\n    this.updateUserCode = this.updateUserCode.bind(this);\r\n    this.resetCode = this.resetCode.bind(this);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: { params }\r\n    } = this.props;\r\n    axios\r\n      .get(`https://hocodevn.com/api/v1/minitasks/${params.minitaskId}`)\r\n      .then(res => {\r\n        const minitask = res.data;\r\n\r\n        this.setState((state, props) => ({\r\n          minitask: minitask,\r\n          isLoadingComponent: false\r\n        }));\r\n        // setTimeout(() => {\r\n        //   console.log(this.state.minitask);\r\n        // }, 0);\r\n        /* if(minitask.user_code !== ''){ // if user have ever code in this minitassk, load user code\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.user_code\r\n        }));\r\n      }\r\n      else{ \r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      } */\r\n        this.setState((state, props) => ({\r\n          userCode: minitask.template_code\r\n        }));\r\n      });\r\n\r\n    // setTimeout(()=>{console.log(this.state.minitask.mini_task_desc)},2000)\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.minitaskId !== this.props.match.params.minitaskId\r\n    ) {\r\n      this.props.setUndefinedNextMinitask();\r\n      console.log(\"next \");\r\n      this.setState((state, props) => ({\r\n        result: {}\r\n      }));\r\n      axios\r\n        .get(\r\n          `https://hocodevn.com/api/v1/minitasks/${this.props.match.params.minitaskId}`\r\n        )\r\n        .then(res => {\r\n          const minitask = res.data;\r\n\r\n          this.setState((state, props) => ({\r\n            minitask: minitask\r\n          }));\r\n\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n        });\r\n      // do something\r\n    }\r\n  }\r\n  updateUserCode(value) {\r\n    // is props of <codeEditor/> to update usercode wwhen edit in editor\r\n    this.setState({ userCode: value });\r\n  }\r\n  handleClickSnack = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleCloseSnack = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  beautifyCode(value) {\r\n    var formatCode = js_beautify(value, { max_preserve_newlines: 2 });\r\n    // console.log(formatCode);\r\n\r\n    this.setState((state, props) => ({\r\n      userCode: formatCode\r\n    }));\r\n    this.handleClickSnack();\r\n  }\r\n  resetCode() {\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: \"btn btn-success comfirmFesetCodeBtn\",\r\n        cancelButton: \"btn btn-danger cancelCodeBtn\"\r\n      },\r\n      buttonsStyling: false\r\n    });\r\n\r\n    swalWithBootstrapButtons\r\n      .fire({\r\n        title: \"Bạn có chắc chắn muốn xóa code đã lưu?\",\r\n        text: \"Bạn sẽ không thể hoàn tác!\",\r\n        type: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Xóa\",\r\n        cancelButtonText: \"Hủy!\",\r\n        reverseButtons: true\r\n      })\r\n      .then(result => {\r\n        if (result.value) {\r\n          this.setState((state, props) => ({\r\n            userCode: minitask.template_code\r\n          }));\r\n          swalWithBootstrapButtons.fire(\"Đã reset!\", \"\", \"success\");\r\n        } else if (\r\n          /* Read more about handling dismissals below */\r\n          result.dismiss === Swal.DismissReason.cancel\r\n        ) {\r\n          swalWithBootstrapButtons.fire(\"Đã hủy\", \"\", \"error\");\r\n        }\r\n      });\r\n    const { minitask } = this.state;\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n\r\n    if (minitask.id !== undefined) {\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else{\r\n\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n            }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n\r\n          \r\n        \r\n        });\r\n        junit4 += `}`;\r\n      } else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else if(minitask.output_type_func === \"String\"){\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n           else {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      }\r\n    }\r\n    return junit4;\r\n  }\r\n\r\n  executeCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    console.log(junit4);\r\n    //console.log(code);\r\n    axios\r\n      .post(\"https://hocodevn.com/api/runner/java\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function(response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function(error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n  submitCode() {\r\n    this.setState((state, props) => ({\r\n      result: {}\r\n    }));\r\n    const { minitask } = this.state;\r\n    //console.log(this.state.userCode);\r\n    let junit4 = this.createFileTest(minitask);\r\n\r\n    let code = `import java.lang.Math; \\n public class Solution {\\n    public Solution(){}\\n    ${this.state.userCode}\\n    }`;\r\n    this.setState((state, props) => ({\r\n      isLoading: true\r\n    }));\r\n\r\n    axios\r\n      .post(\"https://hocodevn.com/api/runner/java\", {\r\n        code: code,\r\n        test: junit4\r\n      })\r\n      .then(\r\n        function(response) {\r\n          console.log(response);\r\n          const error = response.data.stderr;\r\n          const stdout = response.data.stdout;\r\n\r\n          this.setState((state, props) => ({\r\n            result: {\r\n              error: error,\r\n              stdout: stdout\r\n            }\r\n          }));\r\n          this.setState((state, props) => ({\r\n            isLoading: false\r\n          }));\r\n\r\n          if (this.state.result.stdout.WASSUCCESSFUL === \"true\") {\r\n            // process alert success and add code point\r\n            this.props.submitUpdateMinitask(\r\n              this.state.minitask.id,\r\n              this.state.minitask.task_id\r\n            );\r\n\r\n            Swal.fire({\r\n              type: \"success\",\r\n              title: `Chúc mừng, bạn đã hoàn thành bài tập này`,\r\n              width: 600,\r\n              padding: \"3em\",\r\n              customClass: \"hidden_alert\",\r\n              backdrop: `\r\n                rgba(0,0,123,0.4)\r\n                url(\"${require(\"./giphy.gif\")}\") \r\n                center center\r\n                no-repeat\r\n              `\r\n            });\r\n            toast(\"Chúc mừng, bạn đã hoàn thành bài tập này!\", {\r\n              containerId: \"B\"\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(\r\n        function(error) {\r\n          this.setState((state, props) => ({\r\n            isLoading: false,\r\n            result: {\r\n              errorRuntime: error\r\n            }\r\n          }));\r\n          console.log(error);\r\n        }.bind(this)\r\n      );\r\n  }\r\n  render() {\r\n    const { minitask, result } = this.state;\r\n    const { isLoadingComponent } = this.state;\r\n    function renderPassedTestCount() {\r\n      if (result !== undefined) {\r\n        if (result.stdout !== undefined) {\r\n          if (result.stdout.WASSUCCESSFUL !== undefined) {\r\n            return (\r\n              <React.Fragment>\r\n                {result.stdout.RUNCOUNT - result.stdout.GETFAILURECOUNT}/\r\n                {result.stdout.RUNCOUNT}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <div className=\"fit layout-code\">\r\n        <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            key={`bottom,center`}\r\n            open={this.state.open}\r\n            onClose={this.handleCloseSnack}\r\n            ContentProps={{\r\n              \"aria-describedby\": \"message-id\"\r\n            }}\r\n            className=\"success\"\r\n            autoHideDuration={2000}\r\n\r\n            // style={{    backgroundColor: \"#43a047\"            }}\r\n            message={<span id=\"message-id\">Thành công</span>}\r\n          />\r\n          {/* fit->  postion: absolute, top, bottom,left, right:0 ****   .layout-code{ display: flex;flex-direction: column;\r\n        } */}\r\n          <div className=\"layout-code-header\">\r\n            <MiniTaskHeader\r\n              minitaskName={minitask.mini_task_name}\r\n              history={this.props.history}\r\n            />\r\n          </div>\r\n          {isLoadingComponent ? (\r\n            <div\r\n              className=\"sweet-loading\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: \"100%\",\r\n                height:'100vh'\r\n              }}\r\n            >\r\n              <HashLoader\r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={isLoadingComponent}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={4} md={4}>\r\n                <MiniTaskDesc\r\n                  mini_task_desc={minitask.mini_task_desc}\r\n                  code_point={minitask.code_point}\r\n                  level={minitask.level}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                style={{ flexDirection: \"column\" }}\r\n                xs={12}\r\n                sm={8}\r\n                md={8}\r\n              >\r\n                <Grid item style={{ flexGrow: 1 }}>\r\n                  <div className=\"coding-area\">\r\n                    <div className=\"codeEditor\">\r\n                      <CodeEditor\r\n                        userCode={this.state.userCode}\r\n                        updateUserCode={this.updateUserCode}\r\n                      />\r\n                      <div\r\n                        className=\"reset_code\"\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          bottom: 10,\r\n                          right: 20,\r\n                          zIndex: 9\r\n                        }}\r\n                      >\r\n                        <button\r\n                          onClick={this.resetCode}\r\n                          style={{\r\n                            fontSize: 12,\r\n                            padding: \"6px 8px\",\r\n                            cursor: \"pointer\",\r\n                            background: \"#ef5350\",\r\n                            fontWeight: \"bold\"\r\n                          }}\r\n                        >\r\n                          Reset code\r\n                        </button>\r\n                      </div>\r\n                      <div\r\n                                className=\"reset_code\"\r\n                                style={{\r\n                                  position: \"absolute\",\r\n                                  bottom: 10,\r\n                                  right: 110,\r\n                                  zIndex: 9\r\n                                }}\r\n                              >\r\n                                <button\r\n                                  onClick={() =>\r\n                                    this.beautifyCode(this.state.userCode)\r\n                                  }\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    padding: \"6px 8px\",\r\n                                    cursor: \"pointer\",\r\n                                    background: \"#3d5afe\",\r\n                                    fontWeight: \"bold\"\r\n                                  }}\r\n                                >\r\n                                  Beautifier code\r\n                                </button>\r\n                              </div>\r\n                    </div>\r\n\r\n                    <div className=\"resultPanel\">\r\n                      {this.state.result.stdout !== undefined ||\r\n                      this.state.result.errorRuntime !== undefined ? (\r\n                        <ResultPanel\r\n                          unit_tests={minitask.unit_tests} // truyền unit test vô chỉ là tạm thời, chứ unitest này phải lấy từ result\r\n                          result={this.state.result}\r\n                        />\r\n                      ) : (\r\n                        <TestsPanel\r\n                          isLoading={this.state.isLoading}\r\n                          unit_tests={minitask.unit_tests}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item>\r\n                  <div\r\n                    className=\"runtest-area\"\r\n                    style={{\r\n                      minHeight: \"40px\",\r\n                      padding: \"10px 20px\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"flex-end\"\r\n                    }}\r\n                  >\r\n                    <div style={{ marginLeft: 20, color: \"#4DBF9D\" }}>\r\n                      {renderPassedTestCount()}\r\n                    </div>\r\n                    <div style={{ marginLeft: 30 }}>\r\n                      <button\r\n                        className={`execute_btn ${this.state.isLoading &&\r\n                          \"disable_btn\"}`}\r\n                        style={{ display: \"flex\", alignItems: \"center\" }}\r\n                        onClick={this.executeCode}\r\n                        disabled={this.state.isLoading}\r\n                      >\r\n                        {this.state.isLoading ? \"Đang thực thi\" : \"Thực thi\"}\r\n                        <img\r\n                          src={require(\"./play-button.svg\")}\r\n                          alt=\"\"\r\n                          style={{ height: \"10px\", marginLeft: \"3px\" }}\r\n                        ></img>\r\n                      </button>\r\n                    </div>\r\n                    <div style={{ marginLeft: 10 }}>\r\n                      <button\r\n                        onClick={this.submitCode}\r\n                        className={`submitCode_btn ${this.state.isLoading &&\r\n                          \"disable_btn\"}`}\r\n                        disabled={this.state.isLoading}\r\n                      >\r\n                        Nộp bài\r\n                      </button>\r\n                    </div>\r\n\r\n                    {this.props.user.next_minitask !== undefined ? (\r\n                      <div style={{ marginLeft: 30, fontSize: 12 }}>\r\n                        <Link\r\n                          to={`/tasks/${this.props.user.next_minitask.id}`}\r\n                          style={{\r\n                            textDecoration: \"none\",\r\n                            color: \"#595959\"\r\n                          }}\r\n                        >\r\n                          Qua bài mới\r\n                        </Link>\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n\r\n          <ToastContainer\r\n            enableMultiContainer\r\n            containerId={\"B\"}\r\n            position={toast.POSITION.TOP_RIGHT}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitUpdateMinitask,\r\n  setUndefinedNextMinitask\r\n})(MiniTaskPage);\r\n","import React, { Component } from \"react\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport MiniTaskPage from \"./MiniTaskPage\";\r\nimport MiniTaskPageNoSplit from \"./MiniTaskPageNoSplit\";\r\n\r\nclass MinitaskPageResponsive extends Component {\r\n\r\n  render() {\r\n    const {\r\n        match\r\n      } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <MediaQuery minDeviceWidth={701}>\r\n          <MiniTaskPage match={match} history={this.props.history} />\r\n        </MediaQuery>\r\n        <MediaQuery maxDeviceWidth={700}>\r\n          <MiniTaskPageNoSplit match={match} history={this.props.history} />\r\n        </MediaQuery>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MinitaskPageResponsive;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./homePage.css\";\r\n\r\nconst styles = {\r\n  cardGrid: {\r\n    paddingTop: 32,\r\n    paddingBottom: 32\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  }\r\n};\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to={\"/\"}>\r\n        Hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst cards = [1, 2, 3];\r\n\r\nclass CourseBody extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid\r\n        className=\"containerMain\"\r\n        style={{\r\n          height: \"inherit\",\r\n          width: \"100%\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\"\r\n        }}\r\n      >\r\n        <Grid\r\n\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            padding: 40,\r\n            paddingTop: 0,\r\n            height: \"inherit\"\r\n          }}\r\n        >\r\n          <Grid container className=\"header-homepage\">\r\n            <Grid\r\n              className=\"HeaderLeftHome\"\r\n              item\r\n              xs={12}\r\n              md={4}\r\n              sm={4}\r\n              style={{ marginBottom: 0 }}\r\n            >\r\n              <div className=\"logo logo-homepage\">\r\n                <Link to=\"/profile\">\r\n                  <img\r\n                    src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                    alt=\"\"\r\n                    style={{ height: \"80px\", paddingTop: 35 }}\r\n                  ></img>\r\n                </Link>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"HeaderRightHome\"\r\n              item\r\n              xs={12}\r\n              md={8}\r\n              sm={8}\r\n              container\r\n            >\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/searchcert\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#2b2b2b\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      boxShadow: \"none\",\r\n                      fontSize: \"16px\",\r\n                      paddingLeft: \"20px\",\r\n                      paddingRight: \"20px\",\r\n                  \r\n                      // width: \"155px\",\r\n                    }}\r\n                    startIcon={<SearchIcon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Tra Chứng Chỉ\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/login\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#2196f3\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      fontSize: \"16px\",\r\n                      boxShadow: \"none\",\r\n                      width: \"125px\"\r\n                    }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Đăng nhập\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to=\"/signup\"\r\n                  style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                >\r\n                  <Button\r\n                    style={{\r\n                      background: \"#7bccd5\",\r\n                      color: \"white\",\r\n                      fontWeight: 600,\r\n                      boxShadow: \"none\",\r\n                      fontSize: \"16px\",\r\n                      width: \"125px\"\r\n                    }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Đăng ký\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            style={{\r\n              flexGrow: 1,\r\n              // justifyContent: \"center\",\r\n              // alignItems: \"center\",\r\n              padding: 10,\r\n              marginBottom: \"30px\"\r\n            }}\r\n            container\r\n          >\r\n            <Grid\r\n              className=\"left-block-homepage\"\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={6}\r\n              style={{}}\r\n            >\r\n              <div>\r\n                {/* <h3 style={{ textAlign: \"center\" }}> */}\r\n                <Typography\r\n                  component=\"h1\"\r\n                  variant=\"h2\"\r\n                  // align=\"left\"\r\n                  color=\"textPrimary\"\r\n                  gutterBottom\r\n                  style={{ color: \"#009688\", fontWeight: 600, fontSize: \"4em\" }}\r\n                >\r\n                  {/* WELLCOME TO{\" \"} */}\r\n                  {/* <span style={{ color: \"#009688\",  }}> */}\r\n                  WELLCOME TO HOCODE\r\n                  {/* </span> */}\r\n                </Typography>\r\n\r\n                {/* </h3> */}\r\n              </div>\r\n              <div>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  // align=\"left\"\r\n                  color=\"textSecondary\"\r\n                  paragraph\r\n                >\r\n                  {/* <p style={{ textAlign: \"center\" }}> */}\r\n                  Học và rèn luyện khả năng lập trình với hơn{\" \"}\r\n                  <span className=\"span-red MuiTypography-h5\">30</span> bài tập{\" \"}\r\n                  <span className=\"span-red MuiTypography-h5\">JAVA</span>. Còn\r\n                  chần chờ gì nữa, hãy tham gia ngay.\r\n                  {/* </p> */}\r\n                </Typography>\r\n\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  className=\"left-block-home-button\"\r\n                  // justify=\"left\"\r\n                >\r\n                  <Grid item>\r\n                    <Link to=\"/profile\" style={{ textDecoration: \"none\" }}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={{\r\n                          color: \"#fff\",\r\n                          background: \"#ff5252\",\r\n\r\n                          fontWeight: 600,\r\n                          boxShadow: \"none\",\r\n                          fontSize: \"16px\",\r\n                          padding: \"8px 32px\"\r\n                        }}\r\n                      >\r\n                        Bắt đầu\r\n                      </Button>\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              className=\"image-homepage\"\r\n              container\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              md={6}\r\n              style={{\r\n                padding: \"8px\"\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  background: `url(\"/codeEdit3.jpg\") no-repeat left center`,\r\n                  backgroundSize: \"cover\",\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  borderRadius: \"16px 4px\"\r\n                }}\r\n              ></div>\r\n              {/* <img\r\n              src={process.env.PUBLIC_URL  + \"/codeEdit3.jpg\"}\r\n              alt=\"\"\r\n              // style={{ height: \"40px\" }}\r\n            ></img>\r\n    <Grid item>Goes here</Grid> */}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* <Grid \r\n                      style={{\r\n                        flexGrow: 1,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        padding: 25\r\n                      }}\r\n           \r\n          \r\n          >\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/codeEdit.PNG\"}\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"30%\",\r\n                  height: \"auto\",\r\n\r\n                  boxShadow: \"9px 7px 40px 0px rgba(0,0,0,0.75)\",\r\n                  borderRadius: 14\r\n                }}\r\n              ></img>\r\n            </Grid> */}\r\n\r\n          <Copyright />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth\r\n});\r\nexport default withStyles(styles)(connect(mapStateToProps, {})(CourseBody));\r\n\r\n// <Container className={classes.cardGrid} maxWidth=\"md\">\r\n// {/* End hero unit */}\r\n// <Grid container spacing={4}>\r\n//   {cards.map(card => (\r\n//     <Grid item key={card} xs={12} sm={6} md={4}>\r\n//       <Card className={classes.card}>\r\n//         <CardMedia\r\n//           className={classes.cardMedia}\r\n//           image=\"https://source.unsplash.com/random\"\r\n//           title=\"Image title\"\r\n//         />\r\n//         <CardContent className={classes.cardContent}>\r\n//           <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n//             Heading\r\n//           </Typography>\r\n//           <Typography>\r\n//             This is a media card. You can use this section to\r\n//             describe the content.\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     </Grid>\r\n//   ))}\r\n// </Grid>\r\n// </Container>\r\n","const regexEmail = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst regexPassword = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/;\r\n\r\nexport { regexEmail, regexPassword };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { registerUser } from \"../../js/actions/authActions\";\r\nimport \"./SignUpPage.css\";\r\n\r\nimport { regexEmail, regexPassword } from \"../../common/regex\";\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: 50,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"16px 0px\"\r\n  }\r\n};\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass SignUpPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lastName: \"\", //họ\r\n      firstName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {},\r\n      errorForm: {\r\n        lastName: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n    if (nextProps.errors) {\r\n      nextProps.errors.message = \"*\" + nextProps.errors.message;\r\n\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    let isError = false;\r\n    var errorFormNew = this.state.errorForm;\r\n\r\n    if (e.target.id === \"email\")\r\n      if (regexEmail.test(e.target.value) === false) {\r\n        isError = true;\r\n        errorFormNew.email =\r\n          \"*Email không đúng định dạng vd: nguyenvana@gmail.com\";\r\n      } else {\r\n        errorFormNew.email = \"\";\r\n      }\r\n    if (e.target.id === \"password\")\r\n      if (regexPassword.test(e.target.value) === false) {\r\n        isError = true;\r\n        errorFormNew.password =\r\n          \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n      } else {\r\n        errorFormNew.password = \"\";\r\n      }\r\n    if (e.target.id === \"password2\")\r\n      if (e.target.value !== this.state.password) {\r\n        isError = true;\r\n        errorFormNew.password2 = \"*Bạn cần nhập mật khẩu giống trên\";\r\n      } else {\r\n        errorFormNew.password2 = \"\";\r\n      }\r\n\r\n    if (isError) {\r\n      this.setState({\r\n        errorForm: errorFormNew\r\n      });\r\n    }\r\n\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    let messageError = \"\";\r\n\r\n    if (this.state.password !== this.state.password2)\r\n      messageError = \"*Mật khẩu nhập lại không trùng\";\r\n    if (this.state.password2.trim() === \"\")\r\n      messageError = \"*Nhập lại mật khẩu không thể để trống\";\r\n    if (this.state.password.trim() === \"\")\r\n      messageError = \"*Mật khẩu không thể để trống\";\r\n    // if (regexPassword.test(String(this.state.password).toLowerCase()) === false)\r\n    //   messageError =\r\n    //     \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n\r\n    if (this.state.email.trim() === \"\")\r\n      messageError = \"*Email không thể để trống\";\r\n\r\n    if (regexEmail.test(String(this.state.email).toLowerCase()) === false)\r\n      messageError = \"*Email không đúng định dạng\";\r\n\r\n    if (this.state.firstName.trim() === \"\")\r\n      messageError = \"*Tên không thể để trống\";\r\n    if (this.state.lastName.trim() === \"\")\r\n      messageError = \"*Họ không thể để trống\";\r\n\r\n    if (messageError.trim() !== \"\") {\r\n      this.props.errors.message = messageError;\r\n\r\n      this.setState({\r\n        errors: this.props.errors\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      lastName: this.state.lastName,\r\n      firstName: this.state.firstName,\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    console.log(newUser);\r\n    this.props.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  _checkError(val) {\r\n    if (val !== null || val !== \"\") {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          {/* <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar> */}\r\n          <Box\r\n            justifyContent=\"center\"\r\n            borderBottom={24}\r\n            color={\"rgba(255, 255, 255, 0.1)\"}\r\n          >\r\n             <div className=\"logo\">\r\n          <Link to=\"/profile\">\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n              alt=\"\"\r\n              style={{ height: \"80px\" }}\r\n            ></img>\r\n          </Link>\r\n        </div>\r\n          </Box>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng ký\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={this.onSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <CssTextField\r\n                  autoComplete=\"lname\"\r\n                  name=\"lastName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Họ\"\r\n                  autoFocus\r\n                  value={this.state.lastName}\r\n                  onChange={this.onChange}\r\n                  // error={this.state.errorForm.lastName.trim() !== \"\"}\r\n                  // helperText={this.state.errorForm.lastName}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"Tên\"\r\n                  name=\"firstName\"\r\n                  autoComplete=\"fname\"\r\n                  value={this.state.firstname}\r\n                  onChange={this.onChange}\r\n                  // error={this._checkError(this.state.errorForm.firstname)}\r\n                  // helperText={this.state.errorForm.firstname}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Địa chỉ Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.email.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Mật khẩu\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.password.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.password}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <CssTextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password2\"\r\n                  label=\"Nhập lại Mật khẩu\"\r\n                  type=\"password\"\r\n                  id=\"password2\"\r\n                  autoComplete=\"current-password2\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange}\r\n                  error={this.state.errorForm.password2.trim() !== \"\"}\r\n                  helperText={this.state.errorForm.password2}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <div>\r\n              <div className=\"error_show\">{errors.message}</div>\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Tạo tài khoản\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link to=\"/login\" variant=\"body2\">\r\n                  Bạn đã có tài khoản rồi, Đăng nhập ngay\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={5}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nSignUpPage.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors\r\n});\r\nexport default withStyles(styles)(\r\n  connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n  )(SignUpPage)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { fade } from \"@material-ui/core/styles\";\r\nimport Axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    // minWidth: 650\r\n  },\r\n  searchIcon: {\r\n    // width: theme.spacing(7),\r\n    width: 7,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\"\r\n  },\r\n  inputInput: {\r\n    // padding: theme.spacing(1, 1, 1, 7),\r\n    padding: 7,\r\n    // transition: theme.transitions.create('width'),\r\n    width: \"100%\"\r\n    // [theme.breakpoints.up('md')]: {\r\n    //   width: 200,\r\n    // },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    // borderRadius: theme.shape.borderRadius,\r\n    // backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    // \"&:hover\": {\r\n    //     backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    // },\r\n    // marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\"\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   marginLeft: theme.spacing(3),\r\n    //   width: 'auto',\r\n    // },\r\n  },\r\n  rootSearch: {\r\n    padding: \"2px 16px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400,\r\n    marginBottom: 24,\r\n    paddingLeft: \"36px\"\r\n  },\r\n  input: {\r\n    flex: 1\r\n  },\r\n  iconButton: {\r\n    padding: 16\r\n  }\r\n});\r\n\r\nclass SearchCertPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      searchID: \"\",\r\n      rows: [],\r\n      isLoading: false\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  onSubmitSearch = () => {\r\n    this.setState({ isLoading: true, rows: [] });\r\n    // console.log(this.state.searchID);\r\n    Axios.get(`https://hocodevn.com/api/v1/certs/search/${this.state.searchID}`)\r\n      .then(res => {\r\n        this.setState({ rows: res.data, isLoading: false });\r\n        console.log(this.state.rows);\r\n      })\r\n      .catch(e => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleChange = event => {\r\n    // this.setState({ searchID: event.target.value });\r\n    this.setState({\r\n      searchID: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          style={{ height: \"100%\", backgroundColor: \"whitesmoke\" }}\r\n        >\r\n          <Grid className=\"HeaderLeftHome\" item>\r\n            <Grid\r\n              container\r\n              className=\"header-homepage\"\r\n              style={{ backgroundColor: \"white\" }}\r\n            >\r\n              <Grid\r\n                className=\"HeaderLeftHome\"\r\n                item\r\n                xs={12}\r\n                md={4}\r\n                sm={4}\r\n                style={{ marginBottom: 0 }}\r\n              >\r\n                <div className=\"logo logo-homepage\">\r\n                  <Link to=\"/profile\">\r\n                    <div\r\n                      style={{\r\n                        height: \"56px\",\r\n                        margin: 16,\r\n                        background: `url(\"/logo.png\") no-repeat left center`,\r\n                        backgroundSize: \"contain\"\r\n                      }}\r\n                    ></div>\r\n                  </Link>\r\n                </div>\r\n              </Grid>\r\n              <Grid\r\n                className=\"HeaderRightHome\"\r\n                item\r\n                xs={12}\r\n                md={8}\r\n                sm={8}\r\n                container\r\n              >\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/searchcert\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#2b2b2b\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        boxShadow: \"none\",\r\n                        fontSize: \"16px\",\r\n                        paddingLeft: \"20px\",\r\n                        paddingRight: \"20px\"\r\n\r\n                        // width: \"155px\",\r\n                      }}\r\n                      startIcon={<SearchIcon />}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Tra Chứng Chỉ\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/login\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#2196f3\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"16px\",\r\n                        boxShadow: \"none\",\r\n                        width: \"125px\"\r\n                      }}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Đăng nhập\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link\r\n                    to=\"/signup\"\r\n                    style={{ textDecoration: \"none\", marginLeft: \"30px\" }}\r\n                  >\r\n                    <Button\r\n                      style={{\r\n                        background: \"#7bccd5\",\r\n                        color: \"white\",\r\n                        fontWeight: 600,\r\n                        boxShadow: \"none\",\r\n                        fontSize: \"16px\",\r\n                        width: \"125px\"\r\n                      }}\r\n                      variant=\"contained\"\r\n                    >\r\n                      Đăng ký\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid className=\"HeaderLeftHome\" item>\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              style={{ height: \"100%\", padding: \"64px\" }}\r\n            >\r\n              <Paper\r\n                onSubmit={this.onSubmitSearch}\r\n                component=\"form\"\r\n                className={classes.rootSearch}\r\n              >\r\n                <InputBase\r\n                  className={classes.input}\r\n                  placeholder=\"Mã Chứng Chỉ\"\r\n                  inputProps={{ \"aria-label\": \"mã chứng chỉ\" }}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <IconButton\r\n                  //   type=\"submit\"\r\n                  onClick={this.onSubmitSearch}\r\n                  className={classes.iconButton}\r\n                  aria-label=\"search\"\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </Paper>\r\n\r\n              <Paper className={classes.root}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell >ID</TableCell>\r\n                      <TableCell align=\"right\">Trạng thái</TableCell>\r\n                      <TableCell align=\"right\">Thời gian cập nhập</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {this.state.rows.map(row => (\r\n                      <TableRow key={row.id}>\r\n                        <TableCell component=\"th\" scope=\"row\" >\r\n                          {row.search_id}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.status}</TableCell>\r\n                        <TableCell align=\"right\">{Date(row.timestamp).toLocaleString(\"vi\")}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                {this.state.isLoading ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      height: \"200px\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      margin: \"32px\"\r\n                    }}\r\n                  >\r\n                    <CircularProgress size={64} style={{ margin: \"32px\" }} />\r\n                  </div>\r\n                ) : (\r\n                  <> </>\r\n                )}\r\n                {this.state.rows.length == 0 && !this.state.isLoading ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      height: \"200px\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                      margin: \"32px\"\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      width=\"184\"\r\n                      height=\"152\"\r\n                      viewBox=\"0 0 184 152\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <g fill=\"none\" fillRule=\"evenodd\">\r\n                        <g transform=\"translate(24 31.67)\">\r\n                          <ellipse\r\n                            fillOpacity=\".8\"\r\n                            fill=\"#F5F5F7\"\r\n                            cx=\"67.797\"\r\n                            cy=\"106.89\"\r\n                            rx=\"67.797\"\r\n                            ry=\"12.668\"\r\n                          ></ellipse>\r\n                          <path\r\n                            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n                            fill=\"#AEB8C2\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\r\n                            fill=\"url(#linearGradient-1)\"\r\n                            transform=\"translate(13.56)\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n                            fill=\"#F5F5F7\"\r\n                          ></path>\r\n                          <path\r\n                            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\r\n                            fill=\"#DCE0E6\"\r\n                          ></path>\r\n                        </g>\r\n                        <path\r\n                          d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n                          fill=\"#DCE0E6\"\r\n                        ></path>\r\n                        <g transform=\"translate(149.65 15.383)\" fill=\"#FFF\">\r\n                          <ellipse\r\n                            cx=\"20.654\"\r\n                            cy=\"3.167\"\r\n                            rx=\"2.849\"\r\n                            ry=\"2.815\"\r\n                          ></ellipse>\r\n                          <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\"></path>\r\n                        </g>\r\n                      </g>\r\n                    </svg>\r\n                    <p>No Data</p>\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SearchCertPage);\r\n","import React, { Component } from \"react\";\r\nimport SimpleMDEReact from \"react-simplemde-editor\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport \"./reactmde.css\"\r\nclass ReactMde extends Component {\r\n  handleChange = value => {\r\n    this.props.handleMarkdownChange(value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SimpleMDEReact\r\n          className={\"react_mde_custom\"}\r\n          label=\"\"\r\n          value={this.props.mini_task_desc}\r\n          onChange={this.handleChange}\r\n          options={{\r\n           \r\n            spellChecker: false\r\n            \r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactMde;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass CodeEditor extends Component {\r\n\r\n  render() {\r\n    const inputList = this.props.inputList || [];\r\n    let template_code  ='';\r\n    if(this.props.name_func !== '' ){\r\n      template_code = `public ${this.props.output_type_func} ${\r\n        this.props.name_func\r\n      }(${inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()}){ \r\n    \r\n      }`\r\n    }\r\n    return (\r\n      <CodeMirror\r\n      value={\r\n        template_code\r\n      }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n          \r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:5px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport ReactMde from \"../../minitaskPage/ReactMde\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport \"./createminitaskbody.css\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" }\r\n];\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 40\r\n  }\r\n};\r\n\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass CreateMiniTaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"hard\",\r\n      user_code: \"\",\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\"\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://hocodevn.com/api/v1/courses`).then(res => { \r\n      const courses = res.data;\r\n      const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n      const coursesoption = coursesFilter.map(course => {\r\n        return { value: course.id, label: course.course_name };\r\n      });\r\n      this.setState({\r\n        courses: coursesFilter,\r\n        coursesOption: coursesoption,\r\n        tasksOption: courses[0].tasks.map(task => {\r\n          return { value: task.id, label: task.task_name };\r\n        })\r\n      });\r\n      this.setState({\r\n        course_id: courses[0].id,\r\n        task_id: courses[0].tasks[0].id\r\n      });\r\n    });\r\n  }\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n    const template_code =  `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n    }(${ this.state.inputList\r\n      .map(input => {\r\n        return `${input.input_type} ${input.input_name}`;\r\n      })\r\n      .join()})\r\n{ \r\n}`;\r\n    \r\n    let newMiniTask = {\r\n      template_code:template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      course_id: this.state.course_id, \r\n      task_id: this.state.task_id,\r\n      name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"hard\",\r\n    }\r\n    console.log(newMiniTask)\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  async onCoursesSelectChange(select_value) { // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function(course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({ // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value ,   tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }), task_id: course.tasks[0].id\r\n    });\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div>Tạo bài tập</div>\r\n        </div>\r\n\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ background: \"aliceblue\", padding: \"8px\" }}>\r\n              {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn khóa học:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn task:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item>\r\n                  <div>Tên bài tập:</div>\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <div>Tên Function:</div>\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    Kiểu trả về:\r\n                  </div>\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    Mô tả bài toán:\r\n                  </div>\r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n              />\r\n            </div>\r\n            <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <button onClick={e => this.addInput(e)}>Thêm tham số</button>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    maxHeight: \"20vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}\r\n                >\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item container xs={12} sm={6} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              Tên tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <input\r\n                                className=\"input-createminitask\"\r\n                                value={input.input_name}\r\n                                onChange={e =>\r\n                                  this.handleListInputNameChange(e, index)\r\n                                } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item container xs={12} sm={6} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              kiểu tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <Select\r\n                                options={options}\r\n                                defaultValue={options[0]}\r\n                                onChange={select_value =>\r\n                                  this.handleListInputTypeChange(\r\n                                    select_value,\r\n                                    index\r\n                                  )\r\n                                } // higher order function\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                      </div>\r\n                    );\r\n                  })}{\" \"}\r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <button onClick={e => this.addTest(e)}>Thêm test</button>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}\r\n                >\r\n                  {this.state.unit_tests.map((unit_test, index0) => {\r\n                    return (\r\n                      <div key={index0} style={{ padding: 10 }}>\r\n                        {\" \"}\r\n                        Test {index0 + 1}\r\n                        <Paper style={{ padding: 10 }}>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              Inputs:\r\n                            </Grid>\r\n                            {unit_test.inputs.map((input, index1) => {\r\n                              return (\r\n                                <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                  <input\r\n                                    className=\"input-createminitask\"\r\n                                    value={input.value}\r\n                                    onChange={e =>\r\n                                      this.handleInputTestChange(\r\n                                        e,\r\n                                        index0,\r\n                                        index1\r\n                                      )\r\n                                    }\r\n                                    placeholder={`param ${index1 + 1}`}\r\n                                  />\r\n                                </Grid>\r\n                              );\r\n                            })}\r\n                          </Grid>\r\n                          <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              Out put\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12}>\r\n                              <input\r\n                                className=\"output_createminitask\"\r\n                                value={unit_test.expected_output}\r\n                                onChange={e =>\r\n                                  this.handleOutputTestChange(e, index0)\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Paper>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                <button onClick={this.handleSubmit}>submit</button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CreateMiniTaskBody);\r\n","import React, { Component } from 'react';\r\nimport CreateMiniTaskBody from './body/CreateMiniTaskBody'\r\nclass CoursePage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CreateMiniTaskBody/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoursePage;","// in src/authProvider.js\r\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\r\n//import decodeJwt from 'jwt-decode';\r\n\r\n\r\nexport default (type, params) => {\r\n    if (type === AUTH_LOGIN) {\r\n        const { username, password } = params;\r\n        const request = new Request('https://hocodevn.com/api/v1/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ \"email\": username,\"password\": password }),\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        })\r\n        return fetch(request)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(({ token }) => {\r\n                //const decodedToken = decodeJwt(token);\r\n                localStorage.setItem('token', token);\r\n            });\r\n    }\r\n    if (type === AUTH_LOGOUT) {\r\n        localStorage.removeItem('token');\r\n        return Promise.resolve();\r\n    }\r\n    if (type === AUTH_ERROR) {\r\n        const status  = params.status;\r\n        if (status === 401 || status === 403) {\r\n            localStorage.removeItem('token');\r\n            return Promise.reject();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    if (type === AUTH_CHECK) {\r\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\r\n    }\r\n    return Promise.reject('Unknown method');\r\n};","/**\r\n * Generated catchAll.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass catchAll extends Component {\r\n  render() {\r\n    return <Redirect push to=\"/books\" />;\r\n\r\n    // return localStorage.getItem('token') ? (\r\n    //     <NotFound />\r\n    // ) : (\r\n    //     <Redirect push to=\"/login\" />\r\n    // );\r\n  }\r\n}\r\n\r\nexport default catchAll;\r\n/** End of Generated Code **/\r\n","// import React from 'react';\r\n// import { Route } from 'react-router-dom';\r\n// import { NotFound } from 'react-admin';\r\n// import Card from '@material-ui/core/Card';\r\n// import { Title, Resource } from 'react-admin';\r\n\r\n// import {\r\n//     ModelEventList,\r\n//     ModelEventCreate,\r\n//     ModelEventEdit,\r\n// } from './resources/ModelEvent';\r\n\r\n\r\n// import catchAll from './catchAll';\r\n\r\n\r\n// const Foo = () => (\r\n//     <Card>\r\n//         <Title title=\"My Page\" />\r\n//         {/* <CardContent>\r\n//             ...\r\n//         </CardContent> */}\r\n//         <Resource\r\n\r\n//         name=\"events\"\r\n//         list={ ModelEventList }\r\n//         create={ ModelEventCreate }\r\n//         edit={ ModelEventEdit }\r\n//     />\r\n//     {/* <ModelEventList/> */}\r\n//         My Page\r\n//         My Page\r\n//     </Card>\r\n// );\r\n\r\nexport default [\r\n    // <Route exact path=\"/profile/admin/events\" render={() => <Resource\r\n\r\n    //     name=\"events\"\r\n    //     list={ ModelEventList }\r\n    //     create={ ModelEventCreate }\r\n    //     edit={ ModelEventEdit }\r\n    // />} />,\r\n    // <Route exact path=\"/bar\" component={Bar} />,\r\n    // <Route exact path=\"/baz\" component={Baz} noLayout />,\r\n\r\n    // <Route exact path=\"/profile/admin/books\" component={<NotFound />} />,\r\n    // <Route exact path=\"/asd\" component={<div>courses</div>} />,\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n    // <Route exact path=\"/catchAll\" component={catchAll} />\r\n];\r\n","/**\r\n * Generated dataProvider.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport { stringify } from 'query-string';\r\nimport { fetchUtils } from 'react-admin';\r\n\r\nexport const GET_LIST = 'GET_LIST';\r\nexport const GET_ONE = 'GET_ONE';\r\nexport const GET_MANY = 'GET_MANY';\r\nexport const GET_MANY_REFERENCE = 'GET_MANY_REFERENCE';\r\nexport const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\n\r\nconst COMPOSITE_KEY_RESOURSES = {};\r\n\r\n// For models with different Primary Key fields rather than 'id'.\r\nconst PK_MAPPING = {};\r\n\r\nconst FILTER_LENGTHS = {\r\n};\r\n\r\nconst GET_MANY_FILTER = {};\r\n\r\n/**\r\n * @param {String} apiUrl The base API url\r\n * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n * @param {Object} params The REST request params, depending on the type\r\n * @returns {Object} { url, options } The HTTP request parameters\r\n */\r\nexport const convertRESTRequestToHTTP = ({ apiUrl, type, resource, params }) => {\r\n    let url = '';\r\n    const options = {};\r\n    let query = {};\r\n            console.log(\"[params, type, resource]\");\r\n            console.log(params);\r\n            console.log(type);\r\n            console.log(resource);\r\n\r\n    switch (type) {\r\n        case GET_MANY_REFERENCE: {\r\n            query[params.target] = params.id;\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case GET_LIST: {\r\n            if (params.pagination) {\r\n                let { page, perPage } = params.pagination;\r\n                query['limit'] = perPage || 100; // Maximum limit if perPage = 0.\r\n                query['offset'] = page ? (page - 1) * query['limit'] : 0;\r\n            }\r\n\r\n            if (params.sort) {\r\n                const { field, order } = params.sort;\r\n                query['order_by'] = `${order === 'DESC' ? '-' : ''}` + field;\r\n            }\r\n\r\n            if (params.filter) {\r\n                let filterLengths = FILTER_LENGTHS[resource];\r\n                Object.keys(params.filter).forEach(key => {\r\n                    let filter =\r\n                        params.filter[key] instanceof Object\r\n                            ? JSON.stringify(params.filter[key])\r\n                            : params.filter[key];\r\n                    if (filterLengths && filterLengths[key]) {\r\n                        const minLength = filterLengths[key].min;\r\n                        const maxLength = filterLengths[key].max;\r\n                        if (!minLength || filter.length >= minLength) {\r\n                            filter =\r\n                                maxLength && filter.length > maxLength\r\n                                    ? filter.slice(0, maxLength)\r\n                                    : filter;\r\n                            query[key] = filter;\r\n                        }\r\n                    } else {\r\n                        query[key] = filter;\r\n                    }\r\n                    if (!query[key] || (query[key] && query[key].length === 0)) {\r\n                        delete query[key];\r\n                    }\r\n                });\r\n            }\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case GET_ONE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            break;\r\n        case GET_MANY: {\r\n            const filterName = GET_MANY_FILTER[resource];\r\n            const query = filterName\r\n                ? { [filterName]: params.ids.join(',') }\r\n                : { ids: params.ids.join(',') };\r\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n            break;\r\n        }\r\n        case UPDATE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            options.method = 'PUT';\r\n            options.body = JSON.stringify(params.data);\r\n            break;\r\n        case CREATE:\r\n            url = `${apiUrl}/${resource}`;\r\n            options.method = 'POST';\r\n            options.body = JSON.stringify(params.data);\r\n            break;\r\n        case DELETE:\r\n            url = `${apiUrl}/${resource}/${params.id}`;\r\n            options.method = 'DELETE';\r\n            break;\r\n        default:\r\n            throw new Error(`Unsupported fetch action type ${type}`);\r\n    }\r\n    return { url, options };\r\n};\r\n\r\n/**\r\n * @param {Object} response HTTP response from fetch()\r\n * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n * @param {Object} params The REST request params, depending on the type\r\n * @returns {Object} REST response\r\n */\r\nconst convertHTTPResponseToREST = ({ response, type, resource, params }) => {\r\n    const { headers, json } = response;\r\n    let keys = COMPOSITE_KEY_RESOURSES[resource];\r\n    let pk = PK_MAPPING[resource];\r\n    let data = [];\r\n\r\n    switch (type) {\r\n        // Total required by AOR for all list operations\r\n        case GET_LIST:\r\n            if (!headers.has('x-total-count')) {\r\n                throw new Error(\r\n                    'The X-Total-Count header is missing in the HTTP Response. The jsonServer REST client expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare X-Total-Count in the Access-Control-Expose-Headers header?'\r\n                );\r\n            }\r\n            data = keys\r\n                ? json.map(res => ({\r\n                      ...res,\r\n                      id: `${keys.map(key => res[key]).join('/')}`\r\n                  }))\r\n                : pk\r\n                    ? json.map(res => (res.hasOwnProperty('id') ? res : { ...res, id: res[pk] }))\r\n                    : json;\r\n            return {\r\n                data: data,\r\n                total: parseInt(headers.get('x-total-count'), 10)\r\n            };\r\n        case GET_MANY_REFERENCE:\r\n            if (!headers.has('x-total-count')) {\r\n                throw new Error(\r\n                    'The X-Total-Count header is missing in the HTTP Response. The jsonServer REST client expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare X-Total-Count in the Access-Control-Expose-Headers header?'\r\n                );\r\n            }\r\n            data = keys\r\n                ? json.map(res => ({\r\n                      ...res,\r\n                      id: `${keys.map(key => res[key]).join('/')}`\r\n                  }))\r\n                : pk\r\n                    ? json.map(res => (res.hasOwnProperty('id') ? res : { ...res, id: res[pk] }))\r\n                    : json;\r\n            return {\r\n                data: data,\r\n                total: parseInt(headers.get('x-total-count'), 10)\r\n            };\r\n        case CREATE:\r\n            return {\r\n                data: {\r\n                    ...params.data,\r\n                    id: keys ? keys.map(key => json[key]).join('/') : pk ? json[pk] : json.id\r\n                }\r\n            };\r\n        default:\r\n            return { data: json ? json : {} };\r\n    }\r\n};\r\n\r\n/**\r\n * Maps React Admin queries to a Swagger Spec\r\n * @example\r\n * GET_LIST     => GET http://my.api.url/users?limit=10&offset=30&ordering=-name\r\n * GET_ONE      => GET http://my.api.url/users/123/ or GET http://my.api.url/users/123/321/ in the case of a composite key\r\n * GET_MANY     => GET http://my.api.url/users/1/ GET http://my.api.url/users/2/\r\n * UPDATE       => PUT http://my.api.url/users/123/ or PUT http://my.api.url/users/123/321/ in the case of a composite key\r\n * CREATE       => POST http://my.api.url/users/\r\n * DELETE       => DELETE http://my.api.url/users/123/ or DELETE http://my.api.url/users/123/321/ in the case of a composite key\r\n */\r\nconst dataProvider = (apiUrl, httpClient = fetchUtils.fetchJson) => {\r\n    /**\r\n     * @param {string} type Request type, e.g GET_LIST\r\n     * @param {string} resource Resource name, e.g. \"users\"\r\n     * @param {Object} payload Request parameters. Depends on the request type\r\n     * @returns {Promise} the Promise for a REST response\r\n     */\r\n\r\n    return async (type, resource, params) => {\r\n        const { url, options } = convertRESTRequestToHTTP({\r\n            apiUrl,\r\n            type,\r\n            resource,\r\n            params\r\n        });\r\n\r\n        return httpClient(url, options).then(response =>\r\n            convertHTTPResponseToREST({\r\n                response,\r\n                type,\r\n                resource,\r\n                params\r\n            })\r\n        );\r\n    };\r\n};\r\n\r\nexport const httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    const id_token = localStorage.getItem('token');\r\n    options.headers.set('Authorization', `Bearer ${id_token}`);\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\n\r\n// export default dataProvider('rest_url', httpClient);\r\nexport default dataProvider('https://hocodevn.com/api/v1/curd', httpClient);\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated Menu.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MenuItemLink, getResources, Responsive } from \"react-admin\";\r\nimport ListIcon from \"@material-ui/icons/ViewList\";\r\nimport { titleCase } from \"./utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport GestureIcon from '@material-ui/icons/Gesture';\r\nimport SportsVolleyballIcon from '@material-ui/icons/SportsVolleyball';\r\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\n\r\nconst ICONS = {\r\n  books: <MenuBookIcon style={{marginRight: 1}} />,\r\n  events: <EventIcon style={{marginRight: 1}} />,\r\n  courses: <GestureIcon style={{marginRight: 1}} />,\r\n  tasks: <SportsSoccerIcon style={{marginRight: 1}} />,\r\n  minitasks: <SportsVolleyballIcon style={{marginRight: 1}} />,\r\n  profile: <ListIcon style={{marginRight: 1}} />,\r\n  certs: <CardGiftcardIcon style={{marginRight: 1}} />,\r\n};\r\n\r\nconst Menu = ({ resources, onMenuClick, logout }) => (\r\n  <div>\r\n    <Link to={`/profile`} style={{ textDecoration: \"none\" }}>\r\n      <MenuItem>\r\n        <ArrowBackIcon style={{ fontSize: 23, color: \"#1f74be\" }} />\r\n        <p style={{ fontSize: 14, marginLeft: \"1.2em\", color: \"#1f74be\" }}>\r\n          Quay lại trang chủ\r\n        </p>\r\n      </MenuItem> \r\n      \r\n    </Link>\r\n    {/* <MenuItemLink\r\n              key=\"goHome\"\r\n              to={`/profile`}\r\n              primaryText={`Quay lại trang chủ`}\r\n              onClick={onMenuClick}\r\n              leftIcon={<ArrowBackIcon/>}\r\n              className=\"MenuItemLinkBack\"\r\n            /> */}\r\n    {resources\r\n      ? resources.map(resource =>\r\n          resource.hasList ? (\r\n            <MenuItemLink\r\n              key={resource.name}\r\n              to={`/${resource.name}`}\r\n              primaryText={`${changeIDToName(titleCase(resource.name))}`}\r\n              onClick={onMenuClick}\r\n              leftIcon={ICONS[resource.name]}\r\n            />\r\n          ) : null\r\n        )\r\n      : \"\"}\r\n    <Responsive small={logout} medium={null} />\r\n  </div>\r\n);\r\n\r\nconst changeIDToName = name => {\r\n  var title = \"\";\r\n  switch (name) {\r\n    case \"Books\":\r\n      title = \"Sách lập trình\";\r\n      break;\r\n    case \"Events\":\r\n      title = \"Sự kiện\";\r\n      break;\r\n    case \"Courses\":\r\n      title = \"Chủ đề\";\r\n      break;\r\n    case \"Tasks\":\r\n      title = \"Chủ đề con\";\r\n      break;\r\n    case \"Minitasks\":\r\n      title = \"Bài học\";\r\n      break;\r\n    case \"Certs\":\r\n      title = \"Chứng chỉ\";\r\n      break;\r\n    default:\r\n      title = name;\r\n      break;\r\n  }\r\n\r\n  return title;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  resources: getResources(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Menu);\r\n/** End of Generated Menu.js Code **/\r\n","/**\r\n * Generated utils.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\n\r\n\r\n// Produce a title case string\r\nexport const titleCase = string => {\r\n    return string\r\n        .toLowerCase()\r\n        .split(' ')\r\n        .map(word => {\r\n            return word.charAt(0).toUpperCase() + word.slice(1);\r\n        })\r\n        .join(' ');\r\n};\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated MyLayout.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { Layout } from 'react-admin';\r\nimport Menu from './Menu';\r\n\r\nconst MyLayout = (props) => <Layout\r\n    {...props}\r\n    menu={Menu}\r\n/>;\r\n\r\nexport default MyLayout;\r\n/** End of Generated MyLayout.js Code **/","/**\r\n * Generated theme.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\n//import { pink } from '@material-ui/core/colors';\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: indigo,\r\n        secondary:  {\r\n            main: '#1f74be',\r\n          },\r\n        error: red\r\n    }\r\n});\r\n\r\nexport const styles = {\r\n    dateTimeInput: {\r\n        marginTop: 15,\r\n        marginBottom: 15\r\n    }\r\n};\r\n\r\n/** End of Generated Code **/","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelCourseEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelCourseEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelCourseFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelCourseFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelCourse.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //   BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  ImageField\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelCourseEditToolbar from \"../customActions/ModelCourseEditToolbar\";\r\n\r\nimport ModelCourseFilter from \"../filters/ModelCourseFilter\";\r\n\r\nexport const ModelCourseList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Chủ đề\"\r\n    filters={<ModelCourseFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      {/* <TextField                source=\"id\"                sortable={false}            /> */}\r\n      <TextField source=\"course_name\" sortable={false} />\r\n      <ImageField\r\n        className=\"thumbNailView\"\r\n        source=\"background_image\"\r\n        sortable={false}\r\n      />\r\n      {/* <BooleanField                source=\"del\"                sortable={false}            /> */}\r\n      {/* <                source=\"tasks\"                sortable={false}            /> */}\r\n      {/* <TextField                source=\"timestamp\"                sortable={false}            /> */}\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ModelCourseCreate = props => (\r\n  <Create {...props} title=\"Tạo Chủ đề\">\r\n    <SimpleForm redirect=\"show\">\r\n      <TextInput resettable source=\"course_name\" />\r\n      <TextInput resettable source=\"background_image\" />\r\n      <TextInput resettable multiline source=\"course_desc\" />\r\n      {/* <BooleanInput                source=\"del\"            /> */}\r\n      {/* <TextInput resettable                source=\"id\"            /> */}\r\n      {/* <TextInput resettable                source=\"tasks\"            /> */}\r\n      {/* <TextInput resettable                source=\"timestamp\"            /> */}\r\n    </SimpleForm>\r\n  </Create>\r\n);\r\n\r\nexport const ModelCourseEdit = props => (\r\n  <Edit {...props} title=\"Sửa Chủ đề\">\r\n    <SimpleForm toolbar={<ModelCourseEditToolbar />}>\r\n      <TextInput resettable source=\"id\" disabled />\r\n      <TextInput resettable source=\"course_name\" />\r\n      <TextInput resettable source=\"background_image\" />\r\n      <TextInput resettable multiline source=\"course_desc\" />\r\n      {/* <BooleanInput                source=\"del\"            /> */}\r\n      {/* <TextInput                source=\"tasks\"            /> */}\r\n      {/* <TextInput                source=\"timestamp\"            /> */}\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\n/** End of Generated Code **/\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\nlet jBeautify = require('js-beautify').js;\r\n\r\n\r\n\r\n\r\n\r\nclass CodeEditor extends Component {\r\n\r\n  render() {\r\n    const inputList = this.props.inputList || [];\r\n    let template_code  ='';\r\n    if(this.props.name_func !== '' ){\r\n      template_code = `public ${this.props.output_type_func} ${\r\n        this.props.name_func\r\n      }(${inputList\r\n        .map(input => {\r\n          return `${input.input_type} ${input.input_name}`;\r\n        })\r\n        .join()}){ \r\n    \r\n      }`\r\n    }\r\n    let template_code_format = jBeautify(template_code,{indent_size: 2});\r\n    return (\r\n      <CodeMirror\r\n      value={\r\n        template_code_format\r\n      }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n          \r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:5px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeEditor;\r\n","import React, { Component } from \"react\";\r\nimport SimpleMDEReact from \"react-simplemde-editor\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport \"./reactmde.css\"\r\nclass ReactMde extends Component {\r\n  handleChange = value => {\r\n    this.props.handleMarkdownChange(value);\r\n  };\r\n  render() {\r\n    return (\r\n    <Grid item xs={12} sm={12} >\r\n        <SimpleMDEReact\r\n        style={{width:\"350px\"}}\r\n          className={\"react_mde_custom\"}\r\n          label=\"\"\r\n          value={this.props.mini_task_desc}\r\n          onChange={this.handleChange}\r\n          options={{\r\n           \r\n            spellChecker: false\r\n            \r\n          }}\r\n        />\r\n        </Grid>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactMde;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport './codeeditor.css';\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\n\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/neat.css\";\r\n\r\n\r\nimport \"codemirror/mode/clike/clike.js\"\r\nimport \"codemirror/mode/javascript/javascript.js\"\r\nimport \"codemirror/addon/edit/closebrackets.js\"\r\nimport \"codemirror/addon/edit/closetag.js\"\r\nimport \"codemirror/addon/edit/matchbrackets.js\"\r\nimport \"codemirror/addon/hint/anyword-hint.js\"\r\nimport \"codemirror/addon/hint/show-hint.js\"\r\nimport \"codemirror/addon/hint/javascript-hint.js\"\r\nimport \"codemirror/addon/hint/css-hint.js\"\r\n\r\nlet jBeautify = require('js-beautify').js;\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ShowUnitTest extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.createFileTest = this.createFileTest.bind(this);\r\n  }\r\n\r\n  createFileTest(minitask) {\r\n    let junit4 = ``;\r\n      if (minitask.output_type_func.includes(\"[]\") === true) {\r\n        junit4 = `import static org.junit.Assert.assertArrayEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double[]\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          }\r\n          else{\r\n\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertArrayEquals(\"test ${index +\r\n              1}\", new ${minitask.output_type_func} ${\r\n              unit_test.expected_output\r\n            }, s.${minitask.name_func}(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n        });\r\n        junit4 += `}`;\r\n      } \r\n      \r\n      else {\r\n        junit4 = `import static org.junit.Assert.assertEquals;\\n    import org.junit.Test;\\n    import org.junit.runners.JUnit4;\\n    public class TestFixture {\\n    public TestFixture(){}\\n `;\r\n        minitask.unit_tests.forEach((unit_test, index) => {\r\n          let inputs = \"\";\r\n          unit_test.inputs.forEach(input => {\r\n            if (input.type.includes(\"[]\") === true) {\r\n              // if input is array, add new input.type before input.value // new int[] {1,2,3,4}\r\n              inputs += `new ${input.type} ${input.value},`;\r\n            } else {\r\n              inputs += `${input.value},`;\r\n            }\r\n          });\r\n          let inputsFormat = inputs.substring(0, inputs.length - 1);\r\n          if (minitask.output_type_func === \"double\") {\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}),0);\\n  }\\n`;\r\n          } \r\n          else if(minitask.output_type_func === \"String\"){\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", \"${unit_test.expected_output}\", s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n          else{\r\n            junit4 += ` @Test\\n    public void myTestFunction${index +\r\n              1}(){\\n    Solution s = new Solution();\\n  assertEquals(\"test ${index +\r\n              1}\", ${unit_test.expected_output}, s.${\r\n              minitask.name_func\r\n            }(${inputsFormat}));\\n  }\\n`;\r\n          }\r\n          \r\n        });\r\n        junit4 += `}`;\r\n      }\r\n\r\n    return junit4;\r\n  }\r\n  render() {\r\n    let minitask = {output_type_func : this.props.output_type_func,unit_tests:this.props.unit_tests,name_func:this.props.name_func};\r\n    let junit4 = jBeautify(this.createFileTest(minitask),{indent_size: 2});\r\n  \r\n    return (\r\n      <CodeMirror\r\n      value={\r\n        junit4\r\n      }\r\n        options={{\r\n          mode: \"javascript\",\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n          highlightSelectionMatches: true,\r\n          indentUnit: 4,\r\n          tabSize: 4,\r\n          lineWrapping: true,\r\n          dragDrop: false,\r\n          autoCloseBrackets: true,\r\n          spellcheck:true,\r\n          autocorrect:true,\r\n          extraKeys:{\"Ctrl-Space\":\"autocomplete\"},\r\n          readOnly:true,\r\n          \r\n        }}\r\n        MarkText={{from:{line:0,ch:1}, to:{line:3,ch:1}, css: \"font-size:5px\"}}\r\n        onBeforeChange={(editor, data, value) => {\r\n           this.props.updateTemplateCode(value);// update state usercode in component minitaskpage\r\n        }}\r\n        onChange={(editor, data, value) => {\r\n         \r\n        }}\r\n      />\r\n      \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowUnitTest;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { matchPath } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport \"./createminitaskbody.css\";\r\nimport ReactMde from \"./ReactMde\";\r\nimport ShowUnitTest from \"./ShowUnitTest\";\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" }\r\n];\r\nconst optionsLevel =[\r\n  { value: \"easy\", label: \"Easy\" },\r\n  { value: \"medium\", label: \"Medium\" },\r\n  { value: \"hard\", label: \"Hard\" },\r\n]\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 40\r\n  },\r\n  button: {\r\n    textTransform: \"none\"\r\n  }\r\n};\r\n\r\nconst getParams = pathname => {\r\n  const minitask = matchPath(pathname, {\r\n    path: `/profile/minitasks/:minitasksId/edit`\r\n  });\r\n  return (minitask && minitask.params) || {};\r\n};\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass MinitaskEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"\",\r\n      user_code: \"\",\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\",\r\n      code_point: 0,\r\n      course: {value: \"\", label: \"\"},\r\n      task:{value: \"\", label: \"\"}\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.level_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n    this.handleRemoveInput = this.handleRemoveInput.bind(this);\r\n    this.handleRemoveUnitTest = this.handleRemoveUnitTest.bind(this);\r\n    this.onLevelSelectChange = this.onLevelSelectChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n   // let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n    //const currentParams = getParams(location.pathname);\r\n   // console.log(currentParams);\r\n\r\n    axios\r\n      .get(`https://hocodevn.com/api/v1/minitasks/${this.props.minitasksId}`)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const minitask = res.data;\r\n        this.setState({\r\n          template_code: minitask.template_code,\r\n          unit_tests: minitask.unit_tests,\r\n          task_id: minitask.task_id,\r\n          name: minitask.mini_task_name,\r\n          name_func: minitask.name_func,\r\n          output_type_func: minitask.output_type_func,\r\n          point_unlock: minitask.point_unlock,\r\n          status: minitask.status,\r\n          vitri: minitask.vitri,\r\n          mini_task_desc: minitask.mini_task_desc,\r\n          level: minitask.level,\r\n          code_point: minitask.code_point,\r\n          inputList: minitask.input_list || []\r\n        });\r\n        \r\n      });\r\n    axios.get(`https://hocodevn.com/api/v1/courses`).then(res => {\r\n      const courses = res.data;\r\n      const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n      const coursesoption = coursesFilter.map(course => {\r\n        return { value: course.id, label: course.course_name };\r\n      });\r\n      this.setState({\r\n        courses: coursesFilter,\r\n        coursesOption: coursesoption,\r\n        tasksOption: courses[0].tasks.map(task => {\r\n          return { value: task.id, label: task.task_name };\r\n        })\r\n      });\r\n    });\r\n  }\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n  //  let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n   // const currentParams = getParams(location.pathname);\r\n    const template_code = `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n    }(${this.state.inputList\r\n      .map(input => {\r\n        return `${input.input_type} ${input.input_name}`;\r\n      })\r\n      .join()})\r\n{ \r\n}`;\r\n\r\n    let newMiniTask = {\r\n      template_code: template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      task_id: this.state.task_id,\r\n      mini_task_name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"chuahoanthanh\",\r\n      vitri: false,\r\n      mini_task_desc: this.state.mini_task_desc,\r\n      level: this.state.level,\r\n      code_point: parseInt(this.state.code_point),\r\n      input_list:this.state.inputList\r\n    };\r\n    axios\r\n      .put(`https://hocodevn.com/api/v1/curd/minitasks/${this.props.minitasksId}`, newMiniTask)\r\n      .then(function(response) {\r\n        toast(\"Sửa bài thành công!\", {\r\n          containerId: \"B\"\r\n        });\r\n        console.log(response);\r\n\r\n      });\r\n    console.log(newMiniTask);\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  async onCoursesSelectChange(select_value) {\r\n    // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function(course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({\r\n      // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value,\r\n      tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }),\r\n      task_id: course.tasks[0].id\r\n    });\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  onLevelSelectChange(select_value) {\r\n    const name = this.level_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n    console.log(name,select_value)\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n  handleRemoveInput(index) {\r\n    this.state.inputList.splice(index, 1);\r\n    this.setState({ inputList: this.state.inputList, unit_tests: [] });\r\n  }\r\n  handleRemoveUnitTest(index) {\r\n    this.state.unit_tests.splice(index, 1);\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    //const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    /* for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }*/\r\n    this.state.inputList.forEach(function(input, key) {\r\n      arrayInput.push({ value: \"\", type: input.input_type });\r\n    });\r\n\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div>Sửa bài tập</div>\r\n        </div>\r\n\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ background: \"aliceblue\", padding: \"8px\" }}>\r\n              {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      //defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề con:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      //defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <div>Tên bài tập:</div>\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <div>Tên Function:</div>\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.name_func}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <div>Số đậu:</div>\r\n                  <input\r\n                    name=\"code_point\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                    value={this.state.code_point}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <div>Chọn độ khó:</div>\r\n                  <Select\r\n                      styles={selectStyles}\r\n                      options={optionsLevel}\r\n                      ref={this.level_ref}\r\n                      name=\"level\"\r\n                      onChange={this.onLevelSelectChange}\r\n                    />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    Kiểu trả về:\r\n                  </div>\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    //defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item  container xs={12} md={12}>\r\n                  <Grid item xs={12} md={12}>\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    Mô tả bài toán:\r\n                  </div>\r\n                  </Grid>\r\n                  \r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                 \r\n               \r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n              />\r\n            </div>\r\n            <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n              >\r\n                <div\r\n                /*   style={{\r\n                    maxHeight: \"20vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}*/\r\n                >\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item container xs={12} sm={5} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              Tên tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <input\r\n                                className=\"input-createminitask\"\r\n                                value={input.input_name}\r\n                                onChange={e =>\r\n                                  this.handleListInputNameChange(e, index)\r\n                                } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item container xs={12} sm={5} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              kiểu tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <Select\r\n                                options={options}\r\n                                //defaultValue={options[0]}\r\n                                onChange={select_value =>\r\n                                  this.handleListInputTypeChange(\r\n                                    select_value,\r\n                                    index\r\n                                  )\r\n                                } // higher order function\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            container\r\n                            xs={12}\r\n                            sm={2}\r\n                            style={{ alignItems: \"flex-end\" }}\r\n                          >\r\n                            <Grid item>\r\n                              <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  background: \"#ca0000\"\r\n                                }}\r\n                                onClick={() => {\r\n                                  this.handleRemoveInput(index);\r\n                                }}\r\n                              >\r\n                                xóa\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                      </div>\r\n                    );\r\n                  })}{\" \"}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                    className={classes.button}\r\n                    onClick={e => this.addInput(e)}\r\n                  >\r\n                    Thêm tham số\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item container xs={12} sm={12} md={12}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              md={12}\r\n              style={{ justifyContent: \"center\", textAlign: \"center\" }}\r\n            >\r\n              {\" \"}\r\n              Tạo unit test\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={12}\r\n              sm={12}\r\n              style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n            >\r\n              <div\r\n              /*  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}*/\r\n              >\r\n                {this.state.unit_tests.map((unit_test, index0) => {\r\n                  return (\r\n                    <div key={index0} style={{ padding: 10 }}>\r\n                      {\" \"}\r\n                      Test {index0 + 1}\r\n                      <Paper style={{ padding: 10 }}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={12} sm={12} md={12}>\r\n                            Inputs:\r\n                          </Grid>\r\n                          {unit_test.inputs.map((input, index1) => {\r\n                            return (\r\n                              <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                <input\r\n                                  className=\"input-createminitask\"\r\n                                  value={input.value}\r\n                                  onChange={e =>\r\n                                    this.handleInputTestChange(\r\n                                      e,\r\n                                      index0,\r\n                                      index1\r\n                                    )\r\n                                  }\r\n                                  placeholder={`param ${index1 + 1}`}\r\n                                />\r\n                              </Grid>\r\n                            );\r\n                          })}\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={12} sm={12} md={12}>\r\n                            Out put\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={12} md={12}>\r\n                            <input\r\n                              className=\"output_createminitask\"\r\n                              value={unit_test.expected_output}\r\n                              onChange={e =>\r\n                                this.handleOutputTestChange(e, index0)\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container style={{ justifyContent: \"center\" }}>\r\n                          <Grid item>\r\n                            <Button\r\n                              className={classes.button}\r\n                              variant=\"contained\"\r\n                              style={{ color: \"white\", background: \"#ca0000\" }}\r\n                              onClick={() => {\r\n                                this.handleRemoveUnitTest(index0);\r\n                              }}\r\n                            >\r\n                              xóa\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div>\r\n                <div className=\"codeEditorShowUnitTest\">\r\n                  <ShowUnitTest\r\n                    output_type_func={this.state.output_type_func}\r\n                    name_func={this.state.name_func}\r\n                    unit_tests={this.state.unit_tests}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  margin: \"10px 0px\"\r\n                }}\r\n              >\r\n                <Button\r\n                  className={classes.button}\r\n                  style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                  variant=\"contained\"\r\n                  onClick={e => this.addTest(e)}\r\n                >\r\n                  Thêm test\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              md={12}\r\n              sm={12}\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ background: \"#2fbe6f \", color: \"white\" }}\r\n                  className={classes.button}\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Thay đổi\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <ToastContainer\r\n            enableMultiContainer\r\n            containerId={\"B\"}\r\n            position={toast.POSITION.TOP_RIGHT}\r\n          />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MinitaskEdit);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport ReactMde from \"./ReactMde\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport ShowUnitTest from \"./ShowUnitTest\";\r\nimport \"./createminitaskbody.css\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nconst options = [\r\n  { value: \"int\", label: \"Interger\" },\r\n  { value: \"String\", label: \"String\" },\r\n  { value: \"double\", label: \"Double\" },\r\n  { value: \"double[]\", label: \"Double Array\" },\r\n  { value: \"String[]\", label: \"String Array\" },\r\n  { value: \"int[]\", label: \"Interger Array\" }\r\n];\r\nconst optionsLevel =[\r\n  { value: \"easy\", label: \"Easy\" },\r\n  { value: \"medium\", label: \"Medium\" },\r\n  { value: \"hard\", label: \"Hard\" },\r\n]\r\nconst styles = {\r\n  CreateMiniTaskBodyContainer: {\r\n    minHeight: \"100vh\",\r\n    padding: 40\r\n  },\r\n  button: {\r\n    textTransform: \"none\"\r\n  }\r\n};\r\n\r\n// custom react select style\r\nconst selectStyles = { menu: styles => ({ ...styles, zIndex: 999 }) };\r\nclass CreateMiniTaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      name_func: \"\",\r\n      output_type_func: \"int\",\r\n      point_unlock: 0,\r\n      status: \"yeucaumokhoa\",\r\n      vitri: false,\r\n      mini_task_desc: \"\",\r\n      level: \"easy\",\r\n      user_code: \"\",\r\n      /*unit_tests: [\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        },\r\n        {\r\n          inputs: [{ value: 2, type: \"int\" }, { value: 1, type: \"int\" }],\r\n          expected_output: \"3\"\r\n        }\r\n      ],*/\r\n      unit_tests: [],\r\n      taskId: \"\",\r\n      //inputList:[{input_name:\"param1\",input_type:\"int\"}]\r\n      inputList: [],\r\n      coursesOption: [],\r\n      courses: [],\r\n      tasksOption: [],\r\n      course_id: \"\", // ban đầu khi gọi api thì set state để cái này có giá trị mặc định\r\n      task_id: \"\",\r\n      code_point: 0\r\n    };\r\n    this.output_type_func = React.createRef();\r\n    this.courses_ref = React.createRef();\r\n    this.tasks_ref = React.createRef();\r\n    this.level_ref = React.createRef();\r\n    this.handleSimpleInputChange = this.handleSimpleInputChange.bind(this);\r\n\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onCoursesSelectChange = this.onCoursesSelectChange.bind(this);\r\n    this.onTasksSelectChange = this.onTasksSelectChange.bind(this);\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.updateTemplateCode = this.updateTemplateCode.bind(this);\r\n    this.handleRemoveInput = this.handleRemoveInput.bind(this);\r\n    this.handleRemoveUnitTest = this.handleRemoveUnitTest.bind(this);\r\n    this.onLevelSelectChange = this.onLevelSelectChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://hocodevn.com/api/v1/courses`).then(res => {\r\n      const courses = res.data;\r\n      const coursesFilter = courses.filter(course => course.tasks.length > 0); // chọn những courses có task\r\n      const coursesoption = coursesFilter.map(course => {\r\n        return { value: course.id, label: course.course_name };\r\n      });\r\n      this.setState({\r\n        courses: coursesFilter,\r\n        coursesOption: coursesoption,\r\n        tasksOption: courses[0].tasks.map(task => {\r\n          return { value: task.id, label: task.task_name };\r\n        })\r\n      });\r\n      console.log(courses);\r\n      this.setState({\r\n        course_id: courses[0].id,\r\n        task_id: courses[0].tasks.length == 0 ? \"\" : courses[0].tasks[0].id\r\n      });\r\n    });\r\n  }\r\n  // handle simple input change\r\n  handleSimpleInputChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    /*  this.setState({\r\n            minitask:{...minitask,[name]:value}\r\n        });*/\r\n    this.setState((state, props) => ({\r\n      [name]: value\r\n    }));\r\n  }\r\n  // handle minitask desc change\r\n  handleMarkdownChange(value) {\r\n    this.setState({\r\n      mini_task_desc: value\r\n    });\r\n  }\r\n\r\n  // create a new minitask\r\n  async handleSubmit() {\r\n    const template_code = `public ${this.state.output_type_func} ${\r\n      this.state.name_func\r\n    }(${this.state.inputList\r\n      .map(input => {\r\n        return `${input.input_type} ${input.input_name}`;\r\n      })\r\n      .join()})\r\n{ \r\n}`;\r\n\r\n    let newMiniTask = {\r\n      template_code: template_code,\r\n      unit_tests: this.state.unit_tests,\r\n      task_id: this.state.task_id,\r\n      mini_task_name: this.state.name,\r\n      name_func: this.state.name_func,\r\n      output_type_func: this.state.output_type_func,\r\n      point_unlock: 0,\r\n      status: \"chuahoanthanh\",\r\n      vitri: false,\r\n      mini_task_desc: this.state.mini_task_desc,\r\n      level: this.state.level,\r\n      code_point: parseInt(this.state.code_point),\r\n      input_list: this.state.inputList\r\n    };\r\n    axios\r\n      .post(\"https://hocodevn.com/api/v1/minitasks\", newMiniTask)\r\n      .then(function(response) {\r\n        window.location.reload();\r\n        toast(\"Tạo bài tập thành công!\", {\r\n          containerId: \"B\"\r\n        });\r\n        console.log(response);\r\n      });\r\n    console.log(newMiniTask);\r\n  }\r\n\r\n  // handle ouput_type_function select change\r\n  onSelectChange(select_value) {\r\n    const name = this.output_type_func.current.props.name; //get name of select tag\r\n\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n    \r\n  }\r\n  async onCoursesSelectChange(select_value) {\r\n    // mấy chỗ select này coi chừng sai :v\r\n    this.setState((state, props) => ({\r\n      tasksOption: []\r\n    }));\r\n    console.log(select_value);\r\n    const name = this.courses_ref.current.props.name; //get name of select tag\r\n    let course = await this.state.courses.find(function(course) {\r\n      return course.id === select_value.value;\r\n    });\r\n    console.log(course);\r\n    this.setState({\r\n      // khi thay đổi courrse thì thay đổi luôn course id, taskoption, và cho task id mặc định của task đầu tiên trong task option\r\n      [name]: select_value.value,\r\n      tasksOption: course.tasks.map(task => {\r\n        return { value: task.id, label: task.task_name };\r\n      }),\r\n      task_id: course.tasks[0].id\r\n    });\r\n  }\r\n  onTasksSelectChange(select_value) {\r\n    const name = this.tasks_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n  }\r\n  onLevelSelectChange(select_value) {\r\n    const name = this.level_ref.current.props.name; //get name of select tag\r\n    this.setState({\r\n      [name]: select_value.value\r\n    });\r\n    console.log(name,select_value)\r\n  }\r\n  // update template code when typing\r\n  updateTemplateCode(value) {\r\n    this.setState({\r\n      template_code: value\r\n    });\r\n  }\r\n\r\n  //add input to list input\r\n  addInput() {\r\n    this.setState({\r\n      inputList: [\r\n        ...this.state.inputList,\r\n        { input_name: \"\", input_type: \"int\" }\r\n      ],\r\n      unit_tests: []\r\n    });\r\n  }\r\n  handleRemoveInput(index) {\r\n    this.state.inputList.splice(index, 1);\r\n    this.setState({ inputList: this.state.inputList, unit_tests: [] });\r\n  }\r\n  handleRemoveUnitTest(index) {\r\n    this.state.unit_tests.splice(index, 1);\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  // handle list input change\r\n  handleListInputNameChange(e, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_name = e.target.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  //handle list input type change\r\n  handleListInputTypeChange(select_value, index) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.inputList[index].input_type = select_value.value;\r\n    this.setState({ inputList: this.state.inputList });\r\n  }\r\n\r\n  addTest() {\r\n    ///xem lại cái type của input có cần hông\r\n    //const inputListLength = this.state.inputList.length;\r\n\r\n    let arrayInput = [];\r\n    /* for (let i = 0; i < inputListLength; i++) {\r\n      arrayInput.push({ value: \"\", type: \"int\" });\r\n    }*/\r\n    this.state.inputList.forEach(function(input, key) {\r\n      arrayInput.push({ value: \"\", type: input.input_type });\r\n    });\r\n\r\n    this.setState({\r\n      unit_tests: [\r\n        ...this.state.unit_tests,\r\n        { inputs: arrayInput, expected_output: \" \" }\r\n      ]\r\n    });\r\n  }\r\n\r\n  handleOutputTestChange(e, index0) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].expected_output = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n  handleInputTestChange(e, index0, index1) {\r\n    // eslint-disable-next-line react/no-direct-mutation-state\r\n    this.state.unit_tests[index0].inputs[index1].value = e.target.value;\r\n    this.setState({ unit_tests: this.state.unit_tests });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div>Tạo bài tập</div>\r\n        </div>\r\n\r\n        <Grid\r\n          container\r\n          className={classes.CreateMiniTaskBodyContainer}\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <Grid style={{ background: \"aliceblue\", padding: \"8px\" }}>\r\n              {this.state.coursesOption[0] !== undefined ? (\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.coursesOption}\r\n                      ref={this.courses_ref}\r\n                      name=\"course_id\"\r\n                      defaultValue={this.state.coursesOption[0]}\r\n                      onChange={this.onCoursesSelectChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <div>Chọn chủ đề con:</div>\r\n                    <Select\r\n                      styles={selectStyles}\r\n                      options={this.state.tasksOption}\r\n                      ref={this.tasks_ref}\r\n                      name=\"task_id\"\r\n                      defaultValue={this.state.tasksOption[0]}\r\n                      onChange={this.onTasksSelectChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={6}> \r\n                  <div>Tên bài tập:</div>\r\n                  <input\r\n                    name=\"name\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <div>Tên Function:</div>\r\n                  <input\r\n                    name=\"name_func\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <div>Số đậu:</div>\r\n                  <input\r\n                    name=\"code_point\"\r\n                    className=\"input-createminitask\"\r\n                    onChange={this.handleSimpleInputChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <div>Chọn độ khó:</div>\r\n                  <Select\r\n                      styles={selectStyles}\r\n                      options={optionsLevel}\r\n                      ref={this.level_ref}\r\n                      name=\"level\"\r\n                      defaultValue={optionsLevel[0]}\r\n                      onChange={this.onLevelSelectChange}\r\n                    />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  {\" \"}\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    Kiểu trả về:\r\n                  </div>\r\n                  <Select\r\n                    className=\"select_type\"\r\n                    styles={selectStyles}\r\n                    options={options}\r\n                    ref={this.output_type_func}\r\n                    name=\"output_type_func\"\r\n                    defaultValue={options[0]}\r\n                    onChange={this.onSelectChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container>\r\n                <Grid item xs={12} md={12}>\r\n                  <div style={{ marginBottom: 10, marginTop: 10 }}>\r\n                    Mô tả bài toán:\r\n                  </div>\r\n                  <ReactMde\r\n                    handleMarkdownChange={this.handleMarkdownChange}\r\n                    mini_task_desc={this.state.mini_task_desc}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={6}>\r\n            <div className=\"codeEditorCreateMiniTask\">\r\n              <CodeEditor\r\n                output_type_func={this.state.output_type_func}\r\n                name_func={this.state.name_func}\r\n                inputList={this.state.inputList}\r\n                updateTemplateCode={this.updateTemplateCode}\r\n              />\r\n            </div>\r\n            <Grid container style={{ marginTop: 20 }}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                md={12}\r\n                sm={12}\r\n                style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n              >\r\n                <div\r\n                /*   style={{\r\n                    maxHeight: \"20vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}*/\r\n                >\r\n                  {this.state.inputList.map((input, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item container xs={12} sm={5} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              Tên tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <input\r\n                                className=\"input-createminitask\"\r\n                                value={input.input_name}\r\n                                onChange={e =>\r\n                                  this.handleListInputNameChange(e, index)\r\n                                } // higher order function, index và e là biến vẫn được sử dụng sau khi onchange thự thi\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid item container xs={12} sm={5} spacing={1}>\r\n                            <Grid item xs={12} sm={12}>\r\n                              kKiểu tham số:\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                              <Select\r\n                                options={options}\r\n                                defaultValue={options[0]}\r\n                                onChange={select_value =>\r\n                                  this.handleListInputTypeChange(\r\n                                    select_value,\r\n                                    index\r\n                                  )\r\n                                } // higher order function\r\n                              />\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            container\r\n                            xs={12}\r\n                            sm={2}\r\n                            style={{ alignItems: \"flex-end\" }}\r\n                          >\r\n                            <Grid item>\r\n                              <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  background: \"#ca0000\"\r\n                                }}\r\n                                onClick={() => {\r\n                                  this.handleRemoveInput(index);\r\n                                }}\r\n                              >\r\n                                xóa\r\n                              </Button>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Divider style={{ margin: \"5px auto\", width: \"50%\" }} />\r\n                      </div>\r\n                    );\r\n                  })}{\" \"}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n                    margin: \"10px 0px\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                    className={classes.button}\r\n                    onClick={e => this.addInput(e)}\r\n                  >\r\n                    Thêm tham số\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n              <Divider style={{ margin: \"20px auto\", width: \"50%\" }} />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item container xs={12} sm={12} md={12}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              md={12}\r\n              style={{ justifyContent: \"center\", textAlign: \"center\" }}\r\n            >\r\n              {\" \"}\r\n              Tạo unit test\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={12}\r\n              sm={12}\r\n              style={{ background: \"aliceblue\", padding: \"10px\" }}\r\n            >\r\n              <div\r\n              /*  style={{\r\n                    maxHeight: \"30vh\",\r\n                    position: \"relative\",\r\n                    overflowY: \"scroll\",\r\n                    overflowX: \"hidden\"\r\n                  }}*/\r\n              >\r\n                {this.state.unit_tests.map((unit_test, index0) => {\r\n                  return (\r\n                    <div key={index0} style={{ padding: 10 }}>\r\n                      {\" \"}\r\n                      Test {index0 + 1}\r\n                      <Paper style={{ padding: 10 }}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={12} sm={12} md={12}>\r\n                            Inputs:\r\n                          </Grid>\r\n                          {unit_test.inputs.map((input, index1) => {\r\n                            return (\r\n                              <Grid item xs={12} sm={4} md={4} key={index1}>\r\n                                <input\r\n                                  className=\"input-createminitask\"\r\n                                  value={input.value}\r\n                                  onChange={e =>\r\n                                    this.handleInputTestChange(\r\n                                      e,\r\n                                      index0,\r\n                                      index1\r\n                                    )\r\n                                  }\r\n                                  placeholder={`param ${index1 + 1}`}\r\n                                />\r\n                              </Grid>\r\n                            );\r\n                          })}\r\n                        </Grid>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={12} sm={12} md={12}>\r\n                            Out put\r\n                          </Grid>\r\n                          <Grid item xs={12} sm={12} md={12}>\r\n                            <input\r\n                              \r\n                              className=\"output_createminitask\"\r\n                              value={unit_test.expected_output}\r\n                              onChange={e =>\r\n                                this.handleOutputTestChange(e, index0)\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Grid container style={{ justifyContent: \"center\" }}>\r\n                          <Grid item>\r\n                            <Button\r\n                              className={classes.button}\r\n                              variant=\"contained\"\r\n                              style={{ color: \"white\", background: \"#ca0000\" }}\r\n                              onClick={() => {\r\n                                this.handleRemoveUnitTest(index0);\r\n                              }}\r\n                            >\r\n                              xóa\r\n                            </Button>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div>\r\n                <div className=\"codeEditorShowUnitTest\">\r\n                  <ShowUnitTest\r\n                    output_type_func={this.state.output_type_func}\r\n                    name_func={this.state.name_func}\r\n                    unit_tests={this.state.unit_tests}\r\n                    \r\n                  />\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                  margin: \"10px 0px\"\r\n                }}\r\n              >\r\n                <Button\r\n                  className={classes.button}\r\n                  style={{ background: \"#2a92ed\", color: \"white\" }}\r\n                  variant=\"contained\"\r\n                  onClick={e => this.addTest(e)}\r\n                >\r\n                  Thêm test\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={12}\r\n              md={12}\r\n              sm={12}\r\n              style={{ justifyContent: \"flex-end\", padding: \"10px\" }}\r\n            >\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{ background: \"#2fbe6f \", color: \"white\" }}\r\n                  className={classes.button}\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <ToastContainer\r\n            enableMultiContainer\r\n            containerId={\"B\"}\r\n            position={toast.POSITION.TOP_RIGHT}\r\n          />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CreateMiniTaskBody);\r\n","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelMinitaskFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelMinitaskFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelMinitask.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport MinitaskEdit from \"../../../profilePage/content/minitask/MinitaskEdit\";\r\nimport CreateMiniTaskBody from \"../../../profilePage/content/minitask/CreateMiniTaskBody\";\r\n\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  NumberField,\r\n  BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  //   Edit,\r\n  NumberInput,\r\n  //  BooleanField,\r\n  EditButton,\r\n  DeleteButton\r\n} from \"react-admin\";\r\n//import { permitted } from '../utils';\r\n\r\n//import ModelMinitaskEditToolbar from '../customActions/ModelMinitaskEditToolbar';\r\n\r\nimport ModelMinitaskFilter from \"../filters/ModelMinitaskFilter\";\r\n//import { getLocationHref } from '@sentry/utils';\r\n\r\nexport const ModelMinitaskList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Bài học\"\r\n    filters={<ModelMinitaskFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      <TextField source=\"mini_task_name\" sortable={false} />\r\n      <NumberField source=\"code_point\" sortable={false} />\r\n      <TextField source=\"output_type_func\" sortable={false} />\r\n      <TextField source=\"template_code\" sortable={false} />\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nexport const ModelMinitaskCreate = props => (\r\n  <CreateMiniTaskBody/>\r\n  // <Create {...props} title=\"ModelMinitask Create\">\r\n  //   <SimpleForm redirect=\"show\">\r\n  //     <TextInput source=\"avatar\" />\r\n  //     <NumberInput source=\"code_point\" />\r\n  //     <TextInput source=\"level\" />\r\n  //     <TextInput source=\"mini_task_desc\" />\r\n  //     <TextInput source=\"mini_task_name\" />\r\n  //     <TextInput source=\"name_func\" />\r\n  //     <TextInput source=\"output_type_func\" />\r\n  //     <NumberInput source=\"point_unlock\" />\r\n  //     <TextInput source=\"status\" />\r\n  //     <TextInput source=\"task_id\" />\r\n  //     <TextInput source=\"template_code\" />\r\n  //     {/* <TextInput                source=\"timestamp\"            /> */}\r\n  //     <TextInput source=\"unit_tests\" />\r\n  //     <BooleanInput source=\"vitri\" />\r\n  //   </SimpleForm>\r\n  // </Create>\r\n);\r\n\r\nexport const ModelMinitaskEdit = props => {\r\n  // console.log(props.id);\r\n  //window.location.replace(`/profile/minitasks/${props.id}/edit`)\r\n  return <MinitaskEdit minitasksId={props.id} />;\r\n  // return (\r\n  // <Edit  {...props} title=\"ModelMinitask Edit\">\r\n  //     <SimpleForm toolbar={<ModelMinitaskEditToolbar />}>\r\n  //         <TextInput                source=\"avatar\"            />\r\n  //         <NumberInput                source=\"code_point\"            />\r\n  //         {/* <BooleanInput                source=\"del\"            /> */}\r\n  //         <TextInput                source=\"id\"            />\r\n  //         <TextInput                source=\"level\"            />\r\n  //         <TextInput                source=\"mini_task_desc\"            />\r\n  //         <TextInput                source=\"mini_task_name\"            />\r\n  //         <TextInput                source=\"name_func\"            />\r\n  //         <TextInput                source=\"output_type_func\"            />\r\n  //         <NumberInput                source=\"point_unlock\"            />\r\n  //         <TextInput                source=\"status\"            />\r\n  //         <TextInput                source=\"task_id\"            />\r\n  //         <TextInput                source=\"template_code\"            />\r\n  //         {/* <TextInput                source=\"timestamp\"            /> */}\r\n  //         <TextInput                source=\"unit_tests\"            />\r\n  //         <BooleanInput                source=\"vitri\"            />\r\n  //     </SimpleForm></Edit>);\r\n};\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelTaskEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelTaskEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelTaskFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelTaskFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelTask.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //  BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  ImageField,\r\n  SelectInput\r\n} from \"react-admin\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nimport axios from \"axios\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelTaskEditToolbar from \"../customActions/ModelTaskEditToolbar\";\r\n\r\nimport ModelTaskFilter from \"../filters/ModelTaskFilter\";\r\n\r\nexport const ModelTaskList = props => (\r\n  <List\r\n    {...props}\r\n    title=\"Danh sách Chủ đề con\"\r\n    filters={<ModelTaskFilter />}\r\n    bulkActionButtons={false}\r\n  >\r\n    <Datagrid>\r\n      {/* <TextField                source=\"id\"                sortable={false}            /> */}\r\n      <TextField source=\"task_name\" sortable={false} />\r\n      <ImageField\r\n        className=\"thumbNailView\"\r\n        source=\"background_image\"\r\n        sortable={false}\r\n      />\r\n      {/* <TextField                source=\"course_id\"                sortable={false}            /> */}\r\n      {/* <BooleanField                source=\"del\"                sortable={false}            /> */}\r\n      {/* <                source=\"minitasks\"                sortable={false}            /> */}\r\n      {/* <TextField                source=\"timestamp\"                sortable={false}            /> */}\r\n      <EditButton />\r\n      <DeleteButton />\r\n    </Datagrid>\r\n  </List>\r\n);\r\n\r\nclass ModelTaskCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://hocodevn.com/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.course.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_name;\r\n      return rObj;\r\n    });\r\n\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chủ đề con\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput source=\"task_name\" />\r\n          <TextInput source=\"background_image\" />\r\n          {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n          )}\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelTaskEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://hocodevn.com/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.course.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_name;\r\n      return rObj;\r\n    });\r\n\r\n    return (\r\n      <Edit {...this.props} title=\"Sửa Chủ đề con\">\r\n        <SimpleForm toolbar={<ModelTaskEditToolbar />}>\r\n          <TextInput resettable source=\"id\" disabled />\r\n          <TextInput source=\"task_name\" />\r\n          <TextInput source=\"background_image\" />\r\n          {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n          )}\r\n\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Edit>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ModelTaskCreate, ModelTaskEdit };\r\n\r\n/** End of Generated Code **/\r\n","/**\r\n * Generated Edit.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport { DeleteButton, SaveButton, Toolbar } from 'react-admin';\r\n\r\n\r\nconst ModelCertEditToolbar = props => (\r\n    <Toolbar {...props}>\r\n        <SaveButton\r\n            label=\"Save\"\r\n            submitOnEnter={true}\r\n        />\r\n        <SaveButton\r\n            label=\"Save and Continue Editing\"\r\n            redirect={false}\r\n            submitOnEnter={false}\r\n            variant=\"flat\"\r\n        />\r\n        <DeleteButton />\r\n    </Toolbar>\r\n);\r\n\r\nexport default ModelCertEditToolbar;\r\n/** End of Generated Code **/","/**\r\n * Generated Filters.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n**/\r\nimport React from 'react';\r\nimport {\r\n    Filter\r\n} from 'react-admin';\r\n\r\n\r\n\r\nconst ModelCertFilter = props => (\r\n    <Filter {...props}>\r\n    </Filter>\r\n);\r\n\r\nexport default ModelCertFilter;\r\n/** End of Generated Code **/","/**\r\n * Generated ModelCert.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  TextField,\r\n  //   BooleanInput,\r\n  SimpleForm,\r\n  List,\r\n  TextInput,\r\n  Edit,\r\n  //  BooleanField,\r\n  EditButton,\r\n  DeleteButton,\r\n  ImageField,\r\n  SelectInput\r\n} from \"react-admin\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MUITextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport axios from \"axios\";\r\n//import { permitted } from '../utils';\r\n\r\nimport ModelCertEditToolbar from \"../customActions/ModelCertEditToolbar\";\r\n\r\nimport ModelCertFilter from \"../filters/ModelCertFilter\";\r\n\r\n\r\nclass ModelCertList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      name_site: \"hocode\",\r\n      review_point: 0,\r\n      electronic_signature: \"\",\r\n      isLoading: true,\r\n      data: {}\r\n    };\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://hocodevn.com/api/v1/curd/configs/byname/${this.state.name_site}`\r\n      )\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          name: res.data.name,\r\n          review_point: res.data.review_point,\r\n          electronic_signature: res.data.electronic_signature,\r\n          data: res.data,\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChange = event => {\r\n    var xName = event.target.id;\r\n\r\n    this.setState({ [xName]: event.target.value });\r\n  };\r\n\r\n  onChangeImage = ({ target }) => {\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(target.files[0]);\r\n    fileReader.onload = e => {\r\n      this.setState({ electronic_signature: e.target.result });\r\n    };\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    //Make a network call somewhere\r\n    event.preventDefault();\r\n\r\n    var dataUpdate = this.state.data;\r\n    dataUpdate.name = this.state.name;\r\n    dataUpdate.name_site = this.state.name_site;\r\n    dataUpdate.review_point = parseInt(this.state.review_point);\r\n    dataUpdate.electronic_signature = this.state.electronic_signature;\r\n\r\n    console.log(dataUpdate);\r\n    this.setState({ isLoading: true });\r\n    axios\r\n      .post(`https://hocodevn.com/api/v1/curd/configs`, dataUpdate)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          name: res.data.name,\r\n          review_point: res.data.review_point,\r\n          electronic_signature: res.data.electronic_signature,\r\n          data: res.data,\r\n          isLoading: false\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // const matches = useMediaQuery('(min-width:600px)');\r\n\r\n    return (\r\n      <>\r\n        <Grid container spacing={3} className=\"configFormContainer\">\r\n          <Grid item xs={3} className=\"configFormContainerItem\">\r\n          {/* <span>{`(min-width:600px) matches: ${matches}`}</span> */}\r\n          <Card style={{padding: 12}}>\r\n            <form onSubmit={this.handleSubmit}>\r\n              {/* <div>\r\n                {this.state.isLoading ? (\r\n                  <Skeleton height={77} />\r\n                ) : (\r\n                  <MUITextField\r\n                    id=\"name_site\"\r\n                    label=\"Tên Cài Đặt\"\r\n                    margin=\"normal\"\r\n                    defaultValue={this.state.name_site}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled\r\n                  />\r\n                )}\r\n              </div> */}\r\n              <div>\r\n                {this.state.isLoading ? (\r\n                  <Skeleton height={77} />\r\n                ) : (\r\n                  <MUITextField\r\n                    id=\"name\"\r\n                    label=\"Tên Chứng Chỉ\"\r\n                    margin=\"normal\"\r\n                    defaultValue={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {this.state.isLoading ? (\r\n                  <Skeleton height={77} />\r\n                ) : (\r\n                  <MUITextField\r\n                    id=\"review_point\"\r\n                    label=\"Point Tốt Nghiệp\"\r\n                    margin=\"normal\"\r\n                    type=\"number\"\r\n                    defaultValue={this.state.review_point}\r\n                    onChange={this.handleChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                {this.state.isLoading ? (\r\n                  <Skeleton height={77} />\r\n                ) : (\r\n                  <Button\r\n                    className=\"MuiFormControl-marginNormal\"\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    fullWidth\r\n                  >\r\n                    Tải Chữ Ký\r\n                    <input\r\n                      id=\"electronic_signature\"\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={this.onChangeImage}\r\n                      style={{ display: \"none\" }}\r\n                    />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div>\r\n              {this.state.isLoading ? (\r\n                  <Skeleton height={120} />\r\n                ) : (\r\n                <Avatar\r\n                  style={{\r\n                    width: \"auto\",\r\n                    height: \"auto\"\r\n                  }}\r\n                  className=\"MuiFormControl-marginNormal\"\r\n                  src={\r\n                    this.state.electronic_signature\r\n                      ? this.state.electronic_signature\r\n                      : \"https://icon-library.net/images/no-image-available-icon/no-image-available-icon-6.jpg\"\r\n                  }\r\n                  variant=\"rounded\"\r\n                  \r\n                ></Avatar>\r\n                )}\r\n              </div>\r\n              {/* <TextField\r\n          id=\"standard-basic\"\r\n          className={classes.textField}\r\n          label=\"Standard\"\r\n          margin=\"normal\"\r\n        /> */}\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                className=\"MuiFormControl-marginNormal\"\r\n                style={{ backgroundColor: \"#3f51b5\", color: \"#fff\" }}\r\n                fullWidth\r\n              >\r\n                Lưu cài đặt\r\n              </Button>\r\n            </form>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* <Button>Lưu cài đặt</Button> */}\r\n          <Grid item xs={9} className=\"configFormContainerItem\">\r\n            <List\r\n              {...this.props}\r\n              title=\"Danh sách Chứng chỉ\"\r\n              filters={<ModelCertFilter />}\r\n              bulkActionButtons={false}\r\n            >\r\n              <Datagrid>\r\n                <TextField source=\"user_id\" sortable={false} />\r\n                <TextField source=\"status\" sortable={false} />\r\n                <TextField source=\"timestamp\" sortable={false} />\r\n\r\n                <EditButton />\r\n                <DeleteButton />\r\n              </Datagrid>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelCertCreate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://hocodevn.com/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.course.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_name;\r\n      return rObj;\r\n    });\r\n\r\n    return (\r\n      <Create {...this.props} title=\"Tạo Chứng chỉ\">\r\n        <SimpleForm redirect=\"show\">\r\n          <TextInput source=\"user_id\" />\r\n          <TextInput source=\"status\" />\r\n          {/* <TextInput source=\"time\" /> */}\r\n          {/* {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n          )} */}\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Create>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModelCertEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course: [],\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://hocodevn.com/api/v1/courses\").then(res => {\r\n      this.setState({ course: res.data, isLoading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var choicesCourse = this.state.course.map(val => {\r\n      var rObj = {};\r\n      rObj[\"id\"] = val.id;\r\n      rObj[\"name\"] = val.course_name;\r\n      return rObj;\r\n    });\r\n\r\n    return (\r\n      <Edit {...this.props} title=\"Sửa Chứng chỉ\">\r\n        <SimpleForm toolbar={<ModelCertEditToolbar />}>\r\n          <TextInput resettable source=\"id\" disabled />\r\n          {/* <TextInput source=\"task_name\" />\r\n          <TextInput source=\"background_image\" /> */}\r\n          <TextInput source=\"user_id\" />\r\n          <TextInput source=\"status\" />\r\n          {/* <TextInput source=\"time\" /> */}\r\n\r\n          {/* {this.state.isLoading ? (\r\n            <Skeleton />\r\n          ) : (\r\n            <SelectInput source=\"course_id\" choices={choicesCourse} />\r\n          )} */}\r\n\r\n          {/* <BooleanInput                source=\"del\"            /> */}\r\n          {/* <TextInput                source=\"id\"            /> */}\r\n          {/* <TextInput                source=\"minitasks\"            /> */}\r\n          {/* <TextInput                source=\"timestamp\"            /> */}\r\n        </SimpleForm>\r\n      </Edit>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ModelCertList, ModelCertCreate, ModelCertEdit };\r\n\r\n/** End of Generated Code **/\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload\r\n      }; \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ADD_CODEPOINT, GET_USER, CHANGE_USER_INFO,CHANGE_LOADING,SET_UNDEFINED_NEXT_MINITASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  avatar: \"\",\r\n  codepoint: 0,\r\n  email: \"\",\r\n  firstname: \"\",\r\n  id: \"\",\r\n  lastname: \"\",\r\n  isUserLoading:false,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_CODEPOINT:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isUserLoading:false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case CHANGE_USER_INFO:\r\n      return {\r\n        ...state,\r\n        avatar:action.payload.avatar,\r\n        codepoint:action.payload.codepoint,\r\n        email:action.payload.email,\r\n        firstname:action.payload.firstname,\r\n        lastname:action.payload.lastname,\r\n        isUserLoading: false\r\n      };\r\n      case SET_UNDEFINED_NEXT_MINITASK:\r\n          return {\r\n            ...state,\r\n            next_minitask: action.payload\r\n          }; \r\n      case CHANGE_LOADING:\r\n        return {\r\n          ...state,\r\n          isUserLoading: action.payload\r\n        }; \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer, //auth la state de minh goi o cac component can dung : state.auth\r\n  errors: errorReducer,\r\n  user: userReducer\r\n});\r\n","// import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport vietnameseMessages from \"ra-language-vietnamese\";\r\n// import defaultMessages from 'ra-language-english';\r\nimport {\r\n  adminReducer,\r\n  adminSaga,\r\n  formMiddleware,\r\n  defaultI18nProvider,\r\n  USER_LOGOUT,\r\n  i18nReducer\r\n} from 'react-admin';\r\nimport { routerMiddleware, routerReducer } from \"react-router-redux\";\r\n// in src/createAdminStore.js\r\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { all, fork } from \"redux-saga/effects\";\r\nimport thunk from \"redux-thunk\";\r\nimport authProvider from \"../../components/adminPage/hocode/auth/authProvider\";\r\nimport dataProvider from \"../../components/adminPage/hocode/dataProvider\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n//import routeReducer2 from '../reducers/routeReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst history = createBrowserHistory({ basename: '/admin' });\r\n\r\nconst createAdminStore = ({\r\n  authProvider,\r\n  dataProvider,\r\n  i18nProvider = defaultI18nProvider,\r\n  history,\r\n  locale = \"vi\"\r\n}) => {\r\n  const reducer = combineReducers({\r\n    admin: adminReducer,\r\n    form: formReducer,\r\n    router: routerReducer,\r\n    i18n: i18nReducer(locale, i18nProvider(locale)),\r\n    rootReducer: rootReducer\r\n    // { /* add your own reducers here */ },\r\n  });\r\n  const resettableAppReducer = (state, action) =>\r\n    reducer(action.type !== USER_LOGOUT ? state : undefined, action);\r\n\r\n  const saga = function* rootSaga() {\r\n    yield all(\r\n      [\r\n        adminSaga(dataProvider, authProvider, i18nProvider)\r\n        // add your own sagas here\r\n      ].map(fork)\r\n    );\r\n  };\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(\r\n    resettableAppReducer,\r\n    // { /* set your initial state here */ },\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(\r\n        sagaMiddleware,\r\n        formMiddleware,\r\n        routerMiddleware(history),\r\n        thunk\r\n        // add your own middlewares here\r\n      ),\r\n //    typeof window !== \"undefined\" && window.__REDUX_DEVTOOLS_EXTENSION__\r\n   //    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    //    : f => f\r\n      // add your own enhancers here\r\n    )\r\n  );\r\n  sagaMiddleware.run(saga);\r\n  return store;\r\n};\r\n\r\n\r\nconst i18nProvider = locale => {\r\n  // if (locale !== 'en') {\r\n  //     return messages[locale];\r\n  // }\r\n  return vietnameseMessages;\r\n};\r\n\r\nconst store = createAdminStore({\r\n  authProvider,\r\n  dataProvider,\r\n  i18nProvider,\r\n  history\r\n});\r\nexport default store;\r\n\r\nexport { history };\r\n// const middleware = [thunk];\r\n// //const devTools = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : null\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   initialState,\r\n//   compose(\r\n//     applyMiddleware(...middleware)\r\n//  // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()  //cai nay su dung khi dung redux dev tool extension\r\n//   )\r\n// );\r\n\r\n// export { store};\r\n","/**\r\n * Generated ReactAdmin.js code. Edit at own risk.\r\n * When regenerated the changes will be lost.\r\n **/\r\nimport React from \"react\";\r\nimport { Admin, Resource } from \"react-admin\";\r\n\r\nimport authProvider from \"./auth/authProvider\";\r\nimport catchAll from \"./catchAll\";\r\nimport customRoutes from \"./customRoutes\";\r\nimport dataProvider from \"./dataProvider\";\r\nimport MyLayout from \"./MyLayout\";\r\nimport { theme } from \"./theme\";\r\n\r\nimport {\r\n  ModelBookList,\r\n  ModelBookCreate,\r\n  ModelBookEdit\r\n} from \"./resources/ModelBook\";\r\n\r\nimport {\r\n  ModelCourseList,\r\n  ModelCourseCreate,\r\n  ModelCourseEdit\r\n} from \"./resources/ModelCourse\";\r\n\r\nimport {\r\n  ModelEventList,\r\n  ModelEventCreate,\r\n  ModelEventEdit\r\n} from \"./resources/ModelEvent\";\r\n\r\nimport {\r\n  ModelMinitaskList,\r\n  ModelMinitaskCreate,\r\n  ModelMinitaskEdit\r\n} from \"./resources/ModelMinitask\";\r\n\r\nimport {\r\n  ModelTaskList,\r\n  ModelTaskCreate,\r\n  ModelTaskEdit\r\n} from \"./resources/ModelTask\";\r\n\r\nimport {\r\n  ModelCertList,\r\n  ModelCertCreate,\r\n  ModelCertEdit\r\n} from \"./resources/ModelCert\";\r\n\r\nimport { history } from \"../../../js/store/store\";\r\n\r\nconst ReactAdmin = () => (\r\n  <Admin\r\n    appLayout={MyLayout}\r\n    authProvider={authProvider}\r\n    catchAll={catchAll}\r\n    customRoutes={customRoutes}\r\n    dataProvider={dataProvider}\r\n    title=\"Hocode Admin\"\r\n    theme={theme}\r\n    history={history}\r\n    locale=\"vi\"\r\n  >\r\n    {/* <Resource\r\n      name=\"books\"\r\n      list={ModelBookList}\r\n      create={ModelBookCreate}\r\n      edit={ModelBookEdit}\r\n    /> */}\r\n    {/* <Resource\r\n      name=\"events\"\r\n      list={ModelEventList}\r\n      create={ModelEventCreate}\r\n      edit={ModelEventEdit}\r\n    /> */}\r\n\r\n    <Resource\r\n      name=\"courses\"\r\n      list={ModelCourseList}\r\n      create={ModelCourseCreate}\r\n      edit={ModelCourseEdit}\r\n    />\r\n    <Resource\r\n      name=\"tasks\"\r\n      list={ModelTaskList}\r\n      create={ModelTaskCreate}\r\n      edit={ModelTaskEdit}\r\n    />\r\n\r\n    <Resource\r\n      name=\"minitasks\"\r\n      list={ModelMinitaskList}\r\n      create={ModelMinitaskCreate}\r\n      edit={ModelMinitaskEdit}\r\n    />\r\n\r\n    {/* <Resource\r\n      name=\"certs\"\r\n      list={ModelCertList}\r\n      create={ModelCertCreate}\r\n      edit={ModelCertEdit}\r\n    /> */}\r\n  </Admin>\r\n);\r\n\r\nexport default ReactAdmin;\r\n/** End of Generated Code **/\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { changeUserInfo } from \"../../../../js/actions/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { regexPassword } from \"../../../../common/regex\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport axios from \"axios\";\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"16px 0px\"\r\n  }\r\n};\r\n\r\nclass Account extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      lastName: \"\", //họ\r\n      firstName: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      avatar: \"\",\r\n      errors: {},\r\n      errorForm: {\r\n        lastName: \"\",\r\n        firstName: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n      },\r\n      image: null,\r\n      url: \"\",\r\n      urlPreview: \"\"\r\n    };\r\n    this.handleChangeImage = this.handleChangeImage.bind(this);\r\n    this.toBase64 = this.toBase64.bind(this);\r\n    this.ImgToBase64 = this.ImgToBase64.bind(this);\r\n  }\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios\r\n        .get(\"https://hocodevn.com/auth/userinfo\")\r\n        .then(res => {\r\n          this.setState({\r\n            firstName: res.data.firstname,\r\n            lastName: res.data.lastname,\r\n            avatar: res.data.avatar\r\n          });\r\n        })\r\n        .catch(err => console.log(err))\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  async handleChangeImage(e) {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      const urlimage = URL.createObjectURL(image);\r\n      let image1 = await this.ImgToBase64(image);\r\n      await this.setState({ image: image1, urlPreview: urlimage });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    let isError = false;\r\n    this.setState({\r\n      errors: { message: \"\" }\r\n    });\r\n    if (e.target.id === \"password\")\r\n      if (regexPassword.test(e.target.value) === false) {\r\n        isError = true;\r\n        var errorFormNew = this.state.errorForm;\r\n        errorFormNew.password =\r\n          \"*Mật khẩu cần có ít nhất 6 ký tự, 1 số, 1 chữ In và 1 chữ thường và không chứa ký tự đặc biệt\";\r\n      } else {\r\n        errorFormNew.password = \"\";\r\n      }\r\n    if (e.target.id === \"password2\")\r\n      if (e.target.value !== this.state.password) {\r\n        isError = true;\r\n        errorFormNew.password2 = \"*Bạn cần nhập mật khẩu giống trên\";\r\n      } else {\r\n        errorFormNew.password2 = \"\";\r\n      }\r\n\r\n    if (isError) {\r\n      this.setState({\r\n        errorForm: errorFormNew\r\n      });\r\n    }\r\n\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  toBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\n  async ImgToBase64(file) {\r\n    const result = await this.toBase64(file).catch(e => e);\r\n    if (result instanceof Error) {\r\n      console.log(\"Error: \", result.message);\r\n      return;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    let messageError = \"\";\r\n\r\n    if (this.state.password !== this.state.password2)\r\n      messageError = \"*Mật khẩu nhập lại không trùng\";\r\n\r\n    if (this.state.firstName.trim() === \"\")\r\n      messageError = \"*Tên không thể để trống\";\r\n    if (this.state.lastName.trim() === \"\")\r\n      messageError = \"*Họ không thể để trống\";\r\n\r\n    if (messageError.trim() !== \"\") {\r\n      this.props.errors.message = messageError;\r\n\r\n      this.setState({\r\n        errors: this.props.errors\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      lastName: this.state.lastName,\r\n      firstName: this.state.firstName,\r\n      password: this.state.password,\r\n      avatar: this.state.image\r\n    };\r\n    console.log(this.props.auth.user.data.id);\r\n    this.setState(function(state, props) {\r\n      return {\r\n        isLoading: true\r\n      };\r\n    });\r\n    await this.props.changeUserInfo(newUser, this.props.auth.user.data.id);\r\n    setTimeout(() => {\r\n      this.setState(function(state, props) {\r\n        return {\r\n          isLoading: false\r\n        };\r\n      });\r\n    }, 0);\r\n  };\r\n\r\n  _checkError(val) {\r\n    if (val !== null || val !== \"\") {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { errors, isLoading } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid container spacing={3} style={{ height: \"100%\" }}>\r\n        {isLoading === true || this.props.user.isUserLoading === true ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",height:'100vh'\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={true}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Grid item xs={12} sm={5} md={5}>\r\n              <Paper style={{ padding: 16, minHeight:300,display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\"}}>\r\n                <div style={{ fontWeight: \"bold\" }}>Thông tin cá nhân</div>{\" \"}\r\n                <div>\r\n                  Họ và tên: {this.props.user.lastname}{\" \"}\r\n                  {this.props.user.firstname}\r\n                </div>\r\n                <div>Email: {this.props.user.email}</div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7} md={7}>\r\n              <Paper style={{ padding: 16 }}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                  <CssBaseline />\r\n                  <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\"></Typography>\r\n                    <form\r\n                      className={classes.form}\r\n                      noValidate\r\n                      onSubmit={this.onSubmit}\r\n                    >\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <CssTextField\r\n                            autoComplete=\"lname\"\r\n                            name=\"lastName\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"lastName\"\r\n                            label=\"Họ\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.onChange}\r\n                            inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                            InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                          <CssTextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"firstName\"\r\n                            label=\"Tên\"\r\n                            name=\"firstName\"\r\n                            autoComplete=\"fname\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onChange}\r\n                            inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                            InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <CssTextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Mật khẩu mới\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            value={this.state.password}\r\n                            onChange={this.onChange}\r\n                            error={this.state.errorForm.password.trim() !== \"\"}\r\n                            helperText={this.state.errorForm.password}\r\n                            inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                            InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <CssTextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            name=\"password2\"\r\n                            label=\"Nhập lại Mật khẩu mới\"\r\n                            type=\"password\"\r\n                            id=\"password2\"\r\n                            autoComplete=\"current-password2\"\r\n                            value={this.state.password2}\r\n                            onChange={this.onChange}\r\n                            error={this.state.errorForm.password2.trim() !== \"\"}\r\n                            helperText={this.state.errorForm.password2}\r\n                            inputProps={{ style: { fontSize: 12 } }} // font size of input text\r\n                            InputLabelProps={{ style: { fontSize: 12 } }} // font size of input label\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <div>Thay đổi avatar</div>\r\n                          <div>\r\n                            {\" \"}\r\n                            {this.state.urlPreview !== \"\" ? (\r\n                              <img\r\n                                style={{ width: 40, height: 40 }}\r\n                                src={this.state.urlPreview}\r\n                                alt=\"\"\r\n                              />\r\n                            ) : (\r\n                              <img\r\n                                style={{ width: 40, height: 40 }}\r\n                                src={this.state.avatar}\r\n                                alt=\"\"\r\n                              />\r\n                            )}\r\n                          </div>\r\n                          <div>\r\n                            <label\r\n                              htmlFor=\"files\"\r\n                              style={{\r\n                                padding: \"4px 6px\",\r\n                                borderRadius: \"4px\",\r\n                                cursor: \"pointer\",\r\n                                background: \"#2098d1\",\r\n                                color: \"white\",\r\n                                boxShadow:\r\n                                  \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n                              }}\r\n                            >\r\n                              Chọn ảnh\r\n                            </label>\r\n                            <input\r\n                              id=\"files\"\r\n                              type=\"file\"\r\n                              onChange={this.handleChangeImage}\r\n                              style={{ visibility: \"hidden\" }}\r\n                            />\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <div>\r\n                        <div className=\"error_show\">{errors.message}</div>\r\n                      </div>\r\n\r\n                      <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                      >\r\n                        Lưu thông tin\r\n                      </Button>\r\n                    </form>\r\n                  </div>\r\n                </Container>\r\n              </Paper>\r\n            </Grid>\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nAccount.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\nexport default withStyles(styles)(\r\n  connect(\r\n    mapStateToProps,\r\n    { changeUserInfo }\r\n  )(Account)\r\n);\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange, deepPurple, green, pink } from \"@material-ui/core/colors\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LaptopIcon from \"@material-ui/icons/Laptop\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport \"./hover.css\";\r\n\r\nconst randomColor = () => {\r\n  var listColor = [deepOrange[500], deepPurple[500], green[500], pink[500]];\r\n  var color = listColor[Math.floor(Math.random() * listColor.length)];\r\n\r\n  return color;\r\n};\r\n\r\nexport { randomColor };\r\n\r\nconst styles = {\r\n  courseItem: {\r\n    borderRadius: \"4px\",\r\n    boxShadow:\r\n      \"0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\",\r\n    overflow: \"hidden\",\r\n    background: \"white\",\r\n    cursor: \"pointer\"\r\n  },\r\n  smallAvatar: {\r\n    height: \"24px\",\r\n    width: \"24px\",\r\n    marginRight: \"4px\",\r\n    // backgroundColor: randomColor(),\r\n    // fontSize: \"0.8rem\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"600\"\r\n  }\r\n};\r\nclass CourseItem extends Component {\r\n  render() {\r\n    const { classes, course } = this.props;\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        style={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          // justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n        className={`${classes.courseItem} hvr-bounce-in`}\r\n      >\r\n        <Grid\r\n          item\r\n          style={{\r\n            width: \"100%\",\r\n            overflow: \"hidden\",\r\n            height: \"150px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            background: `url(${course.background_image}) no-repeat center`,\r\n            backgroundSize: \"cover\"\r\n          }}\r\n        >\r\n          {/* <img\r\n            src={course.background_image}\r\n            style={{\r\n              width: \"50px\",\r\n              objectFit: \"cover\",\r\n              height: \"50px\",\r\n              borderRadius: \"50%\",\r\n              marginTop: \"10px\"\r\n            }}\r\n            alt=\"\"\r\n          /> */}\r\n        </Grid>\r\n        <Grid item container justify=\"center\" style={{ padding: \"10px 0 0 0\" }}>\r\n          <Grid item xs>\r\n            <div\r\n              style={{\r\n                margin: \"0px 12px\",\r\n                // textAlign: \"center\",\r\n                textTransform: \"uppercase\",\r\n                color: \"#595959\",\r\n                fontWeight: \"bold\"\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {course.course_name}\r\n              </Typography>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                margin: \"5px 12px 10px\",\r\n                // textAlign: \"center\",\r\n                color: \"#909090\"\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Rating\r\n                name=\"read-only\"\r\n                value={course.rating_value}\r\n                read-only\r\n                precision={0.1}\r\n                size=\"large\"\r\n              />{\" \"}\r\n              <Typography\r\n                variant=\"body1\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n                style={{\r\n                  height: 40,\r\n                  overflow: \"hidden\",\r\n\r\n                  wordBreak: \"break-word\"\r\n                }}\r\n              >\r\n                {course.course_desc}\r\n              </Typography>\r\n            </div>\r\n            <Divider light />\r\n\r\n            <div\r\n              style={{\r\n                margin: \"8px 12px\",\r\n                textAlign: \"center\",\r\n                color: \"#909090\"\r\n\r\n                // fontFamily: `'Yanone Kaffeesatz', sans-serif`\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-start\"\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    className={classes.smallAvatar}\r\n                    style={{ backgroundColor: randomColor() }}\r\n                  >\r\n                    {course.user_create\r\n                      ? course.user_create.charAt(0).toUpperCase()\r\n                      : \"H\"}\r\n                  </Avatar>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {/* {course.total_minitask} */}\r\n                    {course.user_create ? course.user_create : \"Hocode\"}\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"flex-end\"\r\n                  }}\r\n                >\r\n                  <LaptopIcon\r\n                    style={{\r\n                      // color: \"#fff\",\r\n                      // backgroundColor: \"rgba(0, 0, 0, 0.87)\",\r\n                      padding: \"2px 4px\",\r\n                      boxSizing: \"content-box\",\r\n                      borderRadius: \"4px\"\r\n                    }}\r\n                    fontSize=\"small\"\r\n                  />\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {course.total_minitask}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CourseItem from './CourseItem';\r\nimport \"./coursebody.css\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nconst styles = {\r\n  CourseContainer: {\r\n    paddingTop: \"30px\",\r\n    minHeight: \"100vh\"\r\n  },\r\n  courseItem:{\r\n    borderRadius:'4px',\r\n    boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n    overflow:'hidden',\r\n    background: '#EEEEEE',\r\n    cursor:'pointer',\r\n    \r\n},\r\n};\r\nclass CourseBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading:true,\r\n      courses: []\r\n    };\r\n  }\r\n  getApi=async () =>{\r\n    await Promise.all([\r\n      axios.get(`https://hocodevn.com/api/v1/courses`).then(res => {\r\n        const courses = res.data;\r\n        console.log(courses)\r\n        this.setState({ courses });\r\n      })]\r\n    );\r\n    this.setState({isLoading:false})\r\n  }\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {courses,isLoading} = this.state;\r\n    let url = this.props.url;\r\n  \r\n    return (\r\n      <Grid container className={classes.CourseContainer} justify=\"center\">\r\n          {isLoading?<div className=\"sweet-loading\" style={{display:'flex',alignItems:\"center\",justifyContent:'center',width:'100%'}}>\r\n              <HashLoader\r\n              \r\n                sizeUnit={\"px\"}\r\n                size={50}\r\n                color={\"#AEA8A8\"}\r\n                loading={isLoading}\r\n              />\r\n            </div> : (<React.Fragment><Grid item xs={12} sm={12} style={{ padding: \"0px 60px\" }}>\r\n         <Grid container spacing={2}>\r\n\r\n         \r\n          {courses.map((course)=><Grid key={course.id} item xs={12} sm={4} md={4}><Link  style={{textDecoration:'none'}}to={`${url}/courses/${course.id}/tasks`}><CourseItem course={course}/></Link></Grid>)}\r\n          </Grid>\r\n        </Grid></React.Fragment>)}  \r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CourseBody);\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst styles = {\r\n  paper: {\r\n    padding: 16,\r\n    marginTop: 16,\r\n    minHeight: 300\r\n  },\r\n  card: {\r\n    maxWidth: \"100%\"\r\n  },\r\n  media: {\r\n    // width: \"100%\",\r\n\r\n    height: 180,\r\n    objectFit: \"cover\"\r\n  }\r\n};\r\nconst titleCase = string => {\r\n  return string\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n\r\nclass Overview extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      courses: [],\r\n      events: [],\r\n      books: [],\r\n      daily_minitask: {}\r\n    };\r\n    this.getApi = this.getApi.bind(this);\r\n  }\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios.get(`https://hocodevn.com/auth/usercourse`).then(res => {\r\n        const courses = res.data;\r\n        console.log(courses);\r\n        this.setState({ courses: courses.course_info });\r\n      }),\r\n\r\n      axios.get(`https://hocodevn.com/api/v1/events`).then(res => {\r\n        const events = res.data;\r\n        console.log(events);\r\n        this.setState({ events });\r\n      }),\r\n      axios.get(`https://hocodevn.com/api/v1/books`).then(res => {\r\n        const books = res.data;\r\n        console.log(books);\r\n        this.setState({ books });\r\n      }),\r\n      axios.get(`https://hocodevn.com/api/v1/dailyminitask`).then(res => {\r\n        const daily_minitasks = res.data;\r\n        console.log(daily_minitasks);\r\n        this.setState({ daily_minitasks: daily_minitasks });\r\n      })\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n\r\n  renderLevelMinitaskChip(minitask) {\r\n    minitask.level = titleCase(minitask.level);\r\n    console.log(minitask.level);\r\n    if (minitask.level === \"Easy\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#76d38e\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else if (minitask.level === \"Medium\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#1d97c6\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"red\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    const { classes } = this.props;\r\n    let url = this.props.url;\r\n\r\n    return (\r\n      <Grid container spacing={3} style={{ height: \"100vh\" }}>\r\n        {isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Grid item xs={12} sm={5} md={5}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container style={{ marginBottom: 15 }}>\r\n                  <Grid item style={{ flexGrow: 1 }}>\r\n                    <div style={{ fontWeight: \"bold\" }}>Chủ đề gần đây</div>{\" \"}\r\n                  </Grid>\r\n                </Grid>\r\n                {this.state.courses.length === 0 ? (\r\n                  <div style={{}}>Bạn chưa thực hiện bài tập nào.</div>\r\n                ) : (\r\n                  this.state.courses.map(course => {\r\n                    return (\r\n                      <React.Fragment key={course.course_id}>\r\n                        <Grid\r\n                          container\r\n                          style={{ alignItems: \"center\", flexWrap: \"unset\" }}\r\n                        >\r\n                          <Grid item>\r\n                            <img\r\n                              className={classes.img}\r\n                              style={{\r\n                                width: \"50px\",\r\n                                height: \"50px\",\r\n                                objectFit: \"cover\",\r\n                                borderRadius: \"8px\"\r\n                              }}\r\n                              alt=\"complex\"\r\n                              src={course.background_image}\r\n                            />\r\n                          </Grid>\r\n                          <Grid item style={{ flexGrow: 1, padding: 10 }}>\r\n                            <Tooltip title=\"Tên chủ đề\" placement=\"top\">\r\n                              <div style={{ fontWeight: \"bold\" }}>\r\n                                <Link\r\n                                  className=\"item\"\r\n                                  key={course.course_id}\r\n                                  style={{ textDecoration: \"none\" }}\r\n                                  to={`${url}/courses/${course.course_id}/tasks`}\r\n                                >\r\n                                  {course.course_name}\r\n                                </Link>\r\n                              </div>\r\n                            </Tooltip>\r\n                            <Tooltip\r\n                              title=\"Số lượng bài học đã hoàn thành\"\r\n                              placement=\"top\"\r\n                            >\r\n                              <div style={{ color: \"#9d9d9d\" }}>\r\n                                {course.completed_tasks_count}/\r\n                                {course.total_tasks_count}\r\n                              </div>\r\n                            </Tooltip>\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <Tooltip title=\"Tiến độ\" placement=\"top\">\r\n                              <LinearProgress\r\n                                variant=\"determinate\"\r\n                                value={\r\n                                  (course.completed_tasks_count /\r\n                                    course.total_tasks_count) *\r\n                                  100\r\n                                }\r\n                                style={{ width: 115 }}\r\n                              />\r\n                            </Tooltip>\r\n                          </Grid>\r\n                        </Grid>\r\n                        <Divider style={{ margin: \"auto\" }} />{\" \"}\r\n                      </React.Fragment>\r\n                    );\r\n                  })\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={7} md={7}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container style={{ marginBottom: 15 }}>\r\n                  <Grid item style={{ flexGrow: 1 }}>\r\n                    <div style={{ fontWeight: \"bold\" }}>Thách thức mới</div>{\" \"}\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                {this.state.daily_minitasks.map(daily_minitask => {\r\n                  return (\r\n                    <React.Fragment key={daily_minitask.id}>\r\n                      <Grid\r\n                        container\r\n                        style={{ alignItems: \"center\", flexWrap: \"unset\" }}\r\n                      >\r\n                        <Grid item>\r\n                          <img\r\n                            className={classes.img}\r\n                            style={{\r\n                              width: \"50px\",\r\n                              height: \"50px\",\r\n                              objectFit: \"cover\",\r\n                              borderRadius: \"8px\"\r\n                            }}\r\n                            alt=\"complex\"\r\n                            src={daily_minitask.avatar}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item style={{ flexGrow: 1, padding: 10 }}>\r\n                          <div style={{ fontWeight: \"bold\" }}>\r\n                            <Link\r\n                              className=\"item\"\r\n                              style={{ textDecoration: \"none\" }}\r\n                              to={`/tasks/${daily_minitask.id}`}\r\n                            >\r\n                              {daily_minitask.mini_task_name}\r\n                            </Link>\r\n                          </div>\r\n                          <div\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Tooltip title=\"Số đậu\" placement=\"top\">\r\n                              <div style={{ color: \"#9d9d9d\" }}>\r\n                                Số đậu: {daily_minitask.code_point}\r\n                              </div>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Độ khó\" placement=\"top\">\r\n                              <div style={{ marginLeft: 10 }}>\r\n                                {this.renderLevelMinitaskChip(daily_minitask)}\r\n                              </div>\r\n                            </Tooltip>\r\n                          </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          {daily_minitask.status === \"hoanthanh\" ? (\r\n                            <Tooltip title=\"Đã hoàn thành\" placement=\"top\">\r\n                              {\" \"}\r\n                              <div\r\n                                style={{\r\n                                  width: \"20px\",\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                  marginLeft: 10\r\n                                }}\r\n                              >\r\n                                <img\r\n                                  style={{ width: \"100%\" }}\r\n                                  src={require(\"../icons/hoanthanh.svg\")}\r\n                                  alt=\"Kiwi standing on oval\"\r\n                                />\r\n                              </div>\r\n                            </Tooltip>\r\n                          ) : (\r\n                            <Tooltip title=\"Chưa hoàn thành\" placement=\"top\">\r\n                              <div\r\n                                style={{\r\n                                  width: \"20px\",\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                  marginLeft: 10\r\n                                }}\r\n                              >\r\n                                <img\r\n                                  style={{\r\n                                    width: \"100%\",\r\n                                    backgroundColor: \"#F5F5F5\",\r\n                                    borderRadius: \"50%\"\r\n                                  }}\r\n                                  src={require(\"../icons/chuahoanthanh.svg\")}\r\n                                  alt=\"Kiwi standing on oval\"\r\n                                />\r\n                              </div>\r\n                            </Tooltip>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Divider style={{ margin: \"auto\" }} />{\" \"}\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* <Grid item xs={12} sm={12} md={12}>\r\n              <Paper className={classes.paper}>\r\n                <div style={{ fontWeight: \"bold\" }}>Sự kiện nổi bật</div>{\" \"}\r\n                {this.state.events.map(event => {\r\n                  return (\r\n                    <React.Fragment key={event.id}>\r\n                      <Grid\r\n                        style={{\r\n                          border: \"1px solid #0000001f\",\r\n                          borderRadius: \"4px\",\r\n                          marginTop: 10,\r\n                          marginBottom: 10\r\n                        }}\r\n                      >\r\n                        <Card className={classes.card}>\r\n                          <a\r\n                            href={event.link}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            style={{ textDecoration: \"none\" }}\r\n                          >\r\n                            <CardActionArea>\r\n    \r\n                              <img\r\n                                style={{\r\n                                  width: \"100%\",\r\n                                  height: \"100\",\r\n                                  objectFit: \"cover\"\r\n                                }}\r\n                                alt=\"complex\"\r\n                                src={event.image}\r\n                              />\r\n                              <CardContent>\r\n                                <Typography\r\n                                  gutterBottom\r\n                                  variant=\"h5\"\r\n                                  component=\"h2\"\r\n                                >\r\n                                  {event.title}\r\n                                </Typography>\r\n                                <Typography\r\n                                  variant=\"body2\"\r\n                                  color=\"textSecondary\"\r\n                                  component=\"p\"\r\n                                >\r\n                                  {event.content}\r\n                                </Typography>\r\n                              </CardContent>\r\n                            </CardActionArea>\r\n                          </a>\r\n                        </Card>           \r\n                      </Grid>\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </Paper>\r\n            </Grid> */}\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.rootReducer.user\r\n});\r\nexport default withStyles(styles)(connect(mapStateToProps, {})(Overview));\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport \"./certificate.css\"\r\nimport { connect } from \"react-redux\";\r\nconst styles = {};\r\n\r\nclass Certificate extends Component {\r\n  componentDidMount() {\r\n    // let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n    // const currentParams = getParams(location.pathname);\r\n    // console.log(currentParams);\r\n    // axios\r\n    //   .get(\r\n    //     `https://hocodevn.com/api/v1/auth/courses/${currentParams.courseId}/tasks`\r\n    //   )\r\n    //   .then(res => {\r\n    //     console.log(res.data);\r\n    //     const tasks = res.data;\r\n    //     let tasks1 = tasks.reverse();\r\n    //     this.setState({ tasks: tasks1, isLoading: false });\r\n    //   });\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    const Certificate = this.props.Certificate;\r\n\r\n    //   const { isLoading } = this.state;\r\n    return (\r\n      <Grid\r\n        style={{\r\n          minWidth: \"1000px\",\r\n          minHeight: \"700px\",\r\n          background: `url(\"/certificateBackground.jpg\") no-repeat`,\r\n          backgroundSize: \"100%\",\r\n          position: \"relative\"\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          style={{\r\n            justifyContent: \"center\",\r\n           \r\n            position: \"absolute\",\r\n            top:\"37%\"\r\n          }}\r\n        >\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <p\r\n              style={{ fontFamily: `'Dancing Script', cursive`, fontSize: 40, margin:\"15px 0px\", textAlign: \"center\",}}\r\n            >\r\n              {Certificate.user === undefined ?\"\":Certificate.user.lastname} {Certificate.user === undefined ?\"\":Certificate.user.firstname}\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} style={{margin:\"0px 135px\"}}>\r\n            {\" \"}\r\n            \r\n            <div><p style={{ fontFamily: `'Dancing Script', cursive`, fontSize:30,margin:\"20px 0px\", textAlign:\"center\"}}>For successfully completing the Hocode program.</p></div>\r\n            <div><p style={{ margin:\"20px 0px\", textAlign:\"center\",textTransform:\"uppercase\",fontWeight:\"bold\",fontSize:20}}>ID:  {Certificate.cert === undefined ?\"\":Certificate.cert.search_id}</p></div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid style={{position:\"absolute\",left:\"22%\",bottom:\"14%\",transform:\"translateX(-50%)\"}}>\r\n        {Certificate.cert === undefined ?\"\":Certificate.cert.timestamp}\r\n        </Grid>\r\n        <Grid style={{position:\"absolute\",right:\"20%\",bottom:\"10%\",transform:\"translateX(50%)\"}}>\r\n        {Certificate.config === undefined ?\"\": <img src={Certificate.config.electronic_signature} style={{height:90}} alt=\"electronic_signature\"/>}\r\n           \r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, {})(Certificate)\r\n);\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { connect } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Certificate from \"./Certificate\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\nconst styles = {};\r\n\r\nclass PrintBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      minitasks: [],\r\n      openDialogCertificate: false,\r\n      isLoading: true,\r\n      certificate: {},\r\n      review_point: 0,\r\n      user_codepoint: 0,\r\n      isLoadingCert: false\r\n    };\r\n  }\r\n\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios\r\n        .get(`https://hocodevn.com/api/v1/curd/configs/byname/hocode`)\r\n        .then(res => {\r\n          console.log(res.data);\r\n          const certificateConfig = res.data;\r\n\r\n          this.setState({ review_point: certificateConfig.review_point });\r\n        }),\r\n      axios.get(\"https://hocodevn.com/auth/userinfo\").then(res => {\r\n        console.log(res.data);\r\n        this.setState({ user_codepoint: res.data.codepoint });\r\n      }),\r\n      axios.get(`https://hocodevn.com/auth/completeminitask`).then(res => {\r\n        const minitasks = res.data;\r\n        console.log(minitasks);\r\n        this.setState({ minitasks });\r\n      })\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  componentDidMount() {\r\n    this.getApi();\r\n  }\r\n  getCertificate = async () => {\r\n    this.setState({\r\n      openDialogCertificate: true\r\n    });\r\n    this.setState({ isLoadingCert: true });\r\n    await Promise.all([\r\n      axios.get(`https://hocodevn.com/api/v1/auth/reviewcert`).then(res => {\r\n        const certificate = res.data;\r\n        console.log(res.data);\r\n        this.setState({ certificate });\r\n        this.setState({ isLoadingCert: false });\r\n      })\r\n    ]);\r\n  };\r\n  handleDialogCertificateOpen = () => {\r\n    this.getCertificate();\r\n  };\r\n\r\n  handleDialogCertificateClose = () => {\r\n    this.setState({ openDialogCertificate: false });\r\n  };\r\n\r\n  renderDialog = (certificate) =>{\r\n    if(certificate.cert !== undefined){\r\n     if(certificate.cert.status === \"Inactive\"){\r\n       return (\r\n        <DialogContent dividers>\r\n        <Typography\r\n        variant=\"body2\"\r\n        color=\"textSecondary\"\r\n        component=\"p\"\r\n        style={{ marginLeft: 4, textAlign: \"center\" }}\r\n      >\r\n        Bạn sẽ nhận được chứng chỉ nếu số đậu của bạn lớn hơn{\" \"}\r\n        {this.state.review_point}\r\n      </Typography>\r\n      </DialogContent>\r\n       )\r\n     }\r\n     else{\r\n       return(      <>\r\n\r\n        <DialogContent dividers>\r\n          \r\n          <Grid container spacing={2}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={12}\r\n              sm={12}\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <Certificate\r\n                ref={el => (this.CertificateRef = el)}\r\n                Certificate={this.state.certificate}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={this.handleDialogCertificateClose}\r\n        >\r\n          <Grid\r\n            style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n          >\r\n            <ReactToPrint\r\n              trigger={() => (\r\n                <Button\r\n                  style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n                  variant=\"contained\"\r\n                >\r\n                  In chứng chỉ\r\n                </Button>\r\n              )}\r\n              content={() => this.CertificateRef}\r\n            />\r\n          </Grid>\r\n        </DialogTitle>\r\n      </>)\r\n     }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        {this.state.isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            style={{ height: \"100%\", maxHeight: 400 }}\r\n          >\r\n            <Grid item xs={12} sm={4} md={4}>\r\n              <Paper\r\n                style={{\r\n                  height: \"100%\",\r\n                  padding: 10,\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\"\r\n                }}\r\n              >\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Grid item container style={{ justifyContent: \"center\" }}>\r\n                    <Grid\r\n                      item\r\n                      xs={4}\r\n                      sm={4}\r\n                      md={4}\r\n                      style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                    >\r\n                      <img\r\n                        style={{\r\n                          width: \"100px\",\r\n                          height: \"100px\",\r\n                          borderRadius: \"50%\"\r\n                        }}\r\n                        alt=\"avatar\"\r\n                        src={this.props.user.avatar}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      gutterBottom\r\n                      style={{ color: \"#4978cc\" }}\r\n                    >\r\n                      {this.props.user.lastname} {this.props.user.firstname}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h5\" style={{ color: \"#4978cc\" }}>\r\n                      {this.props.user.codepoint}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                      style={{ marginLeft: 4, color: \"#4978cc\" }}\r\n                    >\r\n                      {/* {course.total_minitask} */}\r\n                      Điểm tích lũy\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ textAlign: \"center\", marginTop:\"20px\" }}>\r\n                    <Typography variant=\"h5\" style={{ color: \"#4978cc\" }}>\r\n                      {this.state.minitasks.length}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                      style={{ marginLeft: 4, color: \"#4978cc\" }}\r\n                    >\r\n                      {/* {course.total_minitask} */}\r\n                      Bài tập đã hoàn thành\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ textAlign: \"center\", marginTop:\"20px\" }}>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                      style={{ marginLeft: 4, textAlign: \"center\" }}\r\n                    >\r\n                      Bạn sẽ nhận được chứng chỉ nếu số đậu của bạn lớn hơn{\" \"}\r\n                      {this.state.review_point}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item style={{ textAlign: \"center\" }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{ background: \"#1ECD97\", color: \"#fff\" }}\r\n                      onClick={this.handleDialogCertificateOpen}\r\n                    >\r\n                      Xét chứng chỉ\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={8}>\r\n              <Paper\r\n                style={{\r\n                  minHeight: 400,\r\n                  overflowY: \"auto\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\"\r\n                }}\r\n              >\r\n                <Grid container style={{ padding: 10 }}>\r\n                  <Grid item style={{ flexGrow: 1 }}>\r\n                    <div style={{ fontWeight: \"bold\" }}>\r\n                      Danh sách bài tập đã hoàn thành\r\n                    </div>{\"\"}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container style={{ padding: 30 }}>\r\n                  {this.state.minitasks.length !== 0 ? (\r\n                    this.state.minitasks.map(minitask => {\r\n                      return (\r\n                        <React.Fragment key={minitask.id}>\r\n                          <Grid container style={{ alignItems: \"center\" }}>\r\n                            <Grid item>\r\n                              <img\r\n                                className={classes.img}\r\n                                style={{\r\n                                  width: \"50px\",\r\n                                  height: \"50px\",\r\n                                  objectFit: \"cover\",\r\n                                  borderRadius: \"8px\"\r\n                                }}\r\n                                alt=\"complex\"\r\n                                src={minitask.avatar}\r\n                              />\r\n                            </Grid>\r\n                            <Grid item style={{ flexGrow: 1, padding: 10 }}>\r\n                              <div style={{ fontWeight: \"bold\" }}>\r\n                                <Link\r\n                                  className=\"item\"\r\n                                  style={{ textDecoration: \"none\" }}\r\n                                  to={`/tasks/${minitask.id}`}\r\n                                >\r\n                                  {minitask.mini_task_name}\r\n                                </Link>\r\n                              </div>\r\n                              <div style={{ color: \"#9d9d9d\" }}>\r\n                                Số đậu: {minitask.code_point}\r\n                              </div>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider style={{ margin: \"auto\", width: \"100%\" }} />{\" \"}\r\n                        </React.Fragment>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <Grid\r\n                      container\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                      style={{ flexGrow: 1 }}\r\n                    >\r\n                      <Grid item>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                          style={{ marginLeft: 4 }}\r\n                        >\r\n                          Bạn chưa hoàn thành bài tập nào.\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Dialog\r\n              maxWidth={false}\r\n              open={this.state.openDialogCertificate}\r\n              onClose={this.handleDialogCertificateClose}\r\n              aria-labelledby=\"customized-dialog-title\"\r\n            >\r\n              {\" \"}\r\n              {this.state.isLoadingCert === true ? (\r\n                <div\r\n                  className=\"sweet-loading\"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"100vw\",\r\n                    height: \"100vh\",\r\n                    overflow: \"hidden\"\r\n                  }}\r\n                >\r\n                  <HashLoader\r\n                    sizeUnit={\"px\"}\r\n                    size={50}\r\n                    color={\"#AEA8A8\"}\r\n                    loading={this.state.isLoadingCert}\r\n                  />\r\n                </div>\r\n              ) : ( \r\n                \r\n                this.renderDialog(this.state.certificate)\r\n              )}\r\n            </Dialog>\r\n          </Grid>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, {})(PrintBody)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport \"./taskItem.css\";\r\n\r\nconst styles = {\r\n  TaskItem: {\r\n    borderRadius: \"4px\",\r\n    overflow: \"hidden\",\r\n    marginBottom: \"50px\",\r\n    boxShadow:\r\n      \"rgba(0, 0, 0, 0.2) 0px 0px 0px 0px, rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px\"\r\n  },\r\n  MiniTaskItem: {\r\n    margin: \"5px\",\r\n    backgroundColor: \"#dddddd\",\r\n    padding: \"5px 10px\",\r\n    paddingTop: \"10px\",\r\n    borderRadius: \"9px\",\r\n    boxShadow:\r\n      \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n  }\r\n};\r\n\r\n\r\nconst titleCase = string => {\r\n  return string\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(word => {\r\n      return word.charAt(0).toUpperCase() + word.slice(1);\r\n    })\r\n    .join(\" \");\r\n};\r\n\r\nclass TaskItem extends Component {\r\n  renderLevelMinitaskChip(minitask) {\r\n    minitask.level = titleCase(minitask.level);\r\n    console.log(minitask.level)\r\n    if (minitask.level === \"Easy\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#76d38e\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else if (minitask.level === \"Medium\") {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"#1d97c6\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <Chip\r\n          style={{ background: \"red\", color: \"white\" }}\r\n          size=\"small\"\r\n          label={`${minitask.level}`}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  renderMiniItem(minitask) {\r\n    //miniItemStatus\r\n\r\n    if (minitask.status === \"hoanthanh\") {\r\n      return (\r\n        <Link\r\n          to={`/tasks/${minitask.id}`}\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            \r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Tooltip title=\"Tên bài tập\" placement=\"top-start\">\r\n            <div style={{ flexGrow: 1 }}> {minitask.mini_task_name}</div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Số đậu\" placement=\"top\">\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                margin: \"0px 4px\",\r\n                color: \"#4978cc\",\r\n                marginLeft: 10,\r\n                height: 30\r\n              }}\r\n              className=\"centerDiv\"\r\n            >\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    verticalAlign: \"middle\",\r\n                    lineHeight: \"30px\",\r\n                    margin: 0\r\n                  }}\r\n                >\r\n                  {minitask.code_point}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <EmojiNatureIcon style={{ fontSize: 24, marginRight: 1 }} />\r\n              </div>\r\n            </div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Độ khó\" placement=\"top\">\r\n            <div className=\"level-minitask\" style={{ marginLeft: 0 }}>\r\n              {this.renderLevelMinitaskChip(minitask)}\r\n            </div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Hoàn thành\" placement=\"top\">\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginLeft: 10\r\n              }}\r\n            >\r\n              <img\r\n                style={{ width: \"100%\" }}\r\n                src={require(\"../icons/hoanthanh.svg\")}\r\n                alt=\"Kiwi standing on oval\"\r\n              />\r\n            </div>\r\n          </Tooltip>\r\n        </Link>\r\n      );\r\n    } else if (minitask.status === \"chuahoanthanh\" && minitask.vitri === true) {\r\n      return (\r\n        <a\r\n          href=\"giang\"\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n          \r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div style={{ width: \"1em\" }}>\r\n            <img\r\n              style={{ width: \"100%\" }}\r\n              src={require(\"../icons/user.svg\")}\r\n              alt=\"Kiwi standing on oval\"\r\n            />\r\n          </div>\r\n        </a>\r\n      );\r\n    } else if (\r\n      minitask.status === \"chuahoanthanh\" &&\r\n      minitask.vitri === false\r\n    ) {\r\n      return (\r\n        <Link\r\n          to={`/tasks/${minitask.id}`}\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            \r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Tooltip title=\"Tên bài thực hành\" placement=\"top-start\">\r\n            <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Số đậu\" placement=\"top\">\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                margin: \"0px 4px\",\r\n                color: \"#4978cc\",\r\n                marginLeft: 10\r\n              }}\r\n            >\r\n              {minitask.code_point}\r\n              <EmojiNatureIcon style={{ fontSize: 16, marginRight: 1 }} />\r\n            </div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Độ khó\" placement=\"top\">\r\n            <div className=\"level-minitask\" style={{ marginLeft: 10 }}>\r\n              {\" \"}\r\n              {this.renderLevelMinitaskChip(minitask)}\r\n            </div>\r\n          </Tooltip>\r\n          <Tooltip title=\"Chưa hoàn thành\" placement=\"top\">\r\n            <div\r\n              style={{\r\n                width: \"20px\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginLeft: 10\r\n              }}\r\n            >\r\n              <img\r\n                style={{\r\n                  width: \"100%\",\r\n                  backgroundColor: \"#F5F5F5\",\r\n                  borderRadius: \"50%\"\r\n                }}\r\n                src={require(\"../icons/chuahoanthanh.svg\")}\r\n                alt=\"Kiwi standing on oval\"\r\n              />\r\n            </div>\r\n          </Tooltip>\r\n        </Link>\r\n      );\r\n    } else if (minitask.status === \"yeucaumokhoa\") {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            textDecoration: \"none\",\r\n            color: \"#595959\",\r\n            \r\n          }}\r\n        >\r\n          <div></div>\r\n          <div style={{ flexGrow: 1 }}>{minitask.mini_task_name}</div>\r\n          <div className=\"unlock\" style={{ display: \"flex\" }}>\r\n            <div style={{ width: \"1em\" }}>\r\n              <img\r\n                style={{ width: \"100%\" }}\r\n                src={require(\"../icons/padlock-unlock.svg\")}\r\n                alt=\"Kiwi standing on oval\"\r\n              />\r\n            </div>\r\n            <div className=\"hidden\" style={{ display: \"none\" }}>\r\n              {minitask.point_unlock}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    const { classes, task } = this.props;\r\n    //console.log(task)\r\n    return (\r\n      <React.Fragment>\r\n        {/*<div  \r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            color: \"#595959\",\r\n            fontWeight: \"bold\",\r\n           \r\n            marginBottom: \"50px\",\r\n            fontSize:'2em'\r\n          }}\r\n        >\r\n          Certificate  \r\n        </div>*/}\r\n        <Grid container direction=\"column\" className={`${classes.TaskItem}`}>\r\n          <Grid item container direction=\"column\" alignItems=\"center\">\r\n            <Grid\r\n              xs={6}\r\n              md={6}\r\n              item\r\n              style={{\r\n                padding: \"8px\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"9px\",\r\n                marginBottom: \"-20px\",\r\n                zIndex: \"1\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                whiteSpace: \" nowrap\",\r\n                textAlign: \"center\",\r\n                width: \"200px\",\r\n                boxShadow:\r\n                  \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n              }}\r\n            >\r\n              {task.task_name}\r\n              {/* tên task */}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{ height: \"200px\", width: \"100%\", overflow: \"hidden\" }}\r\n          >\r\n            {\" \"}\r\n            {/* hình task*/}\r\n            <img\r\n              src={task.background_image}\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                borderRadius: \"4px 4px 0 0\"\r\n              }}\r\n              alt=\"\"\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            style={{\r\n              padding: \"10px 0\",\r\n              background: \"white\",\r\n              boxShadow:\r\n                \"0px 0px 0px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {/* danh sách mini task */}\r\n            {task.minitasks.map(minitask => (\r\n              <Grid\r\n                item\r\n                className={`${classes.MiniTaskItem}`}\r\n                key={minitask.id}\r\n              >\r\n                {\" \"}\r\n                {this.renderMiniItem(minitask)}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TaskItem);\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport axios from \"axios\";\r\nimport { matchPath } from \"react-router-dom\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport LaptopIcon from \"@material-ui/icons/Laptop\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { randomColor } from \"../course/CourseItem\";\r\n\r\nconst styles = {\r\n  card: {\r\n    height: 150,\r\n    width: \"100%\"\r\n  },\r\n\r\n  TasksContainer: {\r\n    // paddingTop: 30,\r\n\r\n    minHeight: \"100vh\"\r\n  }\r\n};\r\nconst getParams = pathname => {\r\n  const course = matchPath(pathname, {\r\n    path: `/profile/courses/:courseId/tasks`\r\n  });\r\n  return (course && course.params) || {};\r\n};\r\nclass TaskBody extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [],\r\n      isLoading: true,\r\n      course: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let location = this.props.location; // cant use this.props.match to get param in url, => pass 'location' from profile page and use matchparam to get param\r\n\r\n    const currentParams = getParams(location.pathname);\r\n    console.log(currentParams);\r\n    axios\r\n      .get(\r\n        `https://hocodevn.com/api/v1/auth/courses/${currentParams.courseId}/tasks`\r\n      )\r\n      .then(res => {\r\n        console.log(res.data);\r\n        const tasks = res.data;\r\n        let tasks1 = tasks.reverse();\r\n        this.setState({ tasks: tasks1, isLoading: false });\r\n      });\r\n    axios\r\n      .get(`https://hocodevn.com/api/v1/courses/${currentParams.courseId}`)\r\n      .then(res => {\r\n        const course = res.data;\r\n        console.log(course);\r\n        this.setState({ course: course });\r\n      });\r\n\r\n    /* setTimeout(()=>{\r\n            console.log(this.state.tasks)\r\n        },2000)*/\r\n  }\r\n\r\n  onClickRating(val) {\r\n    let location = this.props.location;\r\n\r\n    const currentParams = getParams(location.pathname);\r\n\r\n    var newcourse = this.state.course;\r\n    if (newcourse.rating === null) newcourse.rating = [];\r\n    newcourse.rating.push(val);\r\n    newcourse.rating_value = average(newcourse.rating);\r\n    // console.log(newcourse);\r\n    this.setState({ course: newcourse });\r\n\r\n    axios\r\n      .put(\r\n        `https://hocodevn.com/api/v1/curd/courses/${currentParams.courseId}`,\r\n        newcourse\r\n      )\r\n      .then(res => {\r\n        // const course = res.data;\r\n        // this.setState({ course: course });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { tasks, course } = this.state;\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <Grid container className={classes.TasksContainer} justify=\"center\">\r\n        {/* <Card className={classes.card}>\r\n</Card> */}\r\n        {isLoading ? (\r\n          <div\r\n            className=\"sweet-loading\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n              height: \"100vh\"\r\n            }}\r\n          >\r\n            <HashLoader\r\n              sizeUnit={\"px\"}\r\n              size={50}\r\n              color={\"#AEA8A8\"}\r\n              loading={isLoading}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Grid item xs={12} sm={12} style={{ marginBottom: 30 }}>\r\n              <Paper>\r\n                <Grid container style={{ padding: 30 }}>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                      {course.course_name}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12}>\r\n                    <p>{course.course_desc}</p>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    container\r\n                    style={{ justifyContent: \"space-between\" }}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\"\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        className={classes.smallAvatar}\r\n                        style={{ backgroundColor: randomColor() }}\r\n                      >\r\n                        {\" \"}\r\n                        {course.user_create\r\n                          ? course.user_create.charAt(0).toUpperCase()\r\n                          : \"H\"}\r\n                      </Avatar>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ marginLeft: 4 }}\r\n                      >\r\n                        {/* {course.total_minitask} */}\r\n                        {course.user_create !== \"\"\r\n                          ? course.user_create\r\n                          : \"Hocode\"}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\"\r\n                      }}\r\n                    >\r\n                      <LaptopIcon />\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ marginLeft: 4 }}\r\n                      >\r\n                        {/* {course.total_minitask} */}\r\n                        {course.total_minitask} bài học\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\"\r\n                      }}\r\n                    >\r\n                      <Rating\r\n                        name=\"a\"\r\n                        value={course.rating_value}\r\n                        read-only=\"true\"\r\n                        precision={0.5}\r\n                        size=\"large\"\r\n                        onChange={(event, newValue) => {\r\n                          this.onClickRating(newValue);\r\n                        }}\r\n                      />\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ marginLeft: 4 }}\r\n                      >\r\n                        {/* {course.total_minitask} */}\r\n                        Đánh giá({course.rating ? course.rating.length : 0})\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid\r\n                      item\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\"\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                        style={{ marginRight: 4 }}\r\n                      >\r\n                        Tình trạng:\r\n                      </Typography>\r\n                      <CircularProgress variant=\"determinate\" value={100} />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} style={{ padding: \"0px 10px\" }}>\r\n              {tasks.map(task => (\r\n                <TaskItem key={task.id} task={task} />\r\n              ))}\r\n            </Grid>\r\n          </React.Fragment>\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst average = list => list.reduce((prev, curr) => prev + curr) / list.length;\r\n\r\nexport default withStyles(styles)(TaskBody);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport { logoutUser } from \"../../../js/actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\"\r\n  }\r\n})(props => (\r\n  <Menu\r\n    style={{ paddingLeft: \"5px\", paddingRight: \"5px\" }}\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\"\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles(theme => ({\r\n  root: {\r\n    minHeight: \"unset\",\r\n    height:\"25px\",\r\n    \"&:focus\": {\r\n      // backgroundColor: \"red\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n\r\nfunction CustomizedMenus(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft: 3 }}>\r\n      <MoreHorizIcon\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        style={{ color: \"#282828\" }}\r\n      />\r\n\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem onClick={props.logoutUser}>\r\n          <ExitToAppIcon style={{ fontSize: 16 }} />\r\n          <p style={{ fontSize: 12, marginLeft: \"3px\" }}>Đăng xuất</p>\r\n        </StyledMenuItem>\r\n        <StyledMenuItem>\r\n          <AccountBoxIcon style={{ fontSize: 16 }} />\r\n          \r\n          <Link to=\"/profile/account\" style={{textDecoration: \"none\"}} onClick={()=>{setAnchorEl(null)}}>\r\n            <p style={{ fontSize: 12, marginLeft: \"3px\", textDecoration: \"none\" }}>Thông tin cá nhân</p>\r\n          </Link>\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(CustomizedMenus);\r\n","import React from \"react\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\n//import Typography from \"@material-ui/core/Typography\";\r\n//import Paper from \"@material-ui/core/Paper\";\r\n//import InputBase from \"@material-ui/core/InputBase\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport EmojiNatureIcon from \"@material-ui/icons/EmojiNature\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport \"./appbarcontent.css\";\r\n//import IconButton from \"@material-ui/core/IconButton\";\r\nconst styles = theme => ({\r\n  searchComponent: {\r\n    padding: \"2px 15px 2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: \"#ebebeb\",\r\n    height: \"35px\",\r\n    borderRadius: \"unset!important\"\r\n  },\r\n  inputSearchComponent: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    fontSize: 12\r\n  },\r\n  iconButtonSearchComponent: {\r\n    padding: 10\r\n  },\r\n  mobileHide: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n});\r\nclass AppBarContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div style={{ display: \"flex\", flexGrow: 1 }}>\r\n          <div style={{ display: \"flex\" }}>\r\n            {/* <Typography variant=\"h6\" noWrap style={{ borderRadius: \"30px\" }}>\r\n              {\" \"}\r\n            \r\n              <Paper className={classes.searchComponent}>\r\n                <InputBase\r\n                  className={classes.inputSearchComponent}\r\n                  placeholder=\"Tìm kiếm khóa học,...\"\r\n                  inputProps={{ \"aria-label\": \"search google maps\" }}\r\n                />\r\n                <IconButton\r\n                  className={classes.iconButtonSearchComponent}\r\n                  aria-label=\"search\"\r\n                >\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </Paper>\r\n            </Typography> */}\r\n\r\n            {this.props.user.role === \"mod\" ||\r\n            this.props.user.role === \"admin\" ? (\r\n              <Link\r\n                to=\"/profile/minitasks/createminitask\"\r\n                style={{ textDecoration: \"none\",\r\n              \r\n              \r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}\r\n              >\r\n                <Fab\r\n                  //className={classes.mobileHide}\r\n                  variant=\"extended\"\r\n                  aria-label=\"like\"\r\n                  style={{\r\n                    height: \"32px\",\r\n                    fontSize: \"10px\",\r\n                    background: \"#dbe4f8\",\r\n                    color: \"#1f74be\",\r\n                    marginLeft: 10\r\n                  }}\r\n                >\r\n                  <NavigationIcon style={{ fontSize: 14, marginRight: 2 }} />\r\n                  <div className=\"dangBaiTap\">Đăng bài tập</div>\r\n                </Fab>\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              flexGrow: 1,\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                fontSize: 12,\r\n                margin: \"0px 4px\",\r\n                color: \"#4978cc\",\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div>\r\n              Số đậu: {this.props.user.codepoint}\r\n</div>              <div>\r\n              \r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                color: \"#595959\",\r\n                // fontFamily: \"Yanone Kaffeesatz, sans-serif\",\r\n                fontSize: \"20px\",\r\n\r\n                padding: \"5px\"\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <div>{this.props.user.firstname} </div>\r\n            </div>\r\n            <Avatar\r\n              className={classes.mobileHide}\r\n              style={{ width: \"30px\", height: \"30px\", marginLeft: 10 }}\r\n              alt=\"Remy Sharp\"\r\n              src={this.props.user.avatar}\r\n            />\r\n            <UserMenu />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { getUser })(AppBarContent)\r\n);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUser } from \"../../../js/actions/userAction\";\r\nimport axios from \"axios\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\n\r\n//import { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cover: {\r\n    width: 151\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  }\r\n});\r\nclass NavRight extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      daily_minitask: {},\r\n      isLoading: true,\r\n      books: [],\r\n      events: [],\r\n      openDialogReadmore: false,\r\n      bookcontent: \"\",\r\n      booktitlet: \"\",\r\n      bookImage: \"\"\r\n    };\r\n  }\r\n  getApi = async () => {\r\n    await Promise.all([\r\n      axios.get(`https://hocodevn.com/api/v1/books`).then(res => {\r\n        const books = res.data;\r\n        console.log(books);\r\n        this.setState({ books });\r\n      }),\r\n      axios.get(`https://hocodevn.com/api/v1/events`).then(res => {\r\n        const events = res.data;\r\n        console.log(events);\r\n        this.setState({ events });\r\n      })\r\n    ]);\r\n    this.setState({ isLoading: false });\r\n  };\r\n  handleClickDialogReadmoreOpen = (bookcontent, bookImage, booktitlet) => {\r\n    this.setState({\r\n      openDialogReadmore: true,\r\n      bookcontent: bookcontent,\r\n      bookImage: bookImage,\r\n      booktitlet: booktitlet\r\n    });\r\n  };\r\n\r\n  handleDialogReadmoreClose = () => {\r\n    this.setState({ openDialogReadmore: false });\r\n  };\r\n  componentDidMount() {\r\n    this.props.getUser();\r\n    this.getApi();\r\n  }\r\n  limitText(text, limitNum) {\r\n    let newText = text;\r\n    if (text.length > limitNum) {\r\n      newText = text.substring(0, limitNum);\r\n    }\r\n    return newText;\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const itemCard = (listitem, type, time) => (\r\n      <Grid\r\n        xs\r\n        item\r\n        // style={{\r\n        //   flexDirection: \"column\",\r\n        //   justifyContent: \"center\",\r\n        //   display: \"flex\"\r\n        // }}\r\n      >\r\n        <p style={{fontWeight:\"bold\"}}>{type === \"books\" ? \"Sách lập trình\" : \"\"} {type === \"events\" ? \"Sự kiện nổi bật\" : \"\"}</p>\r\n        \r\n\r\n        <Carousel indicators={false} interval={time}>\r\n          {/* <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Sách đề xuất\r\n          </Typography> */}\r\n          {listitem.map(book => {\r\n            return (\r\n              <React.Fragment key={book.id}>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                  <Grid\r\n                    style={{\r\n                      marginTop: 10,\r\n                      marginBottom: 10\r\n                    }}\r\n                  >\r\n                    <Card className={classes.card}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          if (type === \"books\") {\r\n                            this.handleClickDialogReadmoreOpen(\r\n                              book.content,\r\n                              book.image,\r\n                              book.title\r\n                            );\r\n                          }\r\n                          if (type === \"events\") {\r\n                            window.open(book.link, \"_blank\");\r\n                          }\r\n                        }}\r\n                      >\r\n                        {/* <img\r\n                         \r\n                          alt=\"complex\"\r\n                          src={book.image}\r\n                        /> */}\r\n                        <div\r\n                          style={{\r\n                            width: \"100%\",\r\n                            height: type === \"books\" ? \"200px\" : \"60px\",\r\n                            // objectFit: \"cover\",\r\n                            background: `url(${book.image}) no-repeat center`,\r\n                            backgroundSize: \"cover\"\r\n                          }}\r\n                        ></div>\r\n                        <CardContent>\r\n                          <Typography\r\n                            gutterBottom\r\n                            variant=\"h5\"\r\n                            component=\"h2\"\r\n                            style={{\r\n                              height: 55,\r\n                              overflow: \"hidden\",\r\n                              wordBreak: \"break-word\"\r\n                            }}\r\n                          >\r\n                            {book.title}\r\n                          </Typography>\r\n\r\n                          {book.content.length > 100 ? (\r\n                            <React.Fragment>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                component=\"p\"\r\n                                style={{\r\n                                  height: 48,\r\n                                  overflow: \"hidden\",\r\n                                  wordBreak: \"break-word\"\r\n                                }}\r\n                              >\r\n                                {this.limitText(book.content, 100)}...\r\n                              </Typography>\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            book.content\r\n                          )}\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        <Dialog\r\n          open={this.state.openDialogReadmore}\r\n          onClose={this.handleDialogReadmoreClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n        >\r\n          <DialogTitle\r\n            id=\"customized-dialog-title\"\r\n            onClose={this.handleDialogReadmoreClose}\r\n          >\r\n            {this.state.booktitlet}\r\n          </DialogTitle>\r\n\r\n          <DialogContent dividers>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid\r\n                item\r\n                xs={4}\r\n                style={{\r\n                  background: `url(${this.state.bookImage}) no-repeat center`,\r\n                  backgroundSize: \"cover\",\r\n                  height: \"300px\"\r\n                }}\r\n              ></Grid>\r\n              <Grid\r\n                item\r\n                xs={8}\r\n                style={{\r\n                  padding: \"16px\"\r\n                }}\r\n              >\r\n                {/* <DialogContentText id=\"alert-dialog-description\">\r\n                  {this.state.booktitlet}\r\n\r\n                </DialogContentText> */}\r\n\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {this.state.bookcontent}\r\n                </DialogContentText>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Grid>\r\n    );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          // alignItems=\"center\"\r\n          style={{ height: \"100%\",flexWrap:\"unset\" }}\r\n        >\r\n          {typeof this.state.books !== \"undefined\" &&\r\n          this.state.books.length > 0\r\n            ? itemCard(this.state.books, \"books\", 8000)\r\n            : null}\r\n\r\n          {typeof this.state.events !== \"undefined\" &&\r\n          this.state.events.length > 0\r\n            ? itemCard(this.state.events, \"events\", 12000)\r\n            : null}\r\n\r\n          {/* <Grid style={{ flexGrow: 1 }}>\r\n            <Grid item xs={12} sm={12} md={12}>\r\n              <Paper className={classes.paper}>\r\n                <div style={{ fontWeight: \"bold\" }}>Sự kiện nổi bật</div>{\" \"}\r\n                <Carousel>\r\n                  {this.state.events.map(event => {\r\n                    return (\r\n                      <React.Fragment key={event.id}>\r\n                        <Grid\r\n                          style={{\r\n                            border: \"1px solid #0000001f\",\r\n                            borderRadius: \"4px\",\r\n                            marginTop: 10,\r\n                            marginBottom: 10\r\n                          }}\r\n                        >\r\n                          <Card className={classes.card}>\r\n                            <a\r\n                              href={event.link}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                              style={{ textDecoration: \"none\" }}\r\n                            >\r\n                              <CardActionArea>\r\n                                <img\r\n                                  style={{\r\n                                    width: \"100%\",\r\n                                    height: \"100\",\r\n                                    objectFit: \"cover\"\r\n                                  }}\r\n                                  alt=\"complex\"\r\n                                  src={event.image}\r\n                                />\r\n                                <CardContent>\r\n                                  <Typography\r\n                                    gutterBottom\r\n                                    variant=\"h5\"\r\n                                    component=\"h2\"\r\n                                  >\r\n                                    {event.title}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                    component=\"p\"\r\n                                  >\r\n                                    {event.content}\r\n                                  </Typography>\r\n                                </CardContent>\r\n                              </CardActionArea>\r\n                            </a>\r\n                          </Card>\r\n                        </Grid>\r\n                      </React.Fragment>\r\n                    );\r\n                  })}\r\n                </Carousel>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid> */}\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { getUser })(NavRight)\r\n);\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\n//import ReactAdmin from \"../adminPage/hocode/ReactAdmin\";\r\nimport BallotIcon from \"@material-ui/icons/Ballot\";\r\nimport CardMembershipIcon from \"@material-ui/icons/CardMembership\";\r\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../js/actions/authActions\";\r\nimport Account from \"./content/account/Account\";\r\nimport CourseBody from \"./content/course/CourseBody1\";\r\nimport CreateMiniTask from \"./content/minitask/CreateMiniTaskBody\";\r\n//import MinitaskEdit from \"./content/minitask/MinitaskEdit\";\r\nimport Overview from \"./content/overview/Overview\";\r\nimport PrintBody from \"./content/print/PrintBody\";\r\nimport TaskBody from \"./content/task/TaskBody\";\r\nimport AppBarContent from \"./header/AppBarContent\";\r\nimport NavRight from \"./navRight/NavRight\";\r\nimport \"./profilepage.css\";\r\n\r\nconst drawerWidth = 240;\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    background:\"#fff\"\r\n  },\r\n  drawerMain: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0\r\n    }\r\n  },\r\n  navRight: {\r\n    top: \"65px\",\r\n    order: 2,\r\n    width: \"225px\",\r\n    height: \"calc(100vh - 65px)\",\r\n    display: \"none\",\r\n    padding: \"16px 32px\",\r\n    position: \"relative\", // sticky\r\n    // marginTop: \"65px\",\r\n    overflow:\"hidden\",\r\n    flexShrink: 0,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"block\"\r\n    },\r\n    background: \"white\"\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth\r\n    },\r\n    background: \"#fff\",\r\n    boxShadow: \"unset!important\",\r\n    borderBottom: \"1px solid rgba(76, 87, 102, .1)\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    },\r\n    borderRadius: \"unser !important\"\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    background: \"#f3f3f3\"\r\n  },\r\n  searchComponent: {\r\n    padding: \"2px 15px 2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    background: \"#ebebeb\",\r\n    height: \"35px\",\r\n    borderRadius: \"unset!important\"\r\n  },\r\n  inputSearchComponent: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    fontSize: 12\r\n  },\r\n  iconButtonSearchComponent: {\r\n    padding: 10\r\n  }\r\n});\r\nclass ProfilePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      courses: [],\r\n      mobileOpen: false,\r\n      menu: 1\r\n    };\r\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\r\n  }\r\n\r\n  handleDrawerToggle() {\r\n    this.setState({ mobileOpen: !this.state.mobileOpen });\r\n  }\r\n  onClickMenuItem(menu) {\r\n    return e => {\r\n      this.setState({\r\n        menu: menu\r\n      });\r\n    };\r\n  }\r\n  onLogout = e => {\r\n    e.preventDefault();\r\n    console.log(this.props);\r\n    this.props.logoutUser();\r\n    const { history } = this.props;\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme, container } = this.props;\r\n    const { mobileOpen } = this.state;\r\n    let { path, url } = this.props.match;\r\n    console.log(\"[path]\");\r\n    console.log(path);\r\n    const {\r\n      location: { pathname }\r\n    } = this.props;\r\n\r\n    const drawer = (\r\n      <div style={{ height: \"100%\", overflow: \"hidden\" }}>\r\n        <div\r\n          className={classes.toolbar}\r\n          style={{\r\n            borderBottom: \"1px solid rgba(76, 87, 102, .1)\",\r\n            minHeight: 65,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <div className=\"logo\">\r\n            <Link to=\"/profile\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                alt=\"\"\r\n                style={{ height: \"40px\" }}\r\n              ></img>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <MenuList className=\"menuLeftDrawer\" style={{ height: \"100%\" }}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            // justify=\"center\"\r\n            // alignItems=\"center\"\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <Link to={`${url}/overview`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/overview` || pathname === `${url}` || pathname === `${url}/`}\r\n                onClick={this.onClickMenuItem(1)}\r\n              >\r\n                <AppsIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Trang chủ</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/course`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/course`}\r\n                onClick={this.onClickMenuItem(1)}\r\n              >\r\n                <ImportContactsIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Chủ đề</p>\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <Link to={`${url}/print`}>\r\n              <MenuItem\r\n                selected={pathname === `${url}/print`}\r\n                onClick={this.onClickMenuItem(1)}\r\n              >\r\n                <CardMembershipIcon style={{ fontSize: 16 }} />\r\n                <p style={{ fontSize: 14, marginLeft: \"8px\" }}>\r\n                  Nhật ký luyện tập\r\n                </p>\r\n              </MenuItem>\r\n            </Link>\r\n            {this.props.user.role === \"mod\" ||\r\n            this.props.user.role === \"admin\" ? (\r\n              <Link to={`/admin`}>\r\n                <MenuItem\r\n                  selected={pathname === `${url}/admin`}\r\n                  onClick={this.onClickMenuItem(1)}\r\n                >\r\n                  <BallotIcon style={{ fontSize: 16 }} />\r\n                  <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Admin</p>\r\n                </MenuItem>\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {/* <Link to={`${url}/account`}>\r\n            <MenuItem\r\n              selected={pathname === `${url}/account`}\r\n              onClick={this.onClickMenuItem(1)}\r\n            >\r\n              <AccountBoxIcon style={{ fontSize: 16 }} />\r\n              <p style={{ fontSize: 14, marginLeft: \"3px\" }}>Thông tin cá nhân</p>\r\n            </MenuItem>\r\n          </Link> */}\r\n\r\n            <Grid\r\n              item\r\n              xs\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-end\",\r\n                marginBottom: \"65px\"\r\n              }}\r\n            >\r\n              <Link to={`${url}/account`}>\r\n                <MenuItem\r\n                  selected={pathname === `${url}/account`}\r\n                  onClick={this.onLogout}\r\n                >\r\n                  <PowerSettingsNewIcon style={{ fontSize: 16 }} />\r\n                  <p style={{ fontSize: 14, marginLeft: \"8px\" }}>Đăng xuất</p>\r\n                </MenuItem>\r\n              </Link>{\" \"}\r\n            </Grid>\r\n          </Grid>\r\n        </MenuList>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <AppBarContent />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav\r\n          className={` ${classes.drawerMain} drawerMain `}\r\n          aria-label=\"nav main\"\r\n        >\r\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Hidden smUp implementation=\"css\">\r\n            <Drawer\r\n              container={container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n              open={mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              ModalProps={{\r\n                keepMounted: true // Better open performance on mobile.\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <nav className={classes.navRight} aria-label=\"nav right\">\r\n          <NavRight />\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n\r\n          <Switch>\r\n            <Route exact path={path}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/overview`}>\r\n              <Overview url={url} />\r\n            </Route>\r\n            <Route path={`${path}/course`}>\r\n              <CourseBody url={url} />\r\n            </Route>\r\n            <Route path={`${path}/courses/:courseId/tasks`}>\r\n              <TaskBody location={this.props.location} />\r\n            </Route>\r\n            <Route path={`${path}/print`}>\r\n              <PrintBody  userData={this.props.user}/>\r\n            </Route>\r\n            {/* <Route path={`${path}/admin`}>\r\n              <ReactAdmin />\r\n            </Route> */}\r\n            <Route path={`${path}/account`}>\r\n              <Account />\r\n            </Route>\r\n            <Route exact path={`${path}/minitasks/createminitask`}>\r\n              <Paper style={{ padding: 10 }}>\r\n                <CreateMiniTask location={this.props.location} />\r\n              </Paper>\r\n            </Route>\r\n            {/* <Route exact path={`${path}/minitasks/:minitasksId/edit`}>\r\n              <Paper style={{ padding: 10 }}>\r\n                <MinitaskEdit location={this.props.location} />\r\n              </Paper>\r\n            </Route> */}\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors,\r\n  user: state.rootReducer.user\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { logoutUser })(ProfilePage)\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../js/actions/authActions\";\r\n\r\nimport \"./LoginPage.css\";\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#3f51b5\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#3f51b5\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#3f51b5\"\r\n      }\r\n    }\r\n  }\r\n})(TextField);\r\n\r\nconst styles = {\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"white\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: 50,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: 8,\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: 8\r\n  },\r\n  submit: {\r\n    margin: \"16px 0px\"\r\n  }\r\n};\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" to=\"/\">\r\n        hocodevn.com\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      remember: true,\r\n      isLoading: false,\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/profile\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      nextProps.errors.message = \"*\" + nextProps.errors.message;\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  handleChange = name => event => {\r\n    this.setState({ ...this.state, [name]: event.target.checked });\r\n  };\r\n\r\n  onSubmitTest = e => {\r\n    this.setState({\r\n      email: \"giang12\",\r\n      password: \"giang12\"\r\n    });\r\n  };\r\n\r\n  onSubmit  = async e =>  {\r\n    e.preventDefault();\r\n\r\n    this.setState({isLoading: true});\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      remember: this.state.remember\r\n    };\r\n\r\nvar loginF = Promise.all([this.props.loginUser(userData)]);\r\n\r\nloginF.then((val) => {\r\n  this.setState({isLoading: false});\r\n\r\n});\r\n\r\n\r\n  };\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Box\r\n            justifyContent=\"center\"\r\n            borderBottom={24}\r\n            color={\"rgba(255, 255, 255, 0.1)\"}\r\n          >\r\n            <div className=\"logo\">\r\n              <Link to=\"/profile\">\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/logo.png\"}\r\n                  alt=\"\"\r\n                  style={{ height: \"80px\" }}\r\n                ></img>\r\n              </Link>\r\n            </div>\r\n          </Box>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Đăng nhập\r\n          </Typography>\r\n\r\n          <form className={classes.form} noValidate onSubmit={this.onSubmit}>\r\n            <div>\r\n              <div className=\"error_show\">{errors.message}</div>\r\n            </div>\r\n\r\n            <CssTextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <CssTextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n            />\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      value=\"remember\"\r\n                      color=\"primary\"\r\n                      onChange={this.handleChange(\"remember\")}\r\n                      checked={this.state.remember}\r\n                    />\r\n                  }\r\n                  label=\"Lưu tài khoản\"\r\n                />\r\n              </Grid>\r\n              <Button variant=\"contained\" onClick={this.onSubmitTest}>\r\n                Tài khoản test\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {this.state.isLoading ? <CircularProgress size={22} color=\"#fff\" style={{ margin: 2, }} /> : \"Đăng nhập\" }\r\n             \r\n              \r\n\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"#\" variant=\"body2\">\r\n                  {/* Quên tài khoản */}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body1\" >\r\n                  {\"Nếu bạn chưa có tài khoản, Hãy đăng ký ngay\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"#\" variant=\"body2\"></Link>\r\n              </Grid>\r\n\r\n              <Grid item>\r\n              <Typography variant=\"subtitle1\">\r\n\r\n                <a\r\n                  href=\"https://docs.google.com/forms/d/e/1FAIpQLScGsL9g_Hot55sUbVHb0O7uBsWtkBrDE65fmETvflcxvuCdvw/viewform?usp=sf_link\"\r\n                  // variant=\"subtitle1\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  // ref={element => {\r\n                  //   if (element)\r\n                  //     element.style.setProperty(\r\n                  //       \"color\",\r\n                  //       \"#ff5722\",\r\n                  //       \"important\"\r\n                  //     );\r\n                  // }}\r\n                  style={{ textDecoration: \"none\", color: \"#ff5722!important\" }}\r\n                >\r\n                  Đăng ký trở thành giáo viên\r\n                </a>\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.rootReducer.auth,\r\n  errors: state.rootReducer.errors\r\n});\r\nexport default withStyles(styles)(\r\n  connect(mapStateToProps, { loginUser })(LoginPage)\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? ( // xet cho chô nay quyen voi username == giang moi dc cho vao router nay\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return ({\r\n  auth: state.rootReducer.auth,\r\n})};\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport CoursePage from \"./components/coursePage/CoursePage\";\r\nimport TaskPage from \"./components/taskPage/TaskPage\";\r\nimport MiniTaskPage from \"./components/minitaskPage/MinitaskPageResponsive\";\r\nimport HomePage from \"./components/homePage/HomePage\";\r\nimport SignUpPage from \"./components/signUpPage1/SignUpPage\";\r\nimport SearchCertPage from \"./components/searchCertPage/SearchCertPage\";\r\nimport ReactMde from \"./components/minitaskPage/ReactMde\";\r\nimport CreateMiniTask from \"./components/createMinitaskPage/CreateMiniTaskPage\";\r\nimport ReactAdmin from \"./components/adminPage/hocode/ReactAdmin\";\r\nimport ProfilePage from \"./components/profilePage/ProfilePage\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/store/store.js\";\r\nimport LoginPage from \"./components/loginPage1/LoginPage\";\r\nimport { setCurrentUser, logoutUser } from \"./js/actions/authActions\";\r\nimport setAuthToken from \"./js/utils/setAuthToken\";\r\nimport PrivateRoute from \"./private-route/PrivateRoute\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// Check for token to keep user logged in/ xet khi load lai trang\r\nif (localStorage.AuthToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.AuthToken;\r\n  setAuthToken(token);\r\n  const decoded = jwt_decode(token);\r\n  //console.log(decoded);\r\n  store.dispatch(setCurrentUser(decoded));\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Provider\r\n        // store={store}\r\n        store={store}\r\n      >\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={HomePage} />\r\n              <Route path=\"/home\" exact component={HomePage} />\r\n              <Route path=\"/login\" exact component={LoginPage} />\r\n              <Route path=\"/signup\" exact component={SignUpPage} />\r\n              <Route path=\"/reactmde\" exact component={ReactMde} />\r\n              <Route path=\"/searchcert\" component={SearchCertPage} />\r\n              <PrivateRoute path=\"/courses\" exact component={CoursePage} />\r\n              <PrivateRoute\r\n                path=\"/courses/:courseId/tasks\"\r\n                component={TaskPage}\r\n              />\r\n              <PrivateRoute\r\n                path=\"/tasks/:minitaskId\"\r\n                component={MiniTaskPage}\r\n              />\r\n              <Route path=\"/createminitask\" exact component={CreateMiniTask} />\r\n              <PrivateRoute path=\"/admin\" component={ReactAdmin} />\r\n              <PrivateRoute path=\"/profile\" component={ProfilePage} />\r\n              <Route render={() => <div>404 Page Not Found</div>} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as Sentry from '@sentry/browser';\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    // dev code\n} else {\n    // production code\n    Sentry.init({dsn: \"https://cd5ce2da28be4dcfaea42bfa2f637fba@sentry.io/1827293\"});\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/giphy.eb842a55.gif\";","module.exports = __webpack_public_path__ + \"static/media/play-button.8b3ac6fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/hoanthanh.c18c22ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/chuahoanthanh.a6ac73da.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b54be03d.png\";","module.exports = __webpack_public_path__ + \"static/media/hoanthanh.c18c22ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.316d47a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/chuahoanthanh.a6ac73da.svg\";","module.exports = __webpack_public_path__ + \"static/media/padlock-unlock.f593928a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.b54be03d.png\";"],"sourceRoot":""}